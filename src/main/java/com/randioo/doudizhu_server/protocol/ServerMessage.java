// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ServerMessage.proto

package com.randioo.doudizhu_server.protocol;

public final class ServerMessage {
  private ServerMessage() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public static final class SC extends
      com.google.protobuf.GeneratedMessage {
    // Use SC.newBuilder() to construct.
    private SC() {
      initFields();
    }
    private SC(boolean noInit) {}
    
    private static final SC defaultInstance;
    public static SC getDefaultInstance() {
      return defaultInstance;
    }
    
    public SC getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.randioo.doudizhu_server.protocol.ServerMessage.internal_static_com_randioo_doudizhu_server_protocol_SC_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.randioo.doudizhu_server.protocol.ServerMessage.internal_static_com_randioo_doudizhu_server_protocol_SC_fieldAccessorTable;
    }
    
    // optional .com.randioo.doudizhu_server.protocol.HeartResponse HeartResponse = 1;
    public static final int HEARTRESPONSE_FIELD_NUMBER = 1;
    private boolean hasHeartResponse;
    private com.randioo.doudizhu_server.protocol.Heart.HeartResponse heartResponse_;
    public boolean hasHeartResponse() { return hasHeartResponse; }
    public com.randioo.doudizhu_server.protocol.Heart.HeartResponse getHeartResponse() { return heartResponse_; }
    
    // optional .com.randioo.doudizhu_server.protocol.SCHeart SCHeart = 2;
    public static final int SCHEART_FIELD_NUMBER = 2;
    private boolean hasSCHeart;
    private com.randioo.doudizhu_server.protocol.Heart.SCHeart sCHeart_;
    public boolean hasSCHeart() { return hasSCHeart; }
    public com.randioo.doudizhu_server.protocol.Heart.SCHeart getSCHeart() { return sCHeart_; }
    
    // optional .com.randioo.doudizhu_server.protocol.LoginCheckAccountResponse LoginCheckAccountResponse = 3;
    public static final int LOGINCHECKACCOUNTRESPONSE_FIELD_NUMBER = 3;
    private boolean hasLoginCheckAccountResponse;
    private com.randioo.doudizhu_server.protocol.Login.LoginCheckAccountResponse loginCheckAccountResponse_;
    public boolean hasLoginCheckAccountResponse() { return hasLoginCheckAccountResponse; }
    public com.randioo.doudizhu_server.protocol.Login.LoginCheckAccountResponse getLoginCheckAccountResponse() { return loginCheckAccountResponse_; }
    
    // optional .com.randioo.doudizhu_server.protocol.LoginCreateRoleResponse LoginCreateRoleResponse = 4;
    public static final int LOGINCREATEROLERESPONSE_FIELD_NUMBER = 4;
    private boolean hasLoginCreateRoleResponse;
    private com.randioo.doudizhu_server.protocol.Login.LoginCreateRoleResponse loginCreateRoleResponse_;
    public boolean hasLoginCreateRoleResponse() { return hasLoginCreateRoleResponse; }
    public com.randioo.doudizhu_server.protocol.Login.LoginCreateRoleResponse getLoginCreateRoleResponse() { return loginCreateRoleResponse_; }
    
    // optional .com.randioo.doudizhu_server.protocol.LoginGetRoleDataResponse LoginGetRoleDataResponse = 5;
    public static final int LOGINGETROLEDATARESPONSE_FIELD_NUMBER = 5;
    private boolean hasLoginGetRoleDataResponse;
    private com.randioo.doudizhu_server.protocol.Login.LoginGetRoleDataResponse loginGetRoleDataResponse_;
    public boolean hasLoginGetRoleDataResponse() { return hasLoginGetRoleDataResponse; }
    public com.randioo.doudizhu_server.protocol.Login.LoginGetRoleDataResponse getLoginGetRoleDataResponse() { return loginGetRoleDataResponse_; }
    
    // optional .com.randioo.doudizhu_server.protocol.SCLoginGetRoleData SCLoginGetRoleData = 6;
    public static final int SCLOGINGETROLEDATA_FIELD_NUMBER = 6;
    private boolean hasSCLoginGetRoleData;
    private com.randioo.doudizhu_server.protocol.Login.SCLoginGetRoleData sCLoginGetRoleData_;
    public boolean hasSCLoginGetRoleData() { return hasSCLoginGetRoleData; }
    public com.randioo.doudizhu_server.protocol.Login.SCLoginGetRoleData getSCLoginGetRoleData() { return sCLoginGetRoleData_; }
    
    // optional .com.randioo.doudizhu_server.protocol.SCLoginOtherSide SCLoginOtherSide = 7;
    public static final int SCLOGINOTHERSIDE_FIELD_NUMBER = 7;
    private boolean hasSCLoginOtherSide;
    private com.randioo.doudizhu_server.protocol.Login.SCLoginOtherSide sCLoginOtherSide_;
    public boolean hasSCLoginOtherSide() { return hasSCLoginOtherSide; }
    public com.randioo.doudizhu_server.protocol.Login.SCLoginOtherSide getSCLoginOtherSide() { return sCLoginOtherSide_; }
    
    // optional .com.randioo.doudizhu_server.protocol.RoleRenameResponse RoleRenameResponse = 8;
    public static final int ROLERENAMERESPONSE_FIELD_NUMBER = 8;
    private boolean hasRoleRenameResponse;
    private com.randioo.doudizhu_server.protocol.Role.RoleRenameResponse roleRenameResponse_;
    public boolean hasRoleRenameResponse() { return hasRoleRenameResponse; }
    public com.randioo.doudizhu_server.protocol.Role.RoleRenameResponse getRoleRenameResponse() { return roleRenameResponse_; }
    
    // optional .com.randioo.doudizhu_server.protocol.MatchCreateGameResponse MatchCreateGameResponse = 9;
    public static final int MATCHCREATEGAMERESPONSE_FIELD_NUMBER = 9;
    private boolean hasMatchCreateGameResponse;
    private com.randioo.doudizhu_server.protocol.Match.MatchCreateGameResponse matchCreateGameResponse_;
    public boolean hasMatchCreateGameResponse() { return hasMatchCreateGameResponse; }
    public com.randioo.doudizhu_server.protocol.Match.MatchCreateGameResponse getMatchCreateGameResponse() { return matchCreateGameResponse_; }
    
    // optional .com.randioo.doudizhu_server.protocol.MatchJoinGameResponse MatchJoinGameResponse = 10;
    public static final int MATCHJOINGAMERESPONSE_FIELD_NUMBER = 10;
    private boolean hasMatchJoinGameResponse;
    private com.randioo.doudizhu_server.protocol.Match.MatchJoinGameResponse matchJoinGameResponse_;
    public boolean hasMatchJoinGameResponse() { return hasMatchJoinGameResponse; }
    public com.randioo.doudizhu_server.protocol.Match.MatchJoinGameResponse getMatchJoinGameResponse() { return matchJoinGameResponse_; }
    
    // optional .com.randioo.doudizhu_server.protocol.SCMatchJoinGame SCMatchJoinGame = 11;
    public static final int SCMATCHJOINGAME_FIELD_NUMBER = 11;
    private boolean hasSCMatchJoinGame;
    private com.randioo.doudizhu_server.protocol.Match.SCMatchJoinGame sCMatchJoinGame_;
    public boolean hasSCMatchJoinGame() { return hasSCMatchJoinGame; }
    public com.randioo.doudizhu_server.protocol.Match.SCMatchJoinGame getSCMatchJoinGame() { return sCMatchJoinGame_; }
    
    // optional .com.randioo.doudizhu_server.protocol.MatchRoleResponse MatchRoleResponse = 12;
    public static final int MATCHROLERESPONSE_FIELD_NUMBER = 12;
    private boolean hasMatchRoleResponse;
    private com.randioo.doudizhu_server.protocol.Match.MatchRoleResponse matchRoleResponse_;
    public boolean hasMatchRoleResponse() { return hasMatchRoleResponse; }
    public com.randioo.doudizhu_server.protocol.Match.MatchRoleResponse getMatchRoleResponse() { return matchRoleResponse_; }
    
    // optional .com.randioo.doudizhu_server.protocol.SCMatchRole SCMatchRole = 13;
    public static final int SCMATCHROLE_FIELD_NUMBER = 13;
    private boolean hasSCMatchRole;
    private com.randioo.doudizhu_server.protocol.Match.SCMatchRole sCMatchRole_;
    public boolean hasSCMatchRole() { return hasSCMatchRole; }
    public com.randioo.doudizhu_server.protocol.Match.SCMatchRole getSCMatchRole() { return sCMatchRole_; }
    
    // optional .com.randioo.doudizhu_server.protocol.MatchCancelResponse MatchCancelResponse = 14;
    public static final int MATCHCANCELRESPONSE_FIELD_NUMBER = 14;
    private boolean hasMatchCancelResponse;
    private com.randioo.doudizhu_server.protocol.Match.MatchCancelResponse matchCancelResponse_;
    public boolean hasMatchCancelResponse() { return hasMatchCancelResponse; }
    public com.randioo.doudizhu_server.protocol.Match.MatchCancelResponse getMatchCancelResponse() { return matchCancelResponse_; }
    
    // optional .com.randioo.doudizhu_server.protocol.SCMatchCreateGame SCMatchCreateGame = 15;
    public static final int SCMATCHCREATEGAME_FIELD_NUMBER = 15;
    private boolean hasSCMatchCreateGame;
    private com.randioo.doudizhu_server.protocol.Match.SCMatchCreateGame sCMatchCreateGame_;
    public boolean hasSCMatchCreateGame() { return hasSCMatchCreateGame; }
    public com.randioo.doudizhu_server.protocol.Match.SCMatchCreateGame getSCMatchCreateGame() { return sCMatchCreateGame_; }
    
    // optional .com.randioo.doudizhu_server.protocol.SCMatchAI SCMatchAI = 16;
    public static final int SCMATCHAI_FIELD_NUMBER = 16;
    private boolean hasSCMatchAI;
    private com.randioo.doudizhu_server.protocol.Match.SCMatchAI sCMatchAI_;
    public boolean hasSCMatchAI() { return hasSCMatchAI; }
    public com.randioo.doudizhu_server.protocol.Match.SCMatchAI getSCMatchAI() { return sCMatchAI_; }
    
    // optional .com.randioo.doudizhu_server.protocol.SCMatchJoinGameData SCMatchJoinGameData = 17;
    public static final int SCMATCHJOINGAMEDATA_FIELD_NUMBER = 17;
    private boolean hasSCMatchJoinGameData;
    private com.randioo.doudizhu_server.protocol.Match.SCMatchJoinGameData sCMatchJoinGameData_;
    public boolean hasSCMatchJoinGameData() { return hasSCMatchJoinGameData; }
    public com.randioo.doudizhu_server.protocol.Match.SCMatchJoinGameData getSCMatchJoinGameData() { return sCMatchJoinGameData_; }
    
    // optional .com.randioo.doudizhu_server.protocol.MatchAIResponse MatchAIResponse = 18;
    public static final int MATCHAIRESPONSE_FIELD_NUMBER = 18;
    private boolean hasMatchAIResponse;
    private com.randioo.doudizhu_server.protocol.Match.MatchAIResponse matchAIResponse_;
    public boolean hasMatchAIResponse() { return hasMatchAIResponse; }
    public com.randioo.doudizhu_server.protocol.Match.MatchAIResponse getMatchAIResponse() { return matchAIResponse_; }
    
    // optional .com.randioo.doudizhu_server.protocol.SCMatchOutOfTime SCMatchOutOfTime = 19;
    public static final int SCMATCHOUTOFTIME_FIELD_NUMBER = 19;
    private boolean hasSCMatchOutOfTime;
    private com.randioo.doudizhu_server.protocol.Match.SCMatchOutOfTime sCMatchOutOfTime_;
    public boolean hasSCMatchOutOfTime() { return hasSCMatchOutOfTime; }
    public com.randioo.doudizhu_server.protocol.Match.SCMatchOutOfTime getSCMatchOutOfTime() { return sCMatchOutOfTime_; }
    
    // optional .com.randioo.doudizhu_server.protocol.SCMatchCancelGame SCMatchCancelGame = 20;
    public static final int SCMATCHCANCELGAME_FIELD_NUMBER = 20;
    private boolean hasSCMatchCancelGame;
    private com.randioo.doudizhu_server.protocol.Match.SCMatchCancelGame sCMatchCancelGame_;
    public boolean hasSCMatchCancelGame() { return hasSCMatchCancelGame; }
    public com.randioo.doudizhu_server.protocol.Match.SCMatchCancelGame getSCMatchCancelGame() { return sCMatchCancelGame_; }
    
    // optional .com.randioo.doudizhu_server.protocol.MatchGetGameInfoResponse MatchGetGameInfoResponse = 21;
    public static final int MATCHGETGAMEINFORESPONSE_FIELD_NUMBER = 21;
    private boolean hasMatchGetGameInfoResponse;
    private com.randioo.doudizhu_server.protocol.Match.MatchGetGameInfoResponse matchGetGameInfoResponse_;
    public boolean hasMatchGetGameInfoResponse() { return hasMatchGetGameInfoResponse; }
    public com.randioo.doudizhu_server.protocol.Match.MatchGetGameInfoResponse getMatchGetGameInfoResponse() { return matchGetGameInfoResponse_; }
    
    // optional .com.randioo.doudizhu_server.protocol.FightReadyResponse FightReadyResponse = 22;
    public static final int FIGHTREADYRESPONSE_FIELD_NUMBER = 22;
    private boolean hasFightReadyResponse;
    private com.randioo.doudizhu_server.protocol.Fight.FightReadyResponse fightReadyResponse_;
    public boolean hasFightReadyResponse() { return hasFightReadyResponse; }
    public com.randioo.doudizhu_server.protocol.Fight.FightReadyResponse getFightReadyResponse() { return fightReadyResponse_; }
    
    // optional .com.randioo.doudizhu_server.protocol.SCFightReady SCFightReady = 23;
    public static final int SCFIGHTREADY_FIELD_NUMBER = 23;
    private boolean hasSCFightReady;
    private com.randioo.doudizhu_server.protocol.Fight.SCFightReady sCFightReady_;
    public boolean hasSCFightReady() { return hasSCFightReady; }
    public com.randioo.doudizhu_server.protocol.Fight.SCFightReady getSCFightReady() { return sCFightReady_; }
    
    // optional .com.randioo.doudizhu_server.protocol.SCFightStart SCFightStart = 24;
    public static final int SCFIGHTSTART_FIELD_NUMBER = 24;
    private boolean hasSCFightStart;
    private com.randioo.doudizhu_server.protocol.Fight.SCFightStart sCFightStart_;
    public boolean hasSCFightStart() { return hasSCFightStart; }
    public com.randioo.doudizhu_server.protocol.Fight.SCFightStart getSCFightStart() { return sCFightStart_; }
    
    // optional .com.randioo.doudizhu_server.protocol.FightExitGameResponse FightExitGameResponse = 25;
    public static final int FIGHTEXITGAMERESPONSE_FIELD_NUMBER = 25;
    private boolean hasFightExitGameResponse;
    private com.randioo.doudizhu_server.protocol.Fight.FightExitGameResponse fightExitGameResponse_;
    public boolean hasFightExitGameResponse() { return hasFightExitGameResponse; }
    public com.randioo.doudizhu_server.protocol.Fight.FightExitGameResponse getFightExitGameResponse() { return fightExitGameResponse_; }
    
    // optional .com.randioo.doudizhu_server.protocol.SCFightExitGame SCFightExitGame = 26;
    public static final int SCFIGHTEXITGAME_FIELD_NUMBER = 26;
    private boolean hasSCFightExitGame;
    private com.randioo.doudizhu_server.protocol.Fight.SCFightExitGame sCFightExitGame_;
    public boolean hasSCFightExitGame() { return hasSCFightExitGame; }
    public com.randioo.doudizhu_server.protocol.Fight.SCFightExitGame getSCFightExitGame() { return sCFightExitGame_; }
    
    // optional .com.randioo.doudizhu_server.protocol.SCFightApplyExitGame SCFightApplyExitGame = 27;
    public static final int SCFIGHTAPPLYEXITGAME_FIELD_NUMBER = 27;
    private boolean hasSCFightApplyExitGame;
    private com.randioo.doudizhu_server.protocol.Fight.SCFightApplyExitGame sCFightApplyExitGame_;
    public boolean hasSCFightApplyExitGame() { return hasSCFightApplyExitGame; }
    public com.randioo.doudizhu_server.protocol.Fight.SCFightApplyExitGame getSCFightApplyExitGame() { return sCFightApplyExitGame_; }
    
    // optional .com.randioo.doudizhu_server.protocol.FightAgreeExitGameResponse FightAgreeExitGameResponse = 28;
    public static final int FIGHTAGREEEXITGAMERESPONSE_FIELD_NUMBER = 28;
    private boolean hasFightAgreeExitGameResponse;
    private com.randioo.doudizhu_server.protocol.Fight.FightAgreeExitGameResponse fightAgreeExitGameResponse_;
    public boolean hasFightAgreeExitGameResponse() { return hasFightAgreeExitGameResponse; }
    public com.randioo.doudizhu_server.protocol.Fight.FightAgreeExitGameResponse getFightAgreeExitGameResponse() { return fightAgreeExitGameResponse_; }
    
    // optional .com.randioo.doudizhu_server.protocol.SCFightGameDismiss SCFightGameDismiss = 29;
    public static final int SCFIGHTGAMEDISMISS_FIELD_NUMBER = 29;
    private boolean hasSCFightGameDismiss;
    private com.randioo.doudizhu_server.protocol.Fight.SCFightGameDismiss sCFightGameDismiss_;
    public boolean hasSCFightGameDismiss() { return hasSCFightGameDismiss; }
    public com.randioo.doudizhu_server.protocol.Fight.SCFightGameDismiss getSCFightGameDismiss() { return sCFightGameDismiss_; }
    
    // optional .com.randioo.doudizhu_server.protocol.SCFightLoadResource SCFightLoadResource = 30;
    public static final int SCFIGHTLOADRESOURCE_FIELD_NUMBER = 30;
    private boolean hasSCFightLoadResource;
    private com.randioo.doudizhu_server.protocol.Fight.SCFightLoadResource sCFightLoadResource_;
    public boolean hasSCFightLoadResource() { return hasSCFightLoadResource; }
    public com.randioo.doudizhu_server.protocol.Fight.SCFightLoadResource getSCFightLoadResource() { return sCFightLoadResource_; }
    
    // optional .com.randioo.doudizhu_server.protocol.SCFightCallLandLord SCFightCallLandLord = 31;
    public static final int SCFIGHTCALLLANDLORD_FIELD_NUMBER = 31;
    private boolean hasSCFightCallLandLord;
    private com.randioo.doudizhu_server.protocol.Fight.SCFightCallLandLord sCFightCallLandLord_;
    public boolean hasSCFightCallLandLord() { return hasSCFightCallLandLord; }
    public com.randioo.doudizhu_server.protocol.Fight.SCFightCallLandLord getSCFightCallLandLord() { return sCFightCallLandLord_; }
    
    // optional .com.randioo.doudizhu_server.protocol.SCFightPutOut SCFightPutOut = 32;
    public static final int SCFIGHTPUTOUT_FIELD_NUMBER = 32;
    private boolean hasSCFightPutOut;
    private com.randioo.doudizhu_server.protocol.Fight.SCFightPutOut sCFightPutOut_;
    public boolean hasSCFightPutOut() { return hasSCFightPutOut; }
    public com.randioo.doudizhu_server.protocol.Fight.SCFightPutOut getSCFightPutOut() { return sCFightPutOut_; }
    
    // optional .com.randioo.doudizhu_server.protocol.SCFightLandLord SCFightLandLord = 33;
    public static final int SCFIGHTLANDLORD_FIELD_NUMBER = 33;
    private boolean hasSCFightLandLord;
    private com.randioo.doudizhu_server.protocol.Fight.SCFightLandLord sCFightLandLord_;
    public boolean hasSCFightLandLord() { return hasSCFightLandLord; }
    public com.randioo.doudizhu_server.protocol.Fight.SCFightLandLord getSCFightLandLord() { return sCFightLandLord_; }
    
    // optional .com.randioo.doudizhu_server.protocol.FightCallLandLordResponse FightCallLandLordResponse = 34;
    public static final int FIGHTCALLLANDLORDRESPONSE_FIELD_NUMBER = 34;
    private boolean hasFightCallLandLordResponse;
    private com.randioo.doudizhu_server.protocol.Fight.FightCallLandLordResponse fightCallLandLordResponse_;
    public boolean hasFightCallLandLordResponse() { return hasFightCallLandLordResponse; }
    public com.randioo.doudizhu_server.protocol.Fight.FightCallLandLordResponse getFightCallLandLordResponse() { return fightCallLandLordResponse_; }
    
    // optional .com.randioo.doudizhu_server.protocol.FightSendCardResponse FightSendCardResponse = 35;
    public static final int FIGHTSENDCARDRESPONSE_FIELD_NUMBER = 35;
    private boolean hasFightSendCardResponse;
    private com.randioo.doudizhu_server.protocol.Fight.FightSendCardResponse fightSendCardResponse_;
    public boolean hasFightSendCardResponse() { return hasFightSendCardResponse; }
    public com.randioo.doudizhu_server.protocol.Fight.FightSendCardResponse getFightSendCardResponse() { return fightSendCardResponse_; }
    
    // optional .com.randioo.doudizhu_server.protocol.SCFightPutOutPai SCFightPutOutPai = 36;
    public static final int SCFIGHTPUTOUTPAI_FIELD_NUMBER = 36;
    private boolean hasSCFightPutOutPai;
    private com.randioo.doudizhu_server.protocol.Fight.SCFightPutOutPai sCFightPutOutPai_;
    public boolean hasSCFightPutOutPai() { return hasSCFightPutOutPai; }
    public com.randioo.doudizhu_server.protocol.Fight.SCFightPutOutPai getSCFightPutOutPai() { return sCFightPutOutPai_; }
    
    // optional .com.randioo.doudizhu_server.protocol.SCFightMingPai SCFightMingPai = 37;
    public static final int SCFIGHTMINGPAI_FIELD_NUMBER = 37;
    private boolean hasSCFightMingPai;
    private com.randioo.doudizhu_server.protocol.Fight.SCFightMingPai sCFightMingPai_;
    public boolean hasSCFightMingPai() { return hasSCFightMingPai; }
    public com.randioo.doudizhu_server.protocol.Fight.SCFightMingPai getSCFightMingPai() { return sCFightMingPai_; }
    
    // optional .com.randioo.doudizhu_server.protocol.SCFightRoundOver SCFightRoundOver = 38;
    public static final int SCFIGHTROUNDOVER_FIELD_NUMBER = 38;
    private boolean hasSCFightRoundOver;
    private com.randioo.doudizhu_server.protocol.Fight.SCFightRoundOver sCFightRoundOver_;
    public boolean hasSCFightRoundOver() { return hasSCFightRoundOver; }
    public com.randioo.doudizhu_server.protocol.Fight.SCFightRoundOver getSCFightRoundOver() { return sCFightRoundOver_; }
    
    // optional .com.randioo.doudizhu_server.protocol.FightRecommandResponse FightRecommandResponse = 39;
    public static final int FIGHTRECOMMANDRESPONSE_FIELD_NUMBER = 39;
    private boolean hasFightRecommandResponse;
    private com.randioo.doudizhu_server.protocol.Fight.FightRecommandResponse fightRecommandResponse_;
    public boolean hasFightRecommandResponse() { return hasFightRecommandResponse; }
    public com.randioo.doudizhu_server.protocol.Fight.FightRecommandResponse getFightRecommandResponse() { return fightRecommandResponse_; }
    
    // optional .com.randioo.doudizhu_server.protocol.SCFightGameOver SCFightGameOver = 40;
    public static final int SCFIGHTGAMEOVER_FIELD_NUMBER = 40;
    private boolean hasSCFightGameOver;
    private com.randioo.doudizhu_server.protocol.Fight.SCFightGameOver sCFightGameOver_;
    public boolean hasSCFightGameOver() { return hasSCFightGameOver; }
    public com.randioo.doudizhu_server.protocol.Fight.SCFightGameOver getSCFightGameOver() { return sCFightGameOver_; }
    
    // optional .com.randioo.doudizhu_server.protocol.FightMingPaiResponse FightMingPaiResponse = 41;
    public static final int FIGHTMINGPAIRESPONSE_FIELD_NUMBER = 41;
    private boolean hasFightMingPaiResponse;
    private com.randioo.doudizhu_server.protocol.Fight.FightMingPaiResponse fightMingPaiResponse_;
    public boolean hasFightMingPaiResponse() { return hasFightMingPaiResponse; }
    public com.randioo.doudizhu_server.protocol.Fight.FightMingPaiResponse getFightMingPaiResponse() { return fightMingPaiResponse_; }
    
    // optional .com.randioo.doudizhu_server.protocol.FightGetlastRoundResponse FightGetlastRoundResponse = 42;
    public static final int FIGHTGETLASTROUNDRESPONSE_FIELD_NUMBER = 42;
    private boolean hasFightGetlastRoundResponse;
    private com.randioo.doudizhu_server.protocol.Fight.FightGetlastRoundResponse fightGetlastRoundResponse_;
    public boolean hasFightGetlastRoundResponse() { return hasFightGetlastRoundResponse; }
    public com.randioo.doudizhu_server.protocol.Fight.FightGetlastRoundResponse getFightGetlastRoundResponse() { return fightGetlastRoundResponse_; }
    
    // optional .com.randioo.doudizhu_server.protocol.SCFightLastRoundReady SCFightLastRoundReady = 43;
    public static final int SCFIGHTLASTROUNDREADY_FIELD_NUMBER = 43;
    private boolean hasSCFightLastRoundReady;
    private com.randioo.doudizhu_server.protocol.Fight.SCFightLastRoundReady sCFightLastRoundReady_;
    public boolean hasSCFightLastRoundReady() { return hasSCFightLastRoundReady; }
    public com.randioo.doudizhu_server.protocol.Fight.SCFightLastRoundReady getSCFightLastRoundReady() { return sCFightLastRoundReady_; }
    
    // optional .com.randioo.doudizhu_server.protocol.FightRejoinResponse FightRejoinResponse = 44;
    public static final int FIGHTREJOINRESPONSE_FIELD_NUMBER = 44;
    private boolean hasFightRejoinResponse;
    private com.randioo.doudizhu_server.protocol.Fight.FightRejoinResponse fightRejoinResponse_;
    public boolean hasFightRejoinResponse() { return hasFightRejoinResponse; }
    public com.randioo.doudizhu_server.protocol.Fight.FightRejoinResponse getFightRejoinResponse() { return fightRejoinResponse_; }
    
    // optional .com.randioo.doudizhu_server.protocol.SCFightDisconnect SCFightDisconnect = 45;
    public static final int SCFIGHTDISCONNECT_FIELD_NUMBER = 45;
    private boolean hasSCFightDisconnect;
    private com.randioo.doudizhu_server.protocol.Fight.SCFightDisconnect sCFightDisconnect_;
    public boolean hasSCFightDisconnect() { return hasSCFightDisconnect; }
    public com.randioo.doudizhu_server.protocol.Fight.SCFightDisconnect getSCFightDisconnect() { return sCFightDisconnect_; }
    
    // optional .com.randioo.doudizhu_server.protocol.SCFightRejoin SCFightRejoin = 46;
    public static final int SCFIGHTREJOIN_FIELD_NUMBER = 46;
    private boolean hasSCFightRejoin;
    private com.randioo.doudizhu_server.protocol.Fight.SCFightRejoin sCFightRejoin_;
    public boolean hasSCFightRejoin() { return hasSCFightRejoin; }
    public com.randioo.doudizhu_server.protocol.Fight.SCFightRejoin getSCFightRejoin() { return sCFightRejoin_; }
    
    // optional .com.randioo.doudizhu_server.protocol.SCFightApplyExitResult SCFightApplyExitResult = 47;
    public static final int SCFIGHTAPPLYEXITRESULT_FIELD_NUMBER = 47;
    private boolean hasSCFightApplyExitResult;
    private com.randioo.doudizhu_server.protocol.Fight.SCFightApplyExitResult sCFightApplyExitResult_;
    public boolean hasSCFightApplyExitResult() { return hasSCFightApplyExitResult; }
    public com.randioo.doudizhu_server.protocol.Fight.SCFightApplyExitResult getSCFightApplyExitResult() { return sCFightApplyExitResult_; }
    
    // optional .com.randioo.doudizhu_server.protocol.FightAutoResponse FightAutoResponse = 48;
    public static final int FIGHTAUTORESPONSE_FIELD_NUMBER = 48;
    private boolean hasFightAutoResponse;
    private com.randioo.doudizhu_server.protocol.Fight.FightAutoResponse fightAutoResponse_;
    public boolean hasFightAutoResponse() { return hasFightAutoResponse; }
    public com.randioo.doudizhu_server.protocol.Fight.FightAutoResponse getFightAutoResponse() { return fightAutoResponse_; }
    
    // optional .com.randioo.doudizhu_server.protocol.SCFightAuto SCFightAuto = 49;
    public static final int SCFIGHTAUTO_FIELD_NUMBER = 49;
    private boolean hasSCFightAuto;
    private com.randioo.doudizhu_server.protocol.Fight.SCFightAuto sCFightAuto_;
    public boolean hasSCFightAuto() { return hasSCFightAuto; }
    public com.randioo.doudizhu_server.protocol.Fight.SCFightAuto getSCFightAuto() { return sCFightAuto_; }
    
    // optional .com.randioo.doudizhu_server.protocol.SCFightFinishRejoin SCFightFinishRejoin = 50;
    public static final int SCFIGHTFINISHREJOIN_FIELD_NUMBER = 50;
    private boolean hasSCFightFinishRejoin;
    private com.randioo.doudizhu_server.protocol.Fight.SCFightFinishRejoin sCFightFinishRejoin_;
    public boolean hasSCFightFinishRejoin() { return hasSCFightFinishRejoin; }
    public com.randioo.doudizhu_server.protocol.Fight.SCFightFinishRejoin getSCFightFinishRejoin() { return sCFightFinishRejoin_; }
    
    // optional .com.randioo.doudizhu_server.protocol.FightApplyExitGameResponse FightApplyExitGameResponse = 51;
    public static final int FIGHTAPPLYEXITGAMERESPONSE_FIELD_NUMBER = 51;
    private boolean hasFightApplyExitGameResponse;
    private com.randioo.doudizhu_server.protocol.Fight.FightApplyExitGameResponse fightApplyExitGameResponse_;
    public boolean hasFightApplyExitGameResponse() { return hasFightApplyExitGameResponse; }
    public com.randioo.doudizhu_server.protocol.Fight.FightApplyExitGameResponse getFightApplyExitGameResponse() { return fightApplyExitGameResponse_; }
    
    // optional .com.randioo.doudizhu_server.protocol.SCFightCallFen SCFightCallFen = 52;
    public static final int SCFIGHTCALLFEN_FIELD_NUMBER = 52;
    private boolean hasSCFightCallFen;
    private com.randioo.doudizhu_server.protocol.Fight.SCFightCallFen sCFightCallFen_;
    public boolean hasSCFightCallFen() { return hasSCFightCallFen; }
    public com.randioo.doudizhu_server.protocol.Fight.SCFightCallFen getSCFightCallFen() { return sCFightCallFen_; }
    
    // optional .com.randioo.doudizhu_server.protocol.FightBackMenuResponse FightBackMenuResponse = 53;
    public static final int FIGHTBACKMENURESPONSE_FIELD_NUMBER = 53;
    private boolean hasFightBackMenuResponse;
    private com.randioo.doudizhu_server.protocol.Fight.FightBackMenuResponse fightBackMenuResponse_;
    public boolean hasFightBackMenuResponse() { return hasFightBackMenuResponse; }
    public com.randioo.doudizhu_server.protocol.Fight.FightBackMenuResponse getFightBackMenuResponse() { return fightBackMenuResponse_; }
    
    // optional .com.randioo.doudizhu_server.protocol.SCFightCurrentScore SCFightCurrentScore = 54;
    public static final int SCFIGHTCURRENTSCORE_FIELD_NUMBER = 54;
    private boolean hasSCFightCurrentScore;
    private com.randioo.doudizhu_server.protocol.Fight.SCFightCurrentScore sCFightCurrentScore_;
    public boolean hasSCFightCurrentScore() { return hasSCFightCurrentScore; }
    public com.randioo.doudizhu_server.protocol.Fight.SCFightCurrentScore getSCFightCurrentScore() { return sCFightCurrentScore_; }
    
    // optional .com.randioo.doudizhu_server.protocol.FightGameInfoResponse FightGameInfoResponse = 55;
    public static final int FIGHTGAMEINFORESPONSE_FIELD_NUMBER = 55;
    private boolean hasFightGameInfoResponse;
    private com.randioo.doudizhu_server.protocol.Fight.FightGameInfoResponse fightGameInfoResponse_;
    public boolean hasFightGameInfoResponse() { return hasFightGameInfoResponse; }
    public com.randioo.doudizhu_server.protocol.Fight.FightGameInfoResponse getFightGameInfoResponse() { return fightGameInfoResponse_; }
    
    // optional .com.randioo.doudizhu_server.protocol.SCFightMingPaiOnOrOff SCFightMingPaiOnOrOff = 56;
    public static final int SCFIGHTMINGPAIONOROFF_FIELD_NUMBER = 56;
    private boolean hasSCFightMingPaiOnOrOff;
    private com.randioo.doudizhu_server.protocol.Fight.SCFightMingPaiOnOrOff sCFightMingPaiOnOrOff_;
    public boolean hasSCFightMingPaiOnOrOff() { return hasSCFightMingPaiOnOrOff; }
    public com.randioo.doudizhu_server.protocol.Fight.SCFightMingPaiOnOrOff getSCFightMingPaiOnOrOff() { return sCFightMingPaiOnOrOff_; }
    
    // optional .com.randioo.doudizhu_server.protocol.SCFightSpring SCFightSpring = 57;
    public static final int SCFIGHTSPRING_FIELD_NUMBER = 57;
    private boolean hasSCFightSpring;
    private com.randioo.doudizhu_server.protocol.Fight.SCFightSpring sCFightSpring_;
    public boolean hasSCFightSpring() { return hasSCFightSpring; }
    public com.randioo.doudizhu_server.protocol.Fight.SCFightSpring getSCFightSpring() { return sCFightSpring_; }
    
    // optional .com.randioo.doudizhu_server.protocol.MoneyExchangeResponse MoneyExchangeResponse = 58;
    public static final int MONEYEXCHANGERESPONSE_FIELD_NUMBER = 58;
    private boolean hasMoneyExchangeResponse;
    private com.randioo.doudizhu_server.protocol.MoneyExchange.MoneyExchangeResponse moneyExchangeResponse_;
    public boolean hasMoneyExchangeResponse() { return hasMoneyExchangeResponse; }
    public com.randioo.doudizhu_server.protocol.MoneyExchange.MoneyExchangeResponse getMoneyExchangeResponse() { return moneyExchangeResponse_; }
    
    // optional .com.randioo.doudizhu_server.protocol.SettingsResponse SettingsResponse = 59;
    public static final int SETTINGSRESPONSE_FIELD_NUMBER = 59;
    private boolean hasSettingsResponse;
    private com.randioo.doudizhu_server.protocol.Settings.SettingsResponse settingsResponse_;
    public boolean hasSettingsResponse() { return hasSettingsResponse; }
    public com.randioo.doudizhu_server.protocol.Settings.SettingsResponse getSettingsResponse() { return settingsResponse_; }
    
    // optional .com.randioo.doudizhu_server.protocol.GetRoleDataResponse GetRoleDataResponse = 60;
    public static final int GETROLEDATARESPONSE_FIELD_NUMBER = 60;
    private boolean hasGetRoleDataResponse;
    private com.randioo.doudizhu_server.protocol.Role.GetRoleDataResponse getRoleDataResponse_;
    public boolean hasGetRoleDataResponse() { return hasGetRoleDataResponse; }
    public com.randioo.doudizhu_server.protocol.Role.GetRoleDataResponse getGetRoleDataResponse() { return getRoleDataResponse_; }
    
    // optional .com.randioo.doudizhu_server.protocol.GetSettingsResponse GetSettingsResponse = 61;
    public static final int GETSETTINGSRESPONSE_FIELD_NUMBER = 61;
    private boolean hasGetSettingsResponse;
    private com.randioo.doudizhu_server.protocol.Settings.GetSettingsResponse getSettingsResponse_;
    public boolean hasGetSettingsResponse() { return hasGetSettingsResponse; }
    public com.randioo.doudizhu_server.protocol.Settings.GetSettingsResponse getGetSettingsResponse() { return getSettingsResponse_; }
    
    // optional .com.randioo.doudizhu_server.protocol.HeartbeatResponse HeartbeatResponse = 62;
    public static final int HEARTBEATRESPONSE_FIELD_NUMBER = 62;
    private boolean hasHeartbeatResponse;
    private com.randioo.doudizhu_server.protocol.Heartbeat.HeartbeatResponse heartbeatResponse_;
    public boolean hasHeartbeatResponse() { return hasHeartbeatResponse; }
    public com.randioo.doudizhu_server.protocol.Heartbeat.HeartbeatResponse getHeartbeatResponse() { return heartbeatResponse_; }
    
    // optional .com.randioo.doudizhu_server.protocol.VideoGetResponse VideoGetResponse = 63;
    public static final int VIDEOGETRESPONSE_FIELD_NUMBER = 63;
    private boolean hasVideoGetResponse;
    private com.randioo.doudizhu_server.protocol.Video.VideoGetResponse videoGetResponse_;
    public boolean hasVideoGetResponse() { return hasVideoGetResponse; }
    public com.randioo.doudizhu_server.protocol.Video.VideoGetResponse getVideoGetResponse() { return videoGetResponse_; }
    
    // optional .com.randioo.doudizhu_server.protocol.VideoGetByIdResponse VideoGetByIdResponse = 64;
    public static final int VIDEOGETBYIDRESPONSE_FIELD_NUMBER = 64;
    private boolean hasVideoGetByIdResponse;
    private com.randioo.doudizhu_server.protocol.Video.VideoGetByIdResponse videoGetByIdResponse_;
    public boolean hasVideoGetByIdResponse() { return hasVideoGetByIdResponse; }
    public com.randioo.doudizhu_server.protocol.Video.VideoGetByIdResponse getVideoGetByIdResponse() { return videoGetByIdResponse_; }
    
    // optional .com.randioo.doudizhu_server.protocol.VideoGetByRoundResponse VideoGetByRoundResponse = 65;
    public static final int VIDEOGETBYROUNDRESPONSE_FIELD_NUMBER = 65;
    private boolean hasVideoGetByRoundResponse;
    private com.randioo.doudizhu_server.protocol.Video.VideoGetByRoundResponse videoGetByRoundResponse_;
    public boolean hasVideoGetByRoundResponse() { return hasVideoGetByRoundResponse; }
    public com.randioo.doudizhu_server.protocol.Video.VideoGetByRoundResponse getVideoGetByRoundResponse() { return videoGetByRoundResponse_; }
    
    private void initFields() {
      heartResponse_ = com.randioo.doudizhu_server.protocol.Heart.HeartResponse.getDefaultInstance();
      sCHeart_ = com.randioo.doudizhu_server.protocol.Heart.SCHeart.getDefaultInstance();
      loginCheckAccountResponse_ = com.randioo.doudizhu_server.protocol.Login.LoginCheckAccountResponse.getDefaultInstance();
      loginCreateRoleResponse_ = com.randioo.doudizhu_server.protocol.Login.LoginCreateRoleResponse.getDefaultInstance();
      loginGetRoleDataResponse_ = com.randioo.doudizhu_server.protocol.Login.LoginGetRoleDataResponse.getDefaultInstance();
      sCLoginGetRoleData_ = com.randioo.doudizhu_server.protocol.Login.SCLoginGetRoleData.getDefaultInstance();
      sCLoginOtherSide_ = com.randioo.doudizhu_server.protocol.Login.SCLoginOtherSide.getDefaultInstance();
      roleRenameResponse_ = com.randioo.doudizhu_server.protocol.Role.RoleRenameResponse.getDefaultInstance();
      matchCreateGameResponse_ = com.randioo.doudizhu_server.protocol.Match.MatchCreateGameResponse.getDefaultInstance();
      matchJoinGameResponse_ = com.randioo.doudizhu_server.protocol.Match.MatchJoinGameResponse.getDefaultInstance();
      sCMatchJoinGame_ = com.randioo.doudizhu_server.protocol.Match.SCMatchJoinGame.getDefaultInstance();
      matchRoleResponse_ = com.randioo.doudizhu_server.protocol.Match.MatchRoleResponse.getDefaultInstance();
      sCMatchRole_ = com.randioo.doudizhu_server.protocol.Match.SCMatchRole.getDefaultInstance();
      matchCancelResponse_ = com.randioo.doudizhu_server.protocol.Match.MatchCancelResponse.getDefaultInstance();
      sCMatchCreateGame_ = com.randioo.doudizhu_server.protocol.Match.SCMatchCreateGame.getDefaultInstance();
      sCMatchAI_ = com.randioo.doudizhu_server.protocol.Match.SCMatchAI.getDefaultInstance();
      sCMatchJoinGameData_ = com.randioo.doudizhu_server.protocol.Match.SCMatchJoinGameData.getDefaultInstance();
      matchAIResponse_ = com.randioo.doudizhu_server.protocol.Match.MatchAIResponse.getDefaultInstance();
      sCMatchOutOfTime_ = com.randioo.doudizhu_server.protocol.Match.SCMatchOutOfTime.getDefaultInstance();
      sCMatchCancelGame_ = com.randioo.doudizhu_server.protocol.Match.SCMatchCancelGame.getDefaultInstance();
      matchGetGameInfoResponse_ = com.randioo.doudizhu_server.protocol.Match.MatchGetGameInfoResponse.getDefaultInstance();
      fightReadyResponse_ = com.randioo.doudizhu_server.protocol.Fight.FightReadyResponse.getDefaultInstance();
      sCFightReady_ = com.randioo.doudizhu_server.protocol.Fight.SCFightReady.getDefaultInstance();
      sCFightStart_ = com.randioo.doudizhu_server.protocol.Fight.SCFightStart.getDefaultInstance();
      fightExitGameResponse_ = com.randioo.doudizhu_server.protocol.Fight.FightExitGameResponse.getDefaultInstance();
      sCFightExitGame_ = com.randioo.doudizhu_server.protocol.Fight.SCFightExitGame.getDefaultInstance();
      sCFightApplyExitGame_ = com.randioo.doudizhu_server.protocol.Fight.SCFightApplyExitGame.getDefaultInstance();
      fightAgreeExitGameResponse_ = com.randioo.doudizhu_server.protocol.Fight.FightAgreeExitGameResponse.getDefaultInstance();
      sCFightGameDismiss_ = com.randioo.doudizhu_server.protocol.Fight.SCFightGameDismiss.getDefaultInstance();
      sCFightLoadResource_ = com.randioo.doudizhu_server.protocol.Fight.SCFightLoadResource.getDefaultInstance();
      sCFightCallLandLord_ = com.randioo.doudizhu_server.protocol.Fight.SCFightCallLandLord.getDefaultInstance();
      sCFightPutOut_ = com.randioo.doudizhu_server.protocol.Fight.SCFightPutOut.getDefaultInstance();
      sCFightLandLord_ = com.randioo.doudizhu_server.protocol.Fight.SCFightLandLord.getDefaultInstance();
      fightCallLandLordResponse_ = com.randioo.doudizhu_server.protocol.Fight.FightCallLandLordResponse.getDefaultInstance();
      fightSendCardResponse_ = com.randioo.doudizhu_server.protocol.Fight.FightSendCardResponse.getDefaultInstance();
      sCFightPutOutPai_ = com.randioo.doudizhu_server.protocol.Fight.SCFightPutOutPai.getDefaultInstance();
      sCFightMingPai_ = com.randioo.doudizhu_server.protocol.Fight.SCFightMingPai.getDefaultInstance();
      sCFightRoundOver_ = com.randioo.doudizhu_server.protocol.Fight.SCFightRoundOver.getDefaultInstance();
      fightRecommandResponse_ = com.randioo.doudizhu_server.protocol.Fight.FightRecommandResponse.getDefaultInstance();
      sCFightGameOver_ = com.randioo.doudizhu_server.protocol.Fight.SCFightGameOver.getDefaultInstance();
      fightMingPaiResponse_ = com.randioo.doudizhu_server.protocol.Fight.FightMingPaiResponse.getDefaultInstance();
      fightGetlastRoundResponse_ = com.randioo.doudizhu_server.protocol.Fight.FightGetlastRoundResponse.getDefaultInstance();
      sCFightLastRoundReady_ = com.randioo.doudizhu_server.protocol.Fight.SCFightLastRoundReady.getDefaultInstance();
      fightRejoinResponse_ = com.randioo.doudizhu_server.protocol.Fight.FightRejoinResponse.getDefaultInstance();
      sCFightDisconnect_ = com.randioo.doudizhu_server.protocol.Fight.SCFightDisconnect.getDefaultInstance();
      sCFightRejoin_ = com.randioo.doudizhu_server.protocol.Fight.SCFightRejoin.getDefaultInstance();
      sCFightApplyExitResult_ = com.randioo.doudizhu_server.protocol.Fight.SCFightApplyExitResult.getDefaultInstance();
      fightAutoResponse_ = com.randioo.doudizhu_server.protocol.Fight.FightAutoResponse.getDefaultInstance();
      sCFightAuto_ = com.randioo.doudizhu_server.protocol.Fight.SCFightAuto.getDefaultInstance();
      sCFightFinishRejoin_ = com.randioo.doudizhu_server.protocol.Fight.SCFightFinishRejoin.getDefaultInstance();
      fightApplyExitGameResponse_ = com.randioo.doudizhu_server.protocol.Fight.FightApplyExitGameResponse.getDefaultInstance();
      sCFightCallFen_ = com.randioo.doudizhu_server.protocol.Fight.SCFightCallFen.getDefaultInstance();
      fightBackMenuResponse_ = com.randioo.doudizhu_server.protocol.Fight.FightBackMenuResponse.getDefaultInstance();
      sCFightCurrentScore_ = com.randioo.doudizhu_server.protocol.Fight.SCFightCurrentScore.getDefaultInstance();
      fightGameInfoResponse_ = com.randioo.doudizhu_server.protocol.Fight.FightGameInfoResponse.getDefaultInstance();
      sCFightMingPaiOnOrOff_ = com.randioo.doudizhu_server.protocol.Fight.SCFightMingPaiOnOrOff.getDefaultInstance();
      sCFightSpring_ = com.randioo.doudizhu_server.protocol.Fight.SCFightSpring.getDefaultInstance();
      moneyExchangeResponse_ = com.randioo.doudizhu_server.protocol.MoneyExchange.MoneyExchangeResponse.getDefaultInstance();
      settingsResponse_ = com.randioo.doudizhu_server.protocol.Settings.SettingsResponse.getDefaultInstance();
      getRoleDataResponse_ = com.randioo.doudizhu_server.protocol.Role.GetRoleDataResponse.getDefaultInstance();
      getSettingsResponse_ = com.randioo.doudizhu_server.protocol.Settings.GetSettingsResponse.getDefaultInstance();
      heartbeatResponse_ = com.randioo.doudizhu_server.protocol.Heartbeat.HeartbeatResponse.getDefaultInstance();
      videoGetResponse_ = com.randioo.doudizhu_server.protocol.Video.VideoGetResponse.getDefaultInstance();
      videoGetByIdResponse_ = com.randioo.doudizhu_server.protocol.Video.VideoGetByIdResponse.getDefaultInstance();
      videoGetByRoundResponse_ = com.randioo.doudizhu_server.protocol.Video.VideoGetByRoundResponse.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (hasSCHeart()) {
        if (!getSCHeart().isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasHeartResponse()) {
        output.writeMessage(1, getHeartResponse());
      }
      if (hasSCHeart()) {
        output.writeMessage(2, getSCHeart());
      }
      if (hasLoginCheckAccountResponse()) {
        output.writeMessage(3, getLoginCheckAccountResponse());
      }
      if (hasLoginCreateRoleResponse()) {
        output.writeMessage(4, getLoginCreateRoleResponse());
      }
      if (hasLoginGetRoleDataResponse()) {
        output.writeMessage(5, getLoginGetRoleDataResponse());
      }
      if (hasSCLoginGetRoleData()) {
        output.writeMessage(6, getSCLoginGetRoleData());
      }
      if (hasSCLoginOtherSide()) {
        output.writeMessage(7, getSCLoginOtherSide());
      }
      if (hasRoleRenameResponse()) {
        output.writeMessage(8, getRoleRenameResponse());
      }
      if (hasMatchCreateGameResponse()) {
        output.writeMessage(9, getMatchCreateGameResponse());
      }
      if (hasMatchJoinGameResponse()) {
        output.writeMessage(10, getMatchJoinGameResponse());
      }
      if (hasSCMatchJoinGame()) {
        output.writeMessage(11, getSCMatchJoinGame());
      }
      if (hasMatchRoleResponse()) {
        output.writeMessage(12, getMatchRoleResponse());
      }
      if (hasSCMatchRole()) {
        output.writeMessage(13, getSCMatchRole());
      }
      if (hasMatchCancelResponse()) {
        output.writeMessage(14, getMatchCancelResponse());
      }
      if (hasSCMatchCreateGame()) {
        output.writeMessage(15, getSCMatchCreateGame());
      }
      if (hasSCMatchAI()) {
        output.writeMessage(16, getSCMatchAI());
      }
      if (hasSCMatchJoinGameData()) {
        output.writeMessage(17, getSCMatchJoinGameData());
      }
      if (hasMatchAIResponse()) {
        output.writeMessage(18, getMatchAIResponse());
      }
      if (hasSCMatchOutOfTime()) {
        output.writeMessage(19, getSCMatchOutOfTime());
      }
      if (hasSCMatchCancelGame()) {
        output.writeMessage(20, getSCMatchCancelGame());
      }
      if (hasMatchGetGameInfoResponse()) {
        output.writeMessage(21, getMatchGetGameInfoResponse());
      }
      if (hasFightReadyResponse()) {
        output.writeMessage(22, getFightReadyResponse());
      }
      if (hasSCFightReady()) {
        output.writeMessage(23, getSCFightReady());
      }
      if (hasSCFightStart()) {
        output.writeMessage(24, getSCFightStart());
      }
      if (hasFightExitGameResponse()) {
        output.writeMessage(25, getFightExitGameResponse());
      }
      if (hasSCFightExitGame()) {
        output.writeMessage(26, getSCFightExitGame());
      }
      if (hasSCFightApplyExitGame()) {
        output.writeMessage(27, getSCFightApplyExitGame());
      }
      if (hasFightAgreeExitGameResponse()) {
        output.writeMessage(28, getFightAgreeExitGameResponse());
      }
      if (hasSCFightGameDismiss()) {
        output.writeMessage(29, getSCFightGameDismiss());
      }
      if (hasSCFightLoadResource()) {
        output.writeMessage(30, getSCFightLoadResource());
      }
      if (hasSCFightCallLandLord()) {
        output.writeMessage(31, getSCFightCallLandLord());
      }
      if (hasSCFightPutOut()) {
        output.writeMessage(32, getSCFightPutOut());
      }
      if (hasSCFightLandLord()) {
        output.writeMessage(33, getSCFightLandLord());
      }
      if (hasFightCallLandLordResponse()) {
        output.writeMessage(34, getFightCallLandLordResponse());
      }
      if (hasFightSendCardResponse()) {
        output.writeMessage(35, getFightSendCardResponse());
      }
      if (hasSCFightPutOutPai()) {
        output.writeMessage(36, getSCFightPutOutPai());
      }
      if (hasSCFightMingPai()) {
        output.writeMessage(37, getSCFightMingPai());
      }
      if (hasSCFightRoundOver()) {
        output.writeMessage(38, getSCFightRoundOver());
      }
      if (hasFightRecommandResponse()) {
        output.writeMessage(39, getFightRecommandResponse());
      }
      if (hasSCFightGameOver()) {
        output.writeMessage(40, getSCFightGameOver());
      }
      if (hasFightMingPaiResponse()) {
        output.writeMessage(41, getFightMingPaiResponse());
      }
      if (hasFightGetlastRoundResponse()) {
        output.writeMessage(42, getFightGetlastRoundResponse());
      }
      if (hasSCFightLastRoundReady()) {
        output.writeMessage(43, getSCFightLastRoundReady());
      }
      if (hasFightRejoinResponse()) {
        output.writeMessage(44, getFightRejoinResponse());
      }
      if (hasSCFightDisconnect()) {
        output.writeMessage(45, getSCFightDisconnect());
      }
      if (hasSCFightRejoin()) {
        output.writeMessage(46, getSCFightRejoin());
      }
      if (hasSCFightApplyExitResult()) {
        output.writeMessage(47, getSCFightApplyExitResult());
      }
      if (hasFightAutoResponse()) {
        output.writeMessage(48, getFightAutoResponse());
      }
      if (hasSCFightAuto()) {
        output.writeMessage(49, getSCFightAuto());
      }
      if (hasSCFightFinishRejoin()) {
        output.writeMessage(50, getSCFightFinishRejoin());
      }
      if (hasFightApplyExitGameResponse()) {
        output.writeMessage(51, getFightApplyExitGameResponse());
      }
      if (hasSCFightCallFen()) {
        output.writeMessage(52, getSCFightCallFen());
      }
      if (hasFightBackMenuResponse()) {
        output.writeMessage(53, getFightBackMenuResponse());
      }
      if (hasSCFightCurrentScore()) {
        output.writeMessage(54, getSCFightCurrentScore());
      }
      if (hasFightGameInfoResponse()) {
        output.writeMessage(55, getFightGameInfoResponse());
      }
      if (hasSCFightMingPaiOnOrOff()) {
        output.writeMessage(56, getSCFightMingPaiOnOrOff());
      }
      if (hasSCFightSpring()) {
        output.writeMessage(57, getSCFightSpring());
      }
      if (hasMoneyExchangeResponse()) {
        output.writeMessage(58, getMoneyExchangeResponse());
      }
      if (hasSettingsResponse()) {
        output.writeMessage(59, getSettingsResponse());
      }
      if (hasGetRoleDataResponse()) {
        output.writeMessage(60, getGetRoleDataResponse());
      }
      if (hasGetSettingsResponse()) {
        output.writeMessage(61, getGetSettingsResponse());
      }
      if (hasHeartbeatResponse()) {
        output.writeMessage(62, getHeartbeatResponse());
      }
      if (hasVideoGetResponse()) {
        output.writeMessage(63, getVideoGetResponse());
      }
      if (hasVideoGetByIdResponse()) {
        output.writeMessage(64, getVideoGetByIdResponse());
      }
      if (hasVideoGetByRoundResponse()) {
        output.writeMessage(65, getVideoGetByRoundResponse());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasHeartResponse()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getHeartResponse());
      }
      if (hasSCHeart()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getSCHeart());
      }
      if (hasLoginCheckAccountResponse()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getLoginCheckAccountResponse());
      }
      if (hasLoginCreateRoleResponse()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getLoginCreateRoleResponse());
      }
      if (hasLoginGetRoleDataResponse()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getLoginGetRoleDataResponse());
      }
      if (hasSCLoginGetRoleData()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getSCLoginGetRoleData());
      }
      if (hasSCLoginOtherSide()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getSCLoginOtherSide());
      }
      if (hasRoleRenameResponse()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, getRoleRenameResponse());
      }
      if (hasMatchCreateGameResponse()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, getMatchCreateGameResponse());
      }
      if (hasMatchJoinGameResponse()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, getMatchJoinGameResponse());
      }
      if (hasSCMatchJoinGame()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, getSCMatchJoinGame());
      }
      if (hasMatchRoleResponse()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, getMatchRoleResponse());
      }
      if (hasSCMatchRole()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(13, getSCMatchRole());
      }
      if (hasMatchCancelResponse()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(14, getMatchCancelResponse());
      }
      if (hasSCMatchCreateGame()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(15, getSCMatchCreateGame());
      }
      if (hasSCMatchAI()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(16, getSCMatchAI());
      }
      if (hasSCMatchJoinGameData()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(17, getSCMatchJoinGameData());
      }
      if (hasMatchAIResponse()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(18, getMatchAIResponse());
      }
      if (hasSCMatchOutOfTime()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(19, getSCMatchOutOfTime());
      }
      if (hasSCMatchCancelGame()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(20, getSCMatchCancelGame());
      }
      if (hasMatchGetGameInfoResponse()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(21, getMatchGetGameInfoResponse());
      }
      if (hasFightReadyResponse()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(22, getFightReadyResponse());
      }
      if (hasSCFightReady()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(23, getSCFightReady());
      }
      if (hasSCFightStart()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(24, getSCFightStart());
      }
      if (hasFightExitGameResponse()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(25, getFightExitGameResponse());
      }
      if (hasSCFightExitGame()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(26, getSCFightExitGame());
      }
      if (hasSCFightApplyExitGame()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(27, getSCFightApplyExitGame());
      }
      if (hasFightAgreeExitGameResponse()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(28, getFightAgreeExitGameResponse());
      }
      if (hasSCFightGameDismiss()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(29, getSCFightGameDismiss());
      }
      if (hasSCFightLoadResource()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(30, getSCFightLoadResource());
      }
      if (hasSCFightCallLandLord()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(31, getSCFightCallLandLord());
      }
      if (hasSCFightPutOut()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(32, getSCFightPutOut());
      }
      if (hasSCFightLandLord()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(33, getSCFightLandLord());
      }
      if (hasFightCallLandLordResponse()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(34, getFightCallLandLordResponse());
      }
      if (hasFightSendCardResponse()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(35, getFightSendCardResponse());
      }
      if (hasSCFightPutOutPai()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(36, getSCFightPutOutPai());
      }
      if (hasSCFightMingPai()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(37, getSCFightMingPai());
      }
      if (hasSCFightRoundOver()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(38, getSCFightRoundOver());
      }
      if (hasFightRecommandResponse()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(39, getFightRecommandResponse());
      }
      if (hasSCFightGameOver()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(40, getSCFightGameOver());
      }
      if (hasFightMingPaiResponse()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(41, getFightMingPaiResponse());
      }
      if (hasFightGetlastRoundResponse()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(42, getFightGetlastRoundResponse());
      }
      if (hasSCFightLastRoundReady()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(43, getSCFightLastRoundReady());
      }
      if (hasFightRejoinResponse()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(44, getFightRejoinResponse());
      }
      if (hasSCFightDisconnect()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(45, getSCFightDisconnect());
      }
      if (hasSCFightRejoin()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(46, getSCFightRejoin());
      }
      if (hasSCFightApplyExitResult()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(47, getSCFightApplyExitResult());
      }
      if (hasFightAutoResponse()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(48, getFightAutoResponse());
      }
      if (hasSCFightAuto()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(49, getSCFightAuto());
      }
      if (hasSCFightFinishRejoin()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(50, getSCFightFinishRejoin());
      }
      if (hasFightApplyExitGameResponse()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(51, getFightApplyExitGameResponse());
      }
      if (hasSCFightCallFen()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(52, getSCFightCallFen());
      }
      if (hasFightBackMenuResponse()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(53, getFightBackMenuResponse());
      }
      if (hasSCFightCurrentScore()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(54, getSCFightCurrentScore());
      }
      if (hasFightGameInfoResponse()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(55, getFightGameInfoResponse());
      }
      if (hasSCFightMingPaiOnOrOff()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(56, getSCFightMingPaiOnOrOff());
      }
      if (hasSCFightSpring()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(57, getSCFightSpring());
      }
      if (hasMoneyExchangeResponse()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(58, getMoneyExchangeResponse());
      }
      if (hasSettingsResponse()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(59, getSettingsResponse());
      }
      if (hasGetRoleDataResponse()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(60, getGetRoleDataResponse());
      }
      if (hasGetSettingsResponse()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(61, getGetSettingsResponse());
      }
      if (hasHeartbeatResponse()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(62, getHeartbeatResponse());
      }
      if (hasVideoGetResponse()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(63, getVideoGetResponse());
      }
      if (hasVideoGetByIdResponse()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(64, getVideoGetByIdResponse());
      }
      if (hasVideoGetByRoundResponse()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(65, getVideoGetByRoundResponse());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.randioo.doudizhu_server.protocol.ServerMessage.SC parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.randioo.doudizhu_server.protocol.ServerMessage.SC parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.doudizhu_server.protocol.ServerMessage.SC parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.randioo.doudizhu_server.protocol.ServerMessage.SC parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.doudizhu_server.protocol.ServerMessage.SC parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.randioo.doudizhu_server.protocol.ServerMessage.SC parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.doudizhu_server.protocol.ServerMessage.SC parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.randioo.doudizhu_server.protocol.ServerMessage.SC parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.randioo.doudizhu_server.protocol.ServerMessage.SC parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.randioo.doudizhu_server.protocol.ServerMessage.SC parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.randioo.doudizhu_server.protocol.ServerMessage.SC prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.randioo.doudizhu_server.protocol.ServerMessage.SC result;
      
      // Construct using com.randioo.doudizhu_server.protocol.ServerMessage.SC.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.randioo.doudizhu_server.protocol.ServerMessage.SC();
        return builder;
      }
      
      protected com.randioo.doudizhu_server.protocol.ServerMessage.SC internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.randioo.doudizhu_server.protocol.ServerMessage.SC();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.randioo.doudizhu_server.protocol.ServerMessage.SC.getDescriptor();
      }
      
      public com.randioo.doudizhu_server.protocol.ServerMessage.SC getDefaultInstanceForType() {
        return com.randioo.doudizhu_server.protocol.ServerMessage.SC.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.randioo.doudizhu_server.protocol.ServerMessage.SC build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.randioo.doudizhu_server.protocol.ServerMessage.SC buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.randioo.doudizhu_server.protocol.ServerMessage.SC buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.randioo.doudizhu_server.protocol.ServerMessage.SC returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.randioo.doudizhu_server.protocol.ServerMessage.SC) {
          return mergeFrom((com.randioo.doudizhu_server.protocol.ServerMessage.SC)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.randioo.doudizhu_server.protocol.ServerMessage.SC other) {
        if (other == com.randioo.doudizhu_server.protocol.ServerMessage.SC.getDefaultInstance()) return this;
        if (other.hasHeartResponse()) {
          mergeHeartResponse(other.getHeartResponse());
        }
        if (other.hasSCHeart()) {
          mergeSCHeart(other.getSCHeart());
        }
        if (other.hasLoginCheckAccountResponse()) {
          mergeLoginCheckAccountResponse(other.getLoginCheckAccountResponse());
        }
        if (other.hasLoginCreateRoleResponse()) {
          mergeLoginCreateRoleResponse(other.getLoginCreateRoleResponse());
        }
        if (other.hasLoginGetRoleDataResponse()) {
          mergeLoginGetRoleDataResponse(other.getLoginGetRoleDataResponse());
        }
        if (other.hasSCLoginGetRoleData()) {
          mergeSCLoginGetRoleData(other.getSCLoginGetRoleData());
        }
        if (other.hasSCLoginOtherSide()) {
          mergeSCLoginOtherSide(other.getSCLoginOtherSide());
        }
        if (other.hasRoleRenameResponse()) {
          mergeRoleRenameResponse(other.getRoleRenameResponse());
        }
        if (other.hasMatchCreateGameResponse()) {
          mergeMatchCreateGameResponse(other.getMatchCreateGameResponse());
        }
        if (other.hasMatchJoinGameResponse()) {
          mergeMatchJoinGameResponse(other.getMatchJoinGameResponse());
        }
        if (other.hasSCMatchJoinGame()) {
          mergeSCMatchJoinGame(other.getSCMatchJoinGame());
        }
        if (other.hasMatchRoleResponse()) {
          mergeMatchRoleResponse(other.getMatchRoleResponse());
        }
        if (other.hasSCMatchRole()) {
          mergeSCMatchRole(other.getSCMatchRole());
        }
        if (other.hasMatchCancelResponse()) {
          mergeMatchCancelResponse(other.getMatchCancelResponse());
        }
        if (other.hasSCMatchCreateGame()) {
          mergeSCMatchCreateGame(other.getSCMatchCreateGame());
        }
        if (other.hasSCMatchAI()) {
          mergeSCMatchAI(other.getSCMatchAI());
        }
        if (other.hasSCMatchJoinGameData()) {
          mergeSCMatchJoinGameData(other.getSCMatchJoinGameData());
        }
        if (other.hasMatchAIResponse()) {
          mergeMatchAIResponse(other.getMatchAIResponse());
        }
        if (other.hasSCMatchOutOfTime()) {
          mergeSCMatchOutOfTime(other.getSCMatchOutOfTime());
        }
        if (other.hasSCMatchCancelGame()) {
          mergeSCMatchCancelGame(other.getSCMatchCancelGame());
        }
        if (other.hasMatchGetGameInfoResponse()) {
          mergeMatchGetGameInfoResponse(other.getMatchGetGameInfoResponse());
        }
        if (other.hasFightReadyResponse()) {
          mergeFightReadyResponse(other.getFightReadyResponse());
        }
        if (other.hasSCFightReady()) {
          mergeSCFightReady(other.getSCFightReady());
        }
        if (other.hasSCFightStart()) {
          mergeSCFightStart(other.getSCFightStart());
        }
        if (other.hasFightExitGameResponse()) {
          mergeFightExitGameResponse(other.getFightExitGameResponse());
        }
        if (other.hasSCFightExitGame()) {
          mergeSCFightExitGame(other.getSCFightExitGame());
        }
        if (other.hasSCFightApplyExitGame()) {
          mergeSCFightApplyExitGame(other.getSCFightApplyExitGame());
        }
        if (other.hasFightAgreeExitGameResponse()) {
          mergeFightAgreeExitGameResponse(other.getFightAgreeExitGameResponse());
        }
        if (other.hasSCFightGameDismiss()) {
          mergeSCFightGameDismiss(other.getSCFightGameDismiss());
        }
        if (other.hasSCFightLoadResource()) {
          mergeSCFightLoadResource(other.getSCFightLoadResource());
        }
        if (other.hasSCFightCallLandLord()) {
          mergeSCFightCallLandLord(other.getSCFightCallLandLord());
        }
        if (other.hasSCFightPutOut()) {
          mergeSCFightPutOut(other.getSCFightPutOut());
        }
        if (other.hasSCFightLandLord()) {
          mergeSCFightLandLord(other.getSCFightLandLord());
        }
        if (other.hasFightCallLandLordResponse()) {
          mergeFightCallLandLordResponse(other.getFightCallLandLordResponse());
        }
        if (other.hasFightSendCardResponse()) {
          mergeFightSendCardResponse(other.getFightSendCardResponse());
        }
        if (other.hasSCFightPutOutPai()) {
          mergeSCFightPutOutPai(other.getSCFightPutOutPai());
        }
        if (other.hasSCFightMingPai()) {
          mergeSCFightMingPai(other.getSCFightMingPai());
        }
        if (other.hasSCFightRoundOver()) {
          mergeSCFightRoundOver(other.getSCFightRoundOver());
        }
        if (other.hasFightRecommandResponse()) {
          mergeFightRecommandResponse(other.getFightRecommandResponse());
        }
        if (other.hasSCFightGameOver()) {
          mergeSCFightGameOver(other.getSCFightGameOver());
        }
        if (other.hasFightMingPaiResponse()) {
          mergeFightMingPaiResponse(other.getFightMingPaiResponse());
        }
        if (other.hasFightGetlastRoundResponse()) {
          mergeFightGetlastRoundResponse(other.getFightGetlastRoundResponse());
        }
        if (other.hasSCFightLastRoundReady()) {
          mergeSCFightLastRoundReady(other.getSCFightLastRoundReady());
        }
        if (other.hasFightRejoinResponse()) {
          mergeFightRejoinResponse(other.getFightRejoinResponse());
        }
        if (other.hasSCFightDisconnect()) {
          mergeSCFightDisconnect(other.getSCFightDisconnect());
        }
        if (other.hasSCFightRejoin()) {
          mergeSCFightRejoin(other.getSCFightRejoin());
        }
        if (other.hasSCFightApplyExitResult()) {
          mergeSCFightApplyExitResult(other.getSCFightApplyExitResult());
        }
        if (other.hasFightAutoResponse()) {
          mergeFightAutoResponse(other.getFightAutoResponse());
        }
        if (other.hasSCFightAuto()) {
          mergeSCFightAuto(other.getSCFightAuto());
        }
        if (other.hasSCFightFinishRejoin()) {
          mergeSCFightFinishRejoin(other.getSCFightFinishRejoin());
        }
        if (other.hasFightApplyExitGameResponse()) {
          mergeFightApplyExitGameResponse(other.getFightApplyExitGameResponse());
        }
        if (other.hasSCFightCallFen()) {
          mergeSCFightCallFen(other.getSCFightCallFen());
        }
        if (other.hasFightBackMenuResponse()) {
          mergeFightBackMenuResponse(other.getFightBackMenuResponse());
        }
        if (other.hasSCFightCurrentScore()) {
          mergeSCFightCurrentScore(other.getSCFightCurrentScore());
        }
        if (other.hasFightGameInfoResponse()) {
          mergeFightGameInfoResponse(other.getFightGameInfoResponse());
        }
        if (other.hasSCFightMingPaiOnOrOff()) {
          mergeSCFightMingPaiOnOrOff(other.getSCFightMingPaiOnOrOff());
        }
        if (other.hasSCFightSpring()) {
          mergeSCFightSpring(other.getSCFightSpring());
        }
        if (other.hasMoneyExchangeResponse()) {
          mergeMoneyExchangeResponse(other.getMoneyExchangeResponse());
        }
        if (other.hasSettingsResponse()) {
          mergeSettingsResponse(other.getSettingsResponse());
        }
        if (other.hasGetRoleDataResponse()) {
          mergeGetRoleDataResponse(other.getGetRoleDataResponse());
        }
        if (other.hasGetSettingsResponse()) {
          mergeGetSettingsResponse(other.getGetSettingsResponse());
        }
        if (other.hasHeartbeatResponse()) {
          mergeHeartbeatResponse(other.getHeartbeatResponse());
        }
        if (other.hasVideoGetResponse()) {
          mergeVideoGetResponse(other.getVideoGetResponse());
        }
        if (other.hasVideoGetByIdResponse()) {
          mergeVideoGetByIdResponse(other.getVideoGetByIdResponse());
        }
        if (other.hasVideoGetByRoundResponse()) {
          mergeVideoGetByRoundResponse(other.getVideoGetByRoundResponse());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              com.randioo.doudizhu_server.protocol.Heart.HeartResponse.Builder subBuilder = com.randioo.doudizhu_server.protocol.Heart.HeartResponse.newBuilder();
              if (hasHeartResponse()) {
                subBuilder.mergeFrom(getHeartResponse());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setHeartResponse(subBuilder.buildPartial());
              break;
            }
            case 18: {
              com.randioo.doudizhu_server.protocol.Heart.SCHeart.Builder subBuilder = com.randioo.doudizhu_server.protocol.Heart.SCHeart.newBuilder();
              if (hasSCHeart()) {
                subBuilder.mergeFrom(getSCHeart());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSCHeart(subBuilder.buildPartial());
              break;
            }
            case 26: {
              com.randioo.doudizhu_server.protocol.Login.LoginCheckAccountResponse.Builder subBuilder = com.randioo.doudizhu_server.protocol.Login.LoginCheckAccountResponse.newBuilder();
              if (hasLoginCheckAccountResponse()) {
                subBuilder.mergeFrom(getLoginCheckAccountResponse());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setLoginCheckAccountResponse(subBuilder.buildPartial());
              break;
            }
            case 34: {
              com.randioo.doudizhu_server.protocol.Login.LoginCreateRoleResponse.Builder subBuilder = com.randioo.doudizhu_server.protocol.Login.LoginCreateRoleResponse.newBuilder();
              if (hasLoginCreateRoleResponse()) {
                subBuilder.mergeFrom(getLoginCreateRoleResponse());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setLoginCreateRoleResponse(subBuilder.buildPartial());
              break;
            }
            case 42: {
              com.randioo.doudizhu_server.protocol.Login.LoginGetRoleDataResponse.Builder subBuilder = com.randioo.doudizhu_server.protocol.Login.LoginGetRoleDataResponse.newBuilder();
              if (hasLoginGetRoleDataResponse()) {
                subBuilder.mergeFrom(getLoginGetRoleDataResponse());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setLoginGetRoleDataResponse(subBuilder.buildPartial());
              break;
            }
            case 50: {
              com.randioo.doudizhu_server.protocol.Login.SCLoginGetRoleData.Builder subBuilder = com.randioo.doudizhu_server.protocol.Login.SCLoginGetRoleData.newBuilder();
              if (hasSCLoginGetRoleData()) {
                subBuilder.mergeFrom(getSCLoginGetRoleData());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSCLoginGetRoleData(subBuilder.buildPartial());
              break;
            }
            case 58: {
              com.randioo.doudizhu_server.protocol.Login.SCLoginOtherSide.Builder subBuilder = com.randioo.doudizhu_server.protocol.Login.SCLoginOtherSide.newBuilder();
              if (hasSCLoginOtherSide()) {
                subBuilder.mergeFrom(getSCLoginOtherSide());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSCLoginOtherSide(subBuilder.buildPartial());
              break;
            }
            case 66: {
              com.randioo.doudizhu_server.protocol.Role.RoleRenameResponse.Builder subBuilder = com.randioo.doudizhu_server.protocol.Role.RoleRenameResponse.newBuilder();
              if (hasRoleRenameResponse()) {
                subBuilder.mergeFrom(getRoleRenameResponse());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setRoleRenameResponse(subBuilder.buildPartial());
              break;
            }
            case 74: {
              com.randioo.doudizhu_server.protocol.Match.MatchCreateGameResponse.Builder subBuilder = com.randioo.doudizhu_server.protocol.Match.MatchCreateGameResponse.newBuilder();
              if (hasMatchCreateGameResponse()) {
                subBuilder.mergeFrom(getMatchCreateGameResponse());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setMatchCreateGameResponse(subBuilder.buildPartial());
              break;
            }
            case 82: {
              com.randioo.doudizhu_server.protocol.Match.MatchJoinGameResponse.Builder subBuilder = com.randioo.doudizhu_server.protocol.Match.MatchJoinGameResponse.newBuilder();
              if (hasMatchJoinGameResponse()) {
                subBuilder.mergeFrom(getMatchJoinGameResponse());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setMatchJoinGameResponse(subBuilder.buildPartial());
              break;
            }
            case 90: {
              com.randioo.doudizhu_server.protocol.Match.SCMatchJoinGame.Builder subBuilder = com.randioo.doudizhu_server.protocol.Match.SCMatchJoinGame.newBuilder();
              if (hasSCMatchJoinGame()) {
                subBuilder.mergeFrom(getSCMatchJoinGame());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSCMatchJoinGame(subBuilder.buildPartial());
              break;
            }
            case 98: {
              com.randioo.doudizhu_server.protocol.Match.MatchRoleResponse.Builder subBuilder = com.randioo.doudizhu_server.protocol.Match.MatchRoleResponse.newBuilder();
              if (hasMatchRoleResponse()) {
                subBuilder.mergeFrom(getMatchRoleResponse());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setMatchRoleResponse(subBuilder.buildPartial());
              break;
            }
            case 106: {
              com.randioo.doudizhu_server.protocol.Match.SCMatchRole.Builder subBuilder = com.randioo.doudizhu_server.protocol.Match.SCMatchRole.newBuilder();
              if (hasSCMatchRole()) {
                subBuilder.mergeFrom(getSCMatchRole());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSCMatchRole(subBuilder.buildPartial());
              break;
            }
            case 114: {
              com.randioo.doudizhu_server.protocol.Match.MatchCancelResponse.Builder subBuilder = com.randioo.doudizhu_server.protocol.Match.MatchCancelResponse.newBuilder();
              if (hasMatchCancelResponse()) {
                subBuilder.mergeFrom(getMatchCancelResponse());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setMatchCancelResponse(subBuilder.buildPartial());
              break;
            }
            case 122: {
              com.randioo.doudizhu_server.protocol.Match.SCMatchCreateGame.Builder subBuilder = com.randioo.doudizhu_server.protocol.Match.SCMatchCreateGame.newBuilder();
              if (hasSCMatchCreateGame()) {
                subBuilder.mergeFrom(getSCMatchCreateGame());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSCMatchCreateGame(subBuilder.buildPartial());
              break;
            }
            case 130: {
              com.randioo.doudizhu_server.protocol.Match.SCMatchAI.Builder subBuilder = com.randioo.doudizhu_server.protocol.Match.SCMatchAI.newBuilder();
              if (hasSCMatchAI()) {
                subBuilder.mergeFrom(getSCMatchAI());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSCMatchAI(subBuilder.buildPartial());
              break;
            }
            case 138: {
              com.randioo.doudizhu_server.protocol.Match.SCMatchJoinGameData.Builder subBuilder = com.randioo.doudizhu_server.protocol.Match.SCMatchJoinGameData.newBuilder();
              if (hasSCMatchJoinGameData()) {
                subBuilder.mergeFrom(getSCMatchJoinGameData());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSCMatchJoinGameData(subBuilder.buildPartial());
              break;
            }
            case 146: {
              com.randioo.doudizhu_server.protocol.Match.MatchAIResponse.Builder subBuilder = com.randioo.doudizhu_server.protocol.Match.MatchAIResponse.newBuilder();
              if (hasMatchAIResponse()) {
                subBuilder.mergeFrom(getMatchAIResponse());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setMatchAIResponse(subBuilder.buildPartial());
              break;
            }
            case 154: {
              com.randioo.doudizhu_server.protocol.Match.SCMatchOutOfTime.Builder subBuilder = com.randioo.doudizhu_server.protocol.Match.SCMatchOutOfTime.newBuilder();
              if (hasSCMatchOutOfTime()) {
                subBuilder.mergeFrom(getSCMatchOutOfTime());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSCMatchOutOfTime(subBuilder.buildPartial());
              break;
            }
            case 162: {
              com.randioo.doudizhu_server.protocol.Match.SCMatchCancelGame.Builder subBuilder = com.randioo.doudizhu_server.protocol.Match.SCMatchCancelGame.newBuilder();
              if (hasSCMatchCancelGame()) {
                subBuilder.mergeFrom(getSCMatchCancelGame());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSCMatchCancelGame(subBuilder.buildPartial());
              break;
            }
            case 170: {
              com.randioo.doudizhu_server.protocol.Match.MatchGetGameInfoResponse.Builder subBuilder = com.randioo.doudizhu_server.protocol.Match.MatchGetGameInfoResponse.newBuilder();
              if (hasMatchGetGameInfoResponse()) {
                subBuilder.mergeFrom(getMatchGetGameInfoResponse());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setMatchGetGameInfoResponse(subBuilder.buildPartial());
              break;
            }
            case 178: {
              com.randioo.doudizhu_server.protocol.Fight.FightReadyResponse.Builder subBuilder = com.randioo.doudizhu_server.protocol.Fight.FightReadyResponse.newBuilder();
              if (hasFightReadyResponse()) {
                subBuilder.mergeFrom(getFightReadyResponse());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setFightReadyResponse(subBuilder.buildPartial());
              break;
            }
            case 186: {
              com.randioo.doudizhu_server.protocol.Fight.SCFightReady.Builder subBuilder = com.randioo.doudizhu_server.protocol.Fight.SCFightReady.newBuilder();
              if (hasSCFightReady()) {
                subBuilder.mergeFrom(getSCFightReady());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSCFightReady(subBuilder.buildPartial());
              break;
            }
            case 194: {
              com.randioo.doudizhu_server.protocol.Fight.SCFightStart.Builder subBuilder = com.randioo.doudizhu_server.protocol.Fight.SCFightStart.newBuilder();
              if (hasSCFightStart()) {
                subBuilder.mergeFrom(getSCFightStart());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSCFightStart(subBuilder.buildPartial());
              break;
            }
            case 202: {
              com.randioo.doudizhu_server.protocol.Fight.FightExitGameResponse.Builder subBuilder = com.randioo.doudizhu_server.protocol.Fight.FightExitGameResponse.newBuilder();
              if (hasFightExitGameResponse()) {
                subBuilder.mergeFrom(getFightExitGameResponse());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setFightExitGameResponse(subBuilder.buildPartial());
              break;
            }
            case 210: {
              com.randioo.doudizhu_server.protocol.Fight.SCFightExitGame.Builder subBuilder = com.randioo.doudizhu_server.protocol.Fight.SCFightExitGame.newBuilder();
              if (hasSCFightExitGame()) {
                subBuilder.mergeFrom(getSCFightExitGame());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSCFightExitGame(subBuilder.buildPartial());
              break;
            }
            case 218: {
              com.randioo.doudizhu_server.protocol.Fight.SCFightApplyExitGame.Builder subBuilder = com.randioo.doudizhu_server.protocol.Fight.SCFightApplyExitGame.newBuilder();
              if (hasSCFightApplyExitGame()) {
                subBuilder.mergeFrom(getSCFightApplyExitGame());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSCFightApplyExitGame(subBuilder.buildPartial());
              break;
            }
            case 226: {
              com.randioo.doudizhu_server.protocol.Fight.FightAgreeExitGameResponse.Builder subBuilder = com.randioo.doudizhu_server.protocol.Fight.FightAgreeExitGameResponse.newBuilder();
              if (hasFightAgreeExitGameResponse()) {
                subBuilder.mergeFrom(getFightAgreeExitGameResponse());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setFightAgreeExitGameResponse(subBuilder.buildPartial());
              break;
            }
            case 234: {
              com.randioo.doudizhu_server.protocol.Fight.SCFightGameDismiss.Builder subBuilder = com.randioo.doudizhu_server.protocol.Fight.SCFightGameDismiss.newBuilder();
              if (hasSCFightGameDismiss()) {
                subBuilder.mergeFrom(getSCFightGameDismiss());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSCFightGameDismiss(subBuilder.buildPartial());
              break;
            }
            case 242: {
              com.randioo.doudizhu_server.protocol.Fight.SCFightLoadResource.Builder subBuilder = com.randioo.doudizhu_server.protocol.Fight.SCFightLoadResource.newBuilder();
              if (hasSCFightLoadResource()) {
                subBuilder.mergeFrom(getSCFightLoadResource());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSCFightLoadResource(subBuilder.buildPartial());
              break;
            }
            case 250: {
              com.randioo.doudizhu_server.protocol.Fight.SCFightCallLandLord.Builder subBuilder = com.randioo.doudizhu_server.protocol.Fight.SCFightCallLandLord.newBuilder();
              if (hasSCFightCallLandLord()) {
                subBuilder.mergeFrom(getSCFightCallLandLord());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSCFightCallLandLord(subBuilder.buildPartial());
              break;
            }
            case 258: {
              com.randioo.doudizhu_server.protocol.Fight.SCFightPutOut.Builder subBuilder = com.randioo.doudizhu_server.protocol.Fight.SCFightPutOut.newBuilder();
              if (hasSCFightPutOut()) {
                subBuilder.mergeFrom(getSCFightPutOut());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSCFightPutOut(subBuilder.buildPartial());
              break;
            }
            case 266: {
              com.randioo.doudizhu_server.protocol.Fight.SCFightLandLord.Builder subBuilder = com.randioo.doudizhu_server.protocol.Fight.SCFightLandLord.newBuilder();
              if (hasSCFightLandLord()) {
                subBuilder.mergeFrom(getSCFightLandLord());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSCFightLandLord(subBuilder.buildPartial());
              break;
            }
            case 274: {
              com.randioo.doudizhu_server.protocol.Fight.FightCallLandLordResponse.Builder subBuilder = com.randioo.doudizhu_server.protocol.Fight.FightCallLandLordResponse.newBuilder();
              if (hasFightCallLandLordResponse()) {
                subBuilder.mergeFrom(getFightCallLandLordResponse());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setFightCallLandLordResponse(subBuilder.buildPartial());
              break;
            }
            case 282: {
              com.randioo.doudizhu_server.protocol.Fight.FightSendCardResponse.Builder subBuilder = com.randioo.doudizhu_server.protocol.Fight.FightSendCardResponse.newBuilder();
              if (hasFightSendCardResponse()) {
                subBuilder.mergeFrom(getFightSendCardResponse());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setFightSendCardResponse(subBuilder.buildPartial());
              break;
            }
            case 290: {
              com.randioo.doudizhu_server.protocol.Fight.SCFightPutOutPai.Builder subBuilder = com.randioo.doudizhu_server.protocol.Fight.SCFightPutOutPai.newBuilder();
              if (hasSCFightPutOutPai()) {
                subBuilder.mergeFrom(getSCFightPutOutPai());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSCFightPutOutPai(subBuilder.buildPartial());
              break;
            }
            case 298: {
              com.randioo.doudizhu_server.protocol.Fight.SCFightMingPai.Builder subBuilder = com.randioo.doudizhu_server.protocol.Fight.SCFightMingPai.newBuilder();
              if (hasSCFightMingPai()) {
                subBuilder.mergeFrom(getSCFightMingPai());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSCFightMingPai(subBuilder.buildPartial());
              break;
            }
            case 306: {
              com.randioo.doudizhu_server.protocol.Fight.SCFightRoundOver.Builder subBuilder = com.randioo.doudizhu_server.protocol.Fight.SCFightRoundOver.newBuilder();
              if (hasSCFightRoundOver()) {
                subBuilder.mergeFrom(getSCFightRoundOver());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSCFightRoundOver(subBuilder.buildPartial());
              break;
            }
            case 314: {
              com.randioo.doudizhu_server.protocol.Fight.FightRecommandResponse.Builder subBuilder = com.randioo.doudizhu_server.protocol.Fight.FightRecommandResponse.newBuilder();
              if (hasFightRecommandResponse()) {
                subBuilder.mergeFrom(getFightRecommandResponse());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setFightRecommandResponse(subBuilder.buildPartial());
              break;
            }
            case 322: {
              com.randioo.doudizhu_server.protocol.Fight.SCFightGameOver.Builder subBuilder = com.randioo.doudizhu_server.protocol.Fight.SCFightGameOver.newBuilder();
              if (hasSCFightGameOver()) {
                subBuilder.mergeFrom(getSCFightGameOver());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSCFightGameOver(subBuilder.buildPartial());
              break;
            }
            case 330: {
              com.randioo.doudizhu_server.protocol.Fight.FightMingPaiResponse.Builder subBuilder = com.randioo.doudizhu_server.protocol.Fight.FightMingPaiResponse.newBuilder();
              if (hasFightMingPaiResponse()) {
                subBuilder.mergeFrom(getFightMingPaiResponse());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setFightMingPaiResponse(subBuilder.buildPartial());
              break;
            }
            case 338: {
              com.randioo.doudizhu_server.protocol.Fight.FightGetlastRoundResponse.Builder subBuilder = com.randioo.doudizhu_server.protocol.Fight.FightGetlastRoundResponse.newBuilder();
              if (hasFightGetlastRoundResponse()) {
                subBuilder.mergeFrom(getFightGetlastRoundResponse());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setFightGetlastRoundResponse(subBuilder.buildPartial());
              break;
            }
            case 346: {
              com.randioo.doudizhu_server.protocol.Fight.SCFightLastRoundReady.Builder subBuilder = com.randioo.doudizhu_server.protocol.Fight.SCFightLastRoundReady.newBuilder();
              if (hasSCFightLastRoundReady()) {
                subBuilder.mergeFrom(getSCFightLastRoundReady());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSCFightLastRoundReady(subBuilder.buildPartial());
              break;
            }
            case 354: {
              com.randioo.doudizhu_server.protocol.Fight.FightRejoinResponse.Builder subBuilder = com.randioo.doudizhu_server.protocol.Fight.FightRejoinResponse.newBuilder();
              if (hasFightRejoinResponse()) {
                subBuilder.mergeFrom(getFightRejoinResponse());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setFightRejoinResponse(subBuilder.buildPartial());
              break;
            }
            case 362: {
              com.randioo.doudizhu_server.protocol.Fight.SCFightDisconnect.Builder subBuilder = com.randioo.doudizhu_server.protocol.Fight.SCFightDisconnect.newBuilder();
              if (hasSCFightDisconnect()) {
                subBuilder.mergeFrom(getSCFightDisconnect());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSCFightDisconnect(subBuilder.buildPartial());
              break;
            }
            case 370: {
              com.randioo.doudizhu_server.protocol.Fight.SCFightRejoin.Builder subBuilder = com.randioo.doudizhu_server.protocol.Fight.SCFightRejoin.newBuilder();
              if (hasSCFightRejoin()) {
                subBuilder.mergeFrom(getSCFightRejoin());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSCFightRejoin(subBuilder.buildPartial());
              break;
            }
            case 378: {
              com.randioo.doudizhu_server.protocol.Fight.SCFightApplyExitResult.Builder subBuilder = com.randioo.doudizhu_server.protocol.Fight.SCFightApplyExitResult.newBuilder();
              if (hasSCFightApplyExitResult()) {
                subBuilder.mergeFrom(getSCFightApplyExitResult());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSCFightApplyExitResult(subBuilder.buildPartial());
              break;
            }
            case 386: {
              com.randioo.doudizhu_server.protocol.Fight.FightAutoResponse.Builder subBuilder = com.randioo.doudizhu_server.protocol.Fight.FightAutoResponse.newBuilder();
              if (hasFightAutoResponse()) {
                subBuilder.mergeFrom(getFightAutoResponse());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setFightAutoResponse(subBuilder.buildPartial());
              break;
            }
            case 394: {
              com.randioo.doudizhu_server.protocol.Fight.SCFightAuto.Builder subBuilder = com.randioo.doudizhu_server.protocol.Fight.SCFightAuto.newBuilder();
              if (hasSCFightAuto()) {
                subBuilder.mergeFrom(getSCFightAuto());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSCFightAuto(subBuilder.buildPartial());
              break;
            }
            case 402: {
              com.randioo.doudizhu_server.protocol.Fight.SCFightFinishRejoin.Builder subBuilder = com.randioo.doudizhu_server.protocol.Fight.SCFightFinishRejoin.newBuilder();
              if (hasSCFightFinishRejoin()) {
                subBuilder.mergeFrom(getSCFightFinishRejoin());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSCFightFinishRejoin(subBuilder.buildPartial());
              break;
            }
            case 410: {
              com.randioo.doudizhu_server.protocol.Fight.FightApplyExitGameResponse.Builder subBuilder = com.randioo.doudizhu_server.protocol.Fight.FightApplyExitGameResponse.newBuilder();
              if (hasFightApplyExitGameResponse()) {
                subBuilder.mergeFrom(getFightApplyExitGameResponse());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setFightApplyExitGameResponse(subBuilder.buildPartial());
              break;
            }
            case 418: {
              com.randioo.doudizhu_server.protocol.Fight.SCFightCallFen.Builder subBuilder = com.randioo.doudizhu_server.protocol.Fight.SCFightCallFen.newBuilder();
              if (hasSCFightCallFen()) {
                subBuilder.mergeFrom(getSCFightCallFen());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSCFightCallFen(subBuilder.buildPartial());
              break;
            }
            case 426: {
              com.randioo.doudizhu_server.protocol.Fight.FightBackMenuResponse.Builder subBuilder = com.randioo.doudizhu_server.protocol.Fight.FightBackMenuResponse.newBuilder();
              if (hasFightBackMenuResponse()) {
                subBuilder.mergeFrom(getFightBackMenuResponse());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setFightBackMenuResponse(subBuilder.buildPartial());
              break;
            }
            case 434: {
              com.randioo.doudizhu_server.protocol.Fight.SCFightCurrentScore.Builder subBuilder = com.randioo.doudizhu_server.protocol.Fight.SCFightCurrentScore.newBuilder();
              if (hasSCFightCurrentScore()) {
                subBuilder.mergeFrom(getSCFightCurrentScore());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSCFightCurrentScore(subBuilder.buildPartial());
              break;
            }
            case 442: {
              com.randioo.doudizhu_server.protocol.Fight.FightGameInfoResponse.Builder subBuilder = com.randioo.doudizhu_server.protocol.Fight.FightGameInfoResponse.newBuilder();
              if (hasFightGameInfoResponse()) {
                subBuilder.mergeFrom(getFightGameInfoResponse());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setFightGameInfoResponse(subBuilder.buildPartial());
              break;
            }
            case 450: {
              com.randioo.doudizhu_server.protocol.Fight.SCFightMingPaiOnOrOff.Builder subBuilder = com.randioo.doudizhu_server.protocol.Fight.SCFightMingPaiOnOrOff.newBuilder();
              if (hasSCFightMingPaiOnOrOff()) {
                subBuilder.mergeFrom(getSCFightMingPaiOnOrOff());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSCFightMingPaiOnOrOff(subBuilder.buildPartial());
              break;
            }
            case 458: {
              com.randioo.doudizhu_server.protocol.Fight.SCFightSpring.Builder subBuilder = com.randioo.doudizhu_server.protocol.Fight.SCFightSpring.newBuilder();
              if (hasSCFightSpring()) {
                subBuilder.mergeFrom(getSCFightSpring());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSCFightSpring(subBuilder.buildPartial());
              break;
            }
            case 466: {
              com.randioo.doudizhu_server.protocol.MoneyExchange.MoneyExchangeResponse.Builder subBuilder = com.randioo.doudizhu_server.protocol.MoneyExchange.MoneyExchangeResponse.newBuilder();
              if (hasMoneyExchangeResponse()) {
                subBuilder.mergeFrom(getMoneyExchangeResponse());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setMoneyExchangeResponse(subBuilder.buildPartial());
              break;
            }
            case 474: {
              com.randioo.doudizhu_server.protocol.Settings.SettingsResponse.Builder subBuilder = com.randioo.doudizhu_server.protocol.Settings.SettingsResponse.newBuilder();
              if (hasSettingsResponse()) {
                subBuilder.mergeFrom(getSettingsResponse());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSettingsResponse(subBuilder.buildPartial());
              break;
            }
            case 482: {
              com.randioo.doudizhu_server.protocol.Role.GetRoleDataResponse.Builder subBuilder = com.randioo.doudizhu_server.protocol.Role.GetRoleDataResponse.newBuilder();
              if (hasGetRoleDataResponse()) {
                subBuilder.mergeFrom(getGetRoleDataResponse());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setGetRoleDataResponse(subBuilder.buildPartial());
              break;
            }
            case 490: {
              com.randioo.doudizhu_server.protocol.Settings.GetSettingsResponse.Builder subBuilder = com.randioo.doudizhu_server.protocol.Settings.GetSettingsResponse.newBuilder();
              if (hasGetSettingsResponse()) {
                subBuilder.mergeFrom(getGetSettingsResponse());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setGetSettingsResponse(subBuilder.buildPartial());
              break;
            }
            case 498: {
              com.randioo.doudizhu_server.protocol.Heartbeat.HeartbeatResponse.Builder subBuilder = com.randioo.doudizhu_server.protocol.Heartbeat.HeartbeatResponse.newBuilder();
              if (hasHeartbeatResponse()) {
                subBuilder.mergeFrom(getHeartbeatResponse());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setHeartbeatResponse(subBuilder.buildPartial());
              break;
            }
            case 506: {
              com.randioo.doudizhu_server.protocol.Video.VideoGetResponse.Builder subBuilder = com.randioo.doudizhu_server.protocol.Video.VideoGetResponse.newBuilder();
              if (hasVideoGetResponse()) {
                subBuilder.mergeFrom(getVideoGetResponse());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setVideoGetResponse(subBuilder.buildPartial());
              break;
            }
            case 514: {
              com.randioo.doudizhu_server.protocol.Video.VideoGetByIdResponse.Builder subBuilder = com.randioo.doudizhu_server.protocol.Video.VideoGetByIdResponse.newBuilder();
              if (hasVideoGetByIdResponse()) {
                subBuilder.mergeFrom(getVideoGetByIdResponse());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setVideoGetByIdResponse(subBuilder.buildPartial());
              break;
            }
            case 522: {
              com.randioo.doudizhu_server.protocol.Video.VideoGetByRoundResponse.Builder subBuilder = com.randioo.doudizhu_server.protocol.Video.VideoGetByRoundResponse.newBuilder();
              if (hasVideoGetByRoundResponse()) {
                subBuilder.mergeFrom(getVideoGetByRoundResponse());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setVideoGetByRoundResponse(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // optional .com.randioo.doudizhu_server.protocol.HeartResponse HeartResponse = 1;
      public boolean hasHeartResponse() {
        return result.hasHeartResponse();
      }
      public com.randioo.doudizhu_server.protocol.Heart.HeartResponse getHeartResponse() {
        return result.getHeartResponse();
      }
      public Builder setHeartResponse(com.randioo.doudizhu_server.protocol.Heart.HeartResponse value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasHeartResponse = true;
        result.heartResponse_ = value;
        return this;
      }
      public Builder setHeartResponse(com.randioo.doudizhu_server.protocol.Heart.HeartResponse.Builder builderForValue) {
        result.hasHeartResponse = true;
        result.heartResponse_ = builderForValue.build();
        return this;
      }
      public Builder mergeHeartResponse(com.randioo.doudizhu_server.protocol.Heart.HeartResponse value) {
        if (result.hasHeartResponse() &&
            result.heartResponse_ != com.randioo.doudizhu_server.protocol.Heart.HeartResponse.getDefaultInstance()) {
          result.heartResponse_ =
            com.randioo.doudizhu_server.protocol.Heart.HeartResponse.newBuilder(result.heartResponse_).mergeFrom(value).buildPartial();
        } else {
          result.heartResponse_ = value;
        }
        result.hasHeartResponse = true;
        return this;
      }
      public Builder clearHeartResponse() {
        result.hasHeartResponse = false;
        result.heartResponse_ = com.randioo.doudizhu_server.protocol.Heart.HeartResponse.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.doudizhu_server.protocol.SCHeart SCHeart = 2;
      public boolean hasSCHeart() {
        return result.hasSCHeart();
      }
      public com.randioo.doudizhu_server.protocol.Heart.SCHeart getSCHeart() {
        return result.getSCHeart();
      }
      public Builder setSCHeart(com.randioo.doudizhu_server.protocol.Heart.SCHeart value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasSCHeart = true;
        result.sCHeart_ = value;
        return this;
      }
      public Builder setSCHeart(com.randioo.doudizhu_server.protocol.Heart.SCHeart.Builder builderForValue) {
        result.hasSCHeart = true;
        result.sCHeart_ = builderForValue.build();
        return this;
      }
      public Builder mergeSCHeart(com.randioo.doudizhu_server.protocol.Heart.SCHeart value) {
        if (result.hasSCHeart() &&
            result.sCHeart_ != com.randioo.doudizhu_server.protocol.Heart.SCHeart.getDefaultInstance()) {
          result.sCHeart_ =
            com.randioo.doudizhu_server.protocol.Heart.SCHeart.newBuilder(result.sCHeart_).mergeFrom(value).buildPartial();
        } else {
          result.sCHeart_ = value;
        }
        result.hasSCHeart = true;
        return this;
      }
      public Builder clearSCHeart() {
        result.hasSCHeart = false;
        result.sCHeart_ = com.randioo.doudizhu_server.protocol.Heart.SCHeart.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.doudizhu_server.protocol.LoginCheckAccountResponse LoginCheckAccountResponse = 3;
      public boolean hasLoginCheckAccountResponse() {
        return result.hasLoginCheckAccountResponse();
      }
      public com.randioo.doudizhu_server.protocol.Login.LoginCheckAccountResponse getLoginCheckAccountResponse() {
        return result.getLoginCheckAccountResponse();
      }
      public Builder setLoginCheckAccountResponse(com.randioo.doudizhu_server.protocol.Login.LoginCheckAccountResponse value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasLoginCheckAccountResponse = true;
        result.loginCheckAccountResponse_ = value;
        return this;
      }
      public Builder setLoginCheckAccountResponse(com.randioo.doudizhu_server.protocol.Login.LoginCheckAccountResponse.Builder builderForValue) {
        result.hasLoginCheckAccountResponse = true;
        result.loginCheckAccountResponse_ = builderForValue.build();
        return this;
      }
      public Builder mergeLoginCheckAccountResponse(com.randioo.doudizhu_server.protocol.Login.LoginCheckAccountResponse value) {
        if (result.hasLoginCheckAccountResponse() &&
            result.loginCheckAccountResponse_ != com.randioo.doudizhu_server.protocol.Login.LoginCheckAccountResponse.getDefaultInstance()) {
          result.loginCheckAccountResponse_ =
            com.randioo.doudizhu_server.protocol.Login.LoginCheckAccountResponse.newBuilder(result.loginCheckAccountResponse_).mergeFrom(value).buildPartial();
        } else {
          result.loginCheckAccountResponse_ = value;
        }
        result.hasLoginCheckAccountResponse = true;
        return this;
      }
      public Builder clearLoginCheckAccountResponse() {
        result.hasLoginCheckAccountResponse = false;
        result.loginCheckAccountResponse_ = com.randioo.doudizhu_server.protocol.Login.LoginCheckAccountResponse.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.doudizhu_server.protocol.LoginCreateRoleResponse LoginCreateRoleResponse = 4;
      public boolean hasLoginCreateRoleResponse() {
        return result.hasLoginCreateRoleResponse();
      }
      public com.randioo.doudizhu_server.protocol.Login.LoginCreateRoleResponse getLoginCreateRoleResponse() {
        return result.getLoginCreateRoleResponse();
      }
      public Builder setLoginCreateRoleResponse(com.randioo.doudizhu_server.protocol.Login.LoginCreateRoleResponse value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasLoginCreateRoleResponse = true;
        result.loginCreateRoleResponse_ = value;
        return this;
      }
      public Builder setLoginCreateRoleResponse(com.randioo.doudizhu_server.protocol.Login.LoginCreateRoleResponse.Builder builderForValue) {
        result.hasLoginCreateRoleResponse = true;
        result.loginCreateRoleResponse_ = builderForValue.build();
        return this;
      }
      public Builder mergeLoginCreateRoleResponse(com.randioo.doudizhu_server.protocol.Login.LoginCreateRoleResponse value) {
        if (result.hasLoginCreateRoleResponse() &&
            result.loginCreateRoleResponse_ != com.randioo.doudizhu_server.protocol.Login.LoginCreateRoleResponse.getDefaultInstance()) {
          result.loginCreateRoleResponse_ =
            com.randioo.doudizhu_server.protocol.Login.LoginCreateRoleResponse.newBuilder(result.loginCreateRoleResponse_).mergeFrom(value).buildPartial();
        } else {
          result.loginCreateRoleResponse_ = value;
        }
        result.hasLoginCreateRoleResponse = true;
        return this;
      }
      public Builder clearLoginCreateRoleResponse() {
        result.hasLoginCreateRoleResponse = false;
        result.loginCreateRoleResponse_ = com.randioo.doudizhu_server.protocol.Login.LoginCreateRoleResponse.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.doudizhu_server.protocol.LoginGetRoleDataResponse LoginGetRoleDataResponse = 5;
      public boolean hasLoginGetRoleDataResponse() {
        return result.hasLoginGetRoleDataResponse();
      }
      public com.randioo.doudizhu_server.protocol.Login.LoginGetRoleDataResponse getLoginGetRoleDataResponse() {
        return result.getLoginGetRoleDataResponse();
      }
      public Builder setLoginGetRoleDataResponse(com.randioo.doudizhu_server.protocol.Login.LoginGetRoleDataResponse value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasLoginGetRoleDataResponse = true;
        result.loginGetRoleDataResponse_ = value;
        return this;
      }
      public Builder setLoginGetRoleDataResponse(com.randioo.doudizhu_server.protocol.Login.LoginGetRoleDataResponse.Builder builderForValue) {
        result.hasLoginGetRoleDataResponse = true;
        result.loginGetRoleDataResponse_ = builderForValue.build();
        return this;
      }
      public Builder mergeLoginGetRoleDataResponse(com.randioo.doudizhu_server.protocol.Login.LoginGetRoleDataResponse value) {
        if (result.hasLoginGetRoleDataResponse() &&
            result.loginGetRoleDataResponse_ != com.randioo.doudizhu_server.protocol.Login.LoginGetRoleDataResponse.getDefaultInstance()) {
          result.loginGetRoleDataResponse_ =
            com.randioo.doudizhu_server.protocol.Login.LoginGetRoleDataResponse.newBuilder(result.loginGetRoleDataResponse_).mergeFrom(value).buildPartial();
        } else {
          result.loginGetRoleDataResponse_ = value;
        }
        result.hasLoginGetRoleDataResponse = true;
        return this;
      }
      public Builder clearLoginGetRoleDataResponse() {
        result.hasLoginGetRoleDataResponse = false;
        result.loginGetRoleDataResponse_ = com.randioo.doudizhu_server.protocol.Login.LoginGetRoleDataResponse.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.doudizhu_server.protocol.SCLoginGetRoleData SCLoginGetRoleData = 6;
      public boolean hasSCLoginGetRoleData() {
        return result.hasSCLoginGetRoleData();
      }
      public com.randioo.doudizhu_server.protocol.Login.SCLoginGetRoleData getSCLoginGetRoleData() {
        return result.getSCLoginGetRoleData();
      }
      public Builder setSCLoginGetRoleData(com.randioo.doudizhu_server.protocol.Login.SCLoginGetRoleData value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasSCLoginGetRoleData = true;
        result.sCLoginGetRoleData_ = value;
        return this;
      }
      public Builder setSCLoginGetRoleData(com.randioo.doudizhu_server.protocol.Login.SCLoginGetRoleData.Builder builderForValue) {
        result.hasSCLoginGetRoleData = true;
        result.sCLoginGetRoleData_ = builderForValue.build();
        return this;
      }
      public Builder mergeSCLoginGetRoleData(com.randioo.doudizhu_server.protocol.Login.SCLoginGetRoleData value) {
        if (result.hasSCLoginGetRoleData() &&
            result.sCLoginGetRoleData_ != com.randioo.doudizhu_server.protocol.Login.SCLoginGetRoleData.getDefaultInstance()) {
          result.sCLoginGetRoleData_ =
            com.randioo.doudizhu_server.protocol.Login.SCLoginGetRoleData.newBuilder(result.sCLoginGetRoleData_).mergeFrom(value).buildPartial();
        } else {
          result.sCLoginGetRoleData_ = value;
        }
        result.hasSCLoginGetRoleData = true;
        return this;
      }
      public Builder clearSCLoginGetRoleData() {
        result.hasSCLoginGetRoleData = false;
        result.sCLoginGetRoleData_ = com.randioo.doudizhu_server.protocol.Login.SCLoginGetRoleData.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.doudizhu_server.protocol.SCLoginOtherSide SCLoginOtherSide = 7;
      public boolean hasSCLoginOtherSide() {
        return result.hasSCLoginOtherSide();
      }
      public com.randioo.doudizhu_server.protocol.Login.SCLoginOtherSide getSCLoginOtherSide() {
        return result.getSCLoginOtherSide();
      }
      public Builder setSCLoginOtherSide(com.randioo.doudizhu_server.protocol.Login.SCLoginOtherSide value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasSCLoginOtherSide = true;
        result.sCLoginOtherSide_ = value;
        return this;
      }
      public Builder setSCLoginOtherSide(com.randioo.doudizhu_server.protocol.Login.SCLoginOtherSide.Builder builderForValue) {
        result.hasSCLoginOtherSide = true;
        result.sCLoginOtherSide_ = builderForValue.build();
        return this;
      }
      public Builder mergeSCLoginOtherSide(com.randioo.doudizhu_server.protocol.Login.SCLoginOtherSide value) {
        if (result.hasSCLoginOtherSide() &&
            result.sCLoginOtherSide_ != com.randioo.doudizhu_server.protocol.Login.SCLoginOtherSide.getDefaultInstance()) {
          result.sCLoginOtherSide_ =
            com.randioo.doudizhu_server.protocol.Login.SCLoginOtherSide.newBuilder(result.sCLoginOtherSide_).mergeFrom(value).buildPartial();
        } else {
          result.sCLoginOtherSide_ = value;
        }
        result.hasSCLoginOtherSide = true;
        return this;
      }
      public Builder clearSCLoginOtherSide() {
        result.hasSCLoginOtherSide = false;
        result.sCLoginOtherSide_ = com.randioo.doudizhu_server.protocol.Login.SCLoginOtherSide.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.doudizhu_server.protocol.RoleRenameResponse RoleRenameResponse = 8;
      public boolean hasRoleRenameResponse() {
        return result.hasRoleRenameResponse();
      }
      public com.randioo.doudizhu_server.protocol.Role.RoleRenameResponse getRoleRenameResponse() {
        return result.getRoleRenameResponse();
      }
      public Builder setRoleRenameResponse(com.randioo.doudizhu_server.protocol.Role.RoleRenameResponse value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasRoleRenameResponse = true;
        result.roleRenameResponse_ = value;
        return this;
      }
      public Builder setRoleRenameResponse(com.randioo.doudizhu_server.protocol.Role.RoleRenameResponse.Builder builderForValue) {
        result.hasRoleRenameResponse = true;
        result.roleRenameResponse_ = builderForValue.build();
        return this;
      }
      public Builder mergeRoleRenameResponse(com.randioo.doudizhu_server.protocol.Role.RoleRenameResponse value) {
        if (result.hasRoleRenameResponse() &&
            result.roleRenameResponse_ != com.randioo.doudizhu_server.protocol.Role.RoleRenameResponse.getDefaultInstance()) {
          result.roleRenameResponse_ =
            com.randioo.doudizhu_server.protocol.Role.RoleRenameResponse.newBuilder(result.roleRenameResponse_).mergeFrom(value).buildPartial();
        } else {
          result.roleRenameResponse_ = value;
        }
        result.hasRoleRenameResponse = true;
        return this;
      }
      public Builder clearRoleRenameResponse() {
        result.hasRoleRenameResponse = false;
        result.roleRenameResponse_ = com.randioo.doudizhu_server.protocol.Role.RoleRenameResponse.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.doudizhu_server.protocol.MatchCreateGameResponse MatchCreateGameResponse = 9;
      public boolean hasMatchCreateGameResponse() {
        return result.hasMatchCreateGameResponse();
      }
      public com.randioo.doudizhu_server.protocol.Match.MatchCreateGameResponse getMatchCreateGameResponse() {
        return result.getMatchCreateGameResponse();
      }
      public Builder setMatchCreateGameResponse(com.randioo.doudizhu_server.protocol.Match.MatchCreateGameResponse value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasMatchCreateGameResponse = true;
        result.matchCreateGameResponse_ = value;
        return this;
      }
      public Builder setMatchCreateGameResponse(com.randioo.doudizhu_server.protocol.Match.MatchCreateGameResponse.Builder builderForValue) {
        result.hasMatchCreateGameResponse = true;
        result.matchCreateGameResponse_ = builderForValue.build();
        return this;
      }
      public Builder mergeMatchCreateGameResponse(com.randioo.doudizhu_server.protocol.Match.MatchCreateGameResponse value) {
        if (result.hasMatchCreateGameResponse() &&
            result.matchCreateGameResponse_ != com.randioo.doudizhu_server.protocol.Match.MatchCreateGameResponse.getDefaultInstance()) {
          result.matchCreateGameResponse_ =
            com.randioo.doudizhu_server.protocol.Match.MatchCreateGameResponse.newBuilder(result.matchCreateGameResponse_).mergeFrom(value).buildPartial();
        } else {
          result.matchCreateGameResponse_ = value;
        }
        result.hasMatchCreateGameResponse = true;
        return this;
      }
      public Builder clearMatchCreateGameResponse() {
        result.hasMatchCreateGameResponse = false;
        result.matchCreateGameResponse_ = com.randioo.doudizhu_server.protocol.Match.MatchCreateGameResponse.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.doudizhu_server.protocol.MatchJoinGameResponse MatchJoinGameResponse = 10;
      public boolean hasMatchJoinGameResponse() {
        return result.hasMatchJoinGameResponse();
      }
      public com.randioo.doudizhu_server.protocol.Match.MatchJoinGameResponse getMatchJoinGameResponse() {
        return result.getMatchJoinGameResponse();
      }
      public Builder setMatchJoinGameResponse(com.randioo.doudizhu_server.protocol.Match.MatchJoinGameResponse value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasMatchJoinGameResponse = true;
        result.matchJoinGameResponse_ = value;
        return this;
      }
      public Builder setMatchJoinGameResponse(com.randioo.doudizhu_server.protocol.Match.MatchJoinGameResponse.Builder builderForValue) {
        result.hasMatchJoinGameResponse = true;
        result.matchJoinGameResponse_ = builderForValue.build();
        return this;
      }
      public Builder mergeMatchJoinGameResponse(com.randioo.doudizhu_server.protocol.Match.MatchJoinGameResponse value) {
        if (result.hasMatchJoinGameResponse() &&
            result.matchJoinGameResponse_ != com.randioo.doudizhu_server.protocol.Match.MatchJoinGameResponse.getDefaultInstance()) {
          result.matchJoinGameResponse_ =
            com.randioo.doudizhu_server.protocol.Match.MatchJoinGameResponse.newBuilder(result.matchJoinGameResponse_).mergeFrom(value).buildPartial();
        } else {
          result.matchJoinGameResponse_ = value;
        }
        result.hasMatchJoinGameResponse = true;
        return this;
      }
      public Builder clearMatchJoinGameResponse() {
        result.hasMatchJoinGameResponse = false;
        result.matchJoinGameResponse_ = com.randioo.doudizhu_server.protocol.Match.MatchJoinGameResponse.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.doudizhu_server.protocol.SCMatchJoinGame SCMatchJoinGame = 11;
      public boolean hasSCMatchJoinGame() {
        return result.hasSCMatchJoinGame();
      }
      public com.randioo.doudizhu_server.protocol.Match.SCMatchJoinGame getSCMatchJoinGame() {
        return result.getSCMatchJoinGame();
      }
      public Builder setSCMatchJoinGame(com.randioo.doudizhu_server.protocol.Match.SCMatchJoinGame value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasSCMatchJoinGame = true;
        result.sCMatchJoinGame_ = value;
        return this;
      }
      public Builder setSCMatchJoinGame(com.randioo.doudizhu_server.protocol.Match.SCMatchJoinGame.Builder builderForValue) {
        result.hasSCMatchJoinGame = true;
        result.sCMatchJoinGame_ = builderForValue.build();
        return this;
      }
      public Builder mergeSCMatchJoinGame(com.randioo.doudizhu_server.protocol.Match.SCMatchJoinGame value) {
        if (result.hasSCMatchJoinGame() &&
            result.sCMatchJoinGame_ != com.randioo.doudizhu_server.protocol.Match.SCMatchJoinGame.getDefaultInstance()) {
          result.sCMatchJoinGame_ =
            com.randioo.doudizhu_server.protocol.Match.SCMatchJoinGame.newBuilder(result.sCMatchJoinGame_).mergeFrom(value).buildPartial();
        } else {
          result.sCMatchJoinGame_ = value;
        }
        result.hasSCMatchJoinGame = true;
        return this;
      }
      public Builder clearSCMatchJoinGame() {
        result.hasSCMatchJoinGame = false;
        result.sCMatchJoinGame_ = com.randioo.doudizhu_server.protocol.Match.SCMatchJoinGame.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.doudizhu_server.protocol.MatchRoleResponse MatchRoleResponse = 12;
      public boolean hasMatchRoleResponse() {
        return result.hasMatchRoleResponse();
      }
      public com.randioo.doudizhu_server.protocol.Match.MatchRoleResponse getMatchRoleResponse() {
        return result.getMatchRoleResponse();
      }
      public Builder setMatchRoleResponse(com.randioo.doudizhu_server.protocol.Match.MatchRoleResponse value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasMatchRoleResponse = true;
        result.matchRoleResponse_ = value;
        return this;
      }
      public Builder setMatchRoleResponse(com.randioo.doudizhu_server.protocol.Match.MatchRoleResponse.Builder builderForValue) {
        result.hasMatchRoleResponse = true;
        result.matchRoleResponse_ = builderForValue.build();
        return this;
      }
      public Builder mergeMatchRoleResponse(com.randioo.doudizhu_server.protocol.Match.MatchRoleResponse value) {
        if (result.hasMatchRoleResponse() &&
            result.matchRoleResponse_ != com.randioo.doudizhu_server.protocol.Match.MatchRoleResponse.getDefaultInstance()) {
          result.matchRoleResponse_ =
            com.randioo.doudizhu_server.protocol.Match.MatchRoleResponse.newBuilder(result.matchRoleResponse_).mergeFrom(value).buildPartial();
        } else {
          result.matchRoleResponse_ = value;
        }
        result.hasMatchRoleResponse = true;
        return this;
      }
      public Builder clearMatchRoleResponse() {
        result.hasMatchRoleResponse = false;
        result.matchRoleResponse_ = com.randioo.doudizhu_server.protocol.Match.MatchRoleResponse.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.doudizhu_server.protocol.SCMatchRole SCMatchRole = 13;
      public boolean hasSCMatchRole() {
        return result.hasSCMatchRole();
      }
      public com.randioo.doudizhu_server.protocol.Match.SCMatchRole getSCMatchRole() {
        return result.getSCMatchRole();
      }
      public Builder setSCMatchRole(com.randioo.doudizhu_server.protocol.Match.SCMatchRole value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasSCMatchRole = true;
        result.sCMatchRole_ = value;
        return this;
      }
      public Builder setSCMatchRole(com.randioo.doudizhu_server.protocol.Match.SCMatchRole.Builder builderForValue) {
        result.hasSCMatchRole = true;
        result.sCMatchRole_ = builderForValue.build();
        return this;
      }
      public Builder mergeSCMatchRole(com.randioo.doudizhu_server.protocol.Match.SCMatchRole value) {
        if (result.hasSCMatchRole() &&
            result.sCMatchRole_ != com.randioo.doudizhu_server.protocol.Match.SCMatchRole.getDefaultInstance()) {
          result.sCMatchRole_ =
            com.randioo.doudizhu_server.protocol.Match.SCMatchRole.newBuilder(result.sCMatchRole_).mergeFrom(value).buildPartial();
        } else {
          result.sCMatchRole_ = value;
        }
        result.hasSCMatchRole = true;
        return this;
      }
      public Builder clearSCMatchRole() {
        result.hasSCMatchRole = false;
        result.sCMatchRole_ = com.randioo.doudizhu_server.protocol.Match.SCMatchRole.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.doudizhu_server.protocol.MatchCancelResponse MatchCancelResponse = 14;
      public boolean hasMatchCancelResponse() {
        return result.hasMatchCancelResponse();
      }
      public com.randioo.doudizhu_server.protocol.Match.MatchCancelResponse getMatchCancelResponse() {
        return result.getMatchCancelResponse();
      }
      public Builder setMatchCancelResponse(com.randioo.doudizhu_server.protocol.Match.MatchCancelResponse value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasMatchCancelResponse = true;
        result.matchCancelResponse_ = value;
        return this;
      }
      public Builder setMatchCancelResponse(com.randioo.doudizhu_server.protocol.Match.MatchCancelResponse.Builder builderForValue) {
        result.hasMatchCancelResponse = true;
        result.matchCancelResponse_ = builderForValue.build();
        return this;
      }
      public Builder mergeMatchCancelResponse(com.randioo.doudizhu_server.protocol.Match.MatchCancelResponse value) {
        if (result.hasMatchCancelResponse() &&
            result.matchCancelResponse_ != com.randioo.doudizhu_server.protocol.Match.MatchCancelResponse.getDefaultInstance()) {
          result.matchCancelResponse_ =
            com.randioo.doudizhu_server.protocol.Match.MatchCancelResponse.newBuilder(result.matchCancelResponse_).mergeFrom(value).buildPartial();
        } else {
          result.matchCancelResponse_ = value;
        }
        result.hasMatchCancelResponse = true;
        return this;
      }
      public Builder clearMatchCancelResponse() {
        result.hasMatchCancelResponse = false;
        result.matchCancelResponse_ = com.randioo.doudizhu_server.protocol.Match.MatchCancelResponse.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.doudizhu_server.protocol.SCMatchCreateGame SCMatchCreateGame = 15;
      public boolean hasSCMatchCreateGame() {
        return result.hasSCMatchCreateGame();
      }
      public com.randioo.doudizhu_server.protocol.Match.SCMatchCreateGame getSCMatchCreateGame() {
        return result.getSCMatchCreateGame();
      }
      public Builder setSCMatchCreateGame(com.randioo.doudizhu_server.protocol.Match.SCMatchCreateGame value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasSCMatchCreateGame = true;
        result.sCMatchCreateGame_ = value;
        return this;
      }
      public Builder setSCMatchCreateGame(com.randioo.doudizhu_server.protocol.Match.SCMatchCreateGame.Builder builderForValue) {
        result.hasSCMatchCreateGame = true;
        result.sCMatchCreateGame_ = builderForValue.build();
        return this;
      }
      public Builder mergeSCMatchCreateGame(com.randioo.doudizhu_server.protocol.Match.SCMatchCreateGame value) {
        if (result.hasSCMatchCreateGame() &&
            result.sCMatchCreateGame_ != com.randioo.doudizhu_server.protocol.Match.SCMatchCreateGame.getDefaultInstance()) {
          result.sCMatchCreateGame_ =
            com.randioo.doudizhu_server.protocol.Match.SCMatchCreateGame.newBuilder(result.sCMatchCreateGame_).mergeFrom(value).buildPartial();
        } else {
          result.sCMatchCreateGame_ = value;
        }
        result.hasSCMatchCreateGame = true;
        return this;
      }
      public Builder clearSCMatchCreateGame() {
        result.hasSCMatchCreateGame = false;
        result.sCMatchCreateGame_ = com.randioo.doudizhu_server.protocol.Match.SCMatchCreateGame.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.doudizhu_server.protocol.SCMatchAI SCMatchAI = 16;
      public boolean hasSCMatchAI() {
        return result.hasSCMatchAI();
      }
      public com.randioo.doudizhu_server.protocol.Match.SCMatchAI getSCMatchAI() {
        return result.getSCMatchAI();
      }
      public Builder setSCMatchAI(com.randioo.doudizhu_server.protocol.Match.SCMatchAI value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasSCMatchAI = true;
        result.sCMatchAI_ = value;
        return this;
      }
      public Builder setSCMatchAI(com.randioo.doudizhu_server.protocol.Match.SCMatchAI.Builder builderForValue) {
        result.hasSCMatchAI = true;
        result.sCMatchAI_ = builderForValue.build();
        return this;
      }
      public Builder mergeSCMatchAI(com.randioo.doudizhu_server.protocol.Match.SCMatchAI value) {
        if (result.hasSCMatchAI() &&
            result.sCMatchAI_ != com.randioo.doudizhu_server.protocol.Match.SCMatchAI.getDefaultInstance()) {
          result.sCMatchAI_ =
            com.randioo.doudizhu_server.protocol.Match.SCMatchAI.newBuilder(result.sCMatchAI_).mergeFrom(value).buildPartial();
        } else {
          result.sCMatchAI_ = value;
        }
        result.hasSCMatchAI = true;
        return this;
      }
      public Builder clearSCMatchAI() {
        result.hasSCMatchAI = false;
        result.sCMatchAI_ = com.randioo.doudizhu_server.protocol.Match.SCMatchAI.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.doudizhu_server.protocol.SCMatchJoinGameData SCMatchJoinGameData = 17;
      public boolean hasSCMatchJoinGameData() {
        return result.hasSCMatchJoinGameData();
      }
      public com.randioo.doudizhu_server.protocol.Match.SCMatchJoinGameData getSCMatchJoinGameData() {
        return result.getSCMatchJoinGameData();
      }
      public Builder setSCMatchJoinGameData(com.randioo.doudizhu_server.protocol.Match.SCMatchJoinGameData value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasSCMatchJoinGameData = true;
        result.sCMatchJoinGameData_ = value;
        return this;
      }
      public Builder setSCMatchJoinGameData(com.randioo.doudizhu_server.protocol.Match.SCMatchJoinGameData.Builder builderForValue) {
        result.hasSCMatchJoinGameData = true;
        result.sCMatchJoinGameData_ = builderForValue.build();
        return this;
      }
      public Builder mergeSCMatchJoinGameData(com.randioo.doudizhu_server.protocol.Match.SCMatchJoinGameData value) {
        if (result.hasSCMatchJoinGameData() &&
            result.sCMatchJoinGameData_ != com.randioo.doudizhu_server.protocol.Match.SCMatchJoinGameData.getDefaultInstance()) {
          result.sCMatchJoinGameData_ =
            com.randioo.doudizhu_server.protocol.Match.SCMatchJoinGameData.newBuilder(result.sCMatchJoinGameData_).mergeFrom(value).buildPartial();
        } else {
          result.sCMatchJoinGameData_ = value;
        }
        result.hasSCMatchJoinGameData = true;
        return this;
      }
      public Builder clearSCMatchJoinGameData() {
        result.hasSCMatchJoinGameData = false;
        result.sCMatchJoinGameData_ = com.randioo.doudizhu_server.protocol.Match.SCMatchJoinGameData.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.doudizhu_server.protocol.MatchAIResponse MatchAIResponse = 18;
      public boolean hasMatchAIResponse() {
        return result.hasMatchAIResponse();
      }
      public com.randioo.doudizhu_server.protocol.Match.MatchAIResponse getMatchAIResponse() {
        return result.getMatchAIResponse();
      }
      public Builder setMatchAIResponse(com.randioo.doudizhu_server.protocol.Match.MatchAIResponse value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasMatchAIResponse = true;
        result.matchAIResponse_ = value;
        return this;
      }
      public Builder setMatchAIResponse(com.randioo.doudizhu_server.protocol.Match.MatchAIResponse.Builder builderForValue) {
        result.hasMatchAIResponse = true;
        result.matchAIResponse_ = builderForValue.build();
        return this;
      }
      public Builder mergeMatchAIResponse(com.randioo.doudizhu_server.protocol.Match.MatchAIResponse value) {
        if (result.hasMatchAIResponse() &&
            result.matchAIResponse_ != com.randioo.doudizhu_server.protocol.Match.MatchAIResponse.getDefaultInstance()) {
          result.matchAIResponse_ =
            com.randioo.doudizhu_server.protocol.Match.MatchAIResponse.newBuilder(result.matchAIResponse_).mergeFrom(value).buildPartial();
        } else {
          result.matchAIResponse_ = value;
        }
        result.hasMatchAIResponse = true;
        return this;
      }
      public Builder clearMatchAIResponse() {
        result.hasMatchAIResponse = false;
        result.matchAIResponse_ = com.randioo.doudizhu_server.protocol.Match.MatchAIResponse.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.doudizhu_server.protocol.SCMatchOutOfTime SCMatchOutOfTime = 19;
      public boolean hasSCMatchOutOfTime() {
        return result.hasSCMatchOutOfTime();
      }
      public com.randioo.doudizhu_server.protocol.Match.SCMatchOutOfTime getSCMatchOutOfTime() {
        return result.getSCMatchOutOfTime();
      }
      public Builder setSCMatchOutOfTime(com.randioo.doudizhu_server.protocol.Match.SCMatchOutOfTime value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasSCMatchOutOfTime = true;
        result.sCMatchOutOfTime_ = value;
        return this;
      }
      public Builder setSCMatchOutOfTime(com.randioo.doudizhu_server.protocol.Match.SCMatchOutOfTime.Builder builderForValue) {
        result.hasSCMatchOutOfTime = true;
        result.sCMatchOutOfTime_ = builderForValue.build();
        return this;
      }
      public Builder mergeSCMatchOutOfTime(com.randioo.doudizhu_server.protocol.Match.SCMatchOutOfTime value) {
        if (result.hasSCMatchOutOfTime() &&
            result.sCMatchOutOfTime_ != com.randioo.doudizhu_server.protocol.Match.SCMatchOutOfTime.getDefaultInstance()) {
          result.sCMatchOutOfTime_ =
            com.randioo.doudizhu_server.protocol.Match.SCMatchOutOfTime.newBuilder(result.sCMatchOutOfTime_).mergeFrom(value).buildPartial();
        } else {
          result.sCMatchOutOfTime_ = value;
        }
        result.hasSCMatchOutOfTime = true;
        return this;
      }
      public Builder clearSCMatchOutOfTime() {
        result.hasSCMatchOutOfTime = false;
        result.sCMatchOutOfTime_ = com.randioo.doudizhu_server.protocol.Match.SCMatchOutOfTime.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.doudizhu_server.protocol.SCMatchCancelGame SCMatchCancelGame = 20;
      public boolean hasSCMatchCancelGame() {
        return result.hasSCMatchCancelGame();
      }
      public com.randioo.doudizhu_server.protocol.Match.SCMatchCancelGame getSCMatchCancelGame() {
        return result.getSCMatchCancelGame();
      }
      public Builder setSCMatchCancelGame(com.randioo.doudizhu_server.protocol.Match.SCMatchCancelGame value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasSCMatchCancelGame = true;
        result.sCMatchCancelGame_ = value;
        return this;
      }
      public Builder setSCMatchCancelGame(com.randioo.doudizhu_server.protocol.Match.SCMatchCancelGame.Builder builderForValue) {
        result.hasSCMatchCancelGame = true;
        result.sCMatchCancelGame_ = builderForValue.build();
        return this;
      }
      public Builder mergeSCMatchCancelGame(com.randioo.doudizhu_server.protocol.Match.SCMatchCancelGame value) {
        if (result.hasSCMatchCancelGame() &&
            result.sCMatchCancelGame_ != com.randioo.doudizhu_server.protocol.Match.SCMatchCancelGame.getDefaultInstance()) {
          result.sCMatchCancelGame_ =
            com.randioo.doudizhu_server.protocol.Match.SCMatchCancelGame.newBuilder(result.sCMatchCancelGame_).mergeFrom(value).buildPartial();
        } else {
          result.sCMatchCancelGame_ = value;
        }
        result.hasSCMatchCancelGame = true;
        return this;
      }
      public Builder clearSCMatchCancelGame() {
        result.hasSCMatchCancelGame = false;
        result.sCMatchCancelGame_ = com.randioo.doudizhu_server.protocol.Match.SCMatchCancelGame.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.doudizhu_server.protocol.MatchGetGameInfoResponse MatchGetGameInfoResponse = 21;
      public boolean hasMatchGetGameInfoResponse() {
        return result.hasMatchGetGameInfoResponse();
      }
      public com.randioo.doudizhu_server.protocol.Match.MatchGetGameInfoResponse getMatchGetGameInfoResponse() {
        return result.getMatchGetGameInfoResponse();
      }
      public Builder setMatchGetGameInfoResponse(com.randioo.doudizhu_server.protocol.Match.MatchGetGameInfoResponse value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasMatchGetGameInfoResponse = true;
        result.matchGetGameInfoResponse_ = value;
        return this;
      }
      public Builder setMatchGetGameInfoResponse(com.randioo.doudizhu_server.protocol.Match.MatchGetGameInfoResponse.Builder builderForValue) {
        result.hasMatchGetGameInfoResponse = true;
        result.matchGetGameInfoResponse_ = builderForValue.build();
        return this;
      }
      public Builder mergeMatchGetGameInfoResponse(com.randioo.doudizhu_server.protocol.Match.MatchGetGameInfoResponse value) {
        if (result.hasMatchGetGameInfoResponse() &&
            result.matchGetGameInfoResponse_ != com.randioo.doudizhu_server.protocol.Match.MatchGetGameInfoResponse.getDefaultInstance()) {
          result.matchGetGameInfoResponse_ =
            com.randioo.doudizhu_server.protocol.Match.MatchGetGameInfoResponse.newBuilder(result.matchGetGameInfoResponse_).mergeFrom(value).buildPartial();
        } else {
          result.matchGetGameInfoResponse_ = value;
        }
        result.hasMatchGetGameInfoResponse = true;
        return this;
      }
      public Builder clearMatchGetGameInfoResponse() {
        result.hasMatchGetGameInfoResponse = false;
        result.matchGetGameInfoResponse_ = com.randioo.doudizhu_server.protocol.Match.MatchGetGameInfoResponse.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.doudizhu_server.protocol.FightReadyResponse FightReadyResponse = 22;
      public boolean hasFightReadyResponse() {
        return result.hasFightReadyResponse();
      }
      public com.randioo.doudizhu_server.protocol.Fight.FightReadyResponse getFightReadyResponse() {
        return result.getFightReadyResponse();
      }
      public Builder setFightReadyResponse(com.randioo.doudizhu_server.protocol.Fight.FightReadyResponse value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasFightReadyResponse = true;
        result.fightReadyResponse_ = value;
        return this;
      }
      public Builder setFightReadyResponse(com.randioo.doudizhu_server.protocol.Fight.FightReadyResponse.Builder builderForValue) {
        result.hasFightReadyResponse = true;
        result.fightReadyResponse_ = builderForValue.build();
        return this;
      }
      public Builder mergeFightReadyResponse(com.randioo.doudizhu_server.protocol.Fight.FightReadyResponse value) {
        if (result.hasFightReadyResponse() &&
            result.fightReadyResponse_ != com.randioo.doudizhu_server.protocol.Fight.FightReadyResponse.getDefaultInstance()) {
          result.fightReadyResponse_ =
            com.randioo.doudizhu_server.protocol.Fight.FightReadyResponse.newBuilder(result.fightReadyResponse_).mergeFrom(value).buildPartial();
        } else {
          result.fightReadyResponse_ = value;
        }
        result.hasFightReadyResponse = true;
        return this;
      }
      public Builder clearFightReadyResponse() {
        result.hasFightReadyResponse = false;
        result.fightReadyResponse_ = com.randioo.doudizhu_server.protocol.Fight.FightReadyResponse.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.doudizhu_server.protocol.SCFightReady SCFightReady = 23;
      public boolean hasSCFightReady() {
        return result.hasSCFightReady();
      }
      public com.randioo.doudizhu_server.protocol.Fight.SCFightReady getSCFightReady() {
        return result.getSCFightReady();
      }
      public Builder setSCFightReady(com.randioo.doudizhu_server.protocol.Fight.SCFightReady value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasSCFightReady = true;
        result.sCFightReady_ = value;
        return this;
      }
      public Builder setSCFightReady(com.randioo.doudizhu_server.protocol.Fight.SCFightReady.Builder builderForValue) {
        result.hasSCFightReady = true;
        result.sCFightReady_ = builderForValue.build();
        return this;
      }
      public Builder mergeSCFightReady(com.randioo.doudizhu_server.protocol.Fight.SCFightReady value) {
        if (result.hasSCFightReady() &&
            result.sCFightReady_ != com.randioo.doudizhu_server.protocol.Fight.SCFightReady.getDefaultInstance()) {
          result.sCFightReady_ =
            com.randioo.doudizhu_server.protocol.Fight.SCFightReady.newBuilder(result.sCFightReady_).mergeFrom(value).buildPartial();
        } else {
          result.sCFightReady_ = value;
        }
        result.hasSCFightReady = true;
        return this;
      }
      public Builder clearSCFightReady() {
        result.hasSCFightReady = false;
        result.sCFightReady_ = com.randioo.doudizhu_server.protocol.Fight.SCFightReady.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.doudizhu_server.protocol.SCFightStart SCFightStart = 24;
      public boolean hasSCFightStart() {
        return result.hasSCFightStart();
      }
      public com.randioo.doudizhu_server.protocol.Fight.SCFightStart getSCFightStart() {
        return result.getSCFightStart();
      }
      public Builder setSCFightStart(com.randioo.doudizhu_server.protocol.Fight.SCFightStart value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasSCFightStart = true;
        result.sCFightStart_ = value;
        return this;
      }
      public Builder setSCFightStart(com.randioo.doudizhu_server.protocol.Fight.SCFightStart.Builder builderForValue) {
        result.hasSCFightStart = true;
        result.sCFightStart_ = builderForValue.build();
        return this;
      }
      public Builder mergeSCFightStart(com.randioo.doudizhu_server.protocol.Fight.SCFightStart value) {
        if (result.hasSCFightStart() &&
            result.sCFightStart_ != com.randioo.doudizhu_server.protocol.Fight.SCFightStart.getDefaultInstance()) {
          result.sCFightStart_ =
            com.randioo.doudizhu_server.protocol.Fight.SCFightStart.newBuilder(result.sCFightStart_).mergeFrom(value).buildPartial();
        } else {
          result.sCFightStart_ = value;
        }
        result.hasSCFightStart = true;
        return this;
      }
      public Builder clearSCFightStart() {
        result.hasSCFightStart = false;
        result.sCFightStart_ = com.randioo.doudizhu_server.protocol.Fight.SCFightStart.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.doudizhu_server.protocol.FightExitGameResponse FightExitGameResponse = 25;
      public boolean hasFightExitGameResponse() {
        return result.hasFightExitGameResponse();
      }
      public com.randioo.doudizhu_server.protocol.Fight.FightExitGameResponse getFightExitGameResponse() {
        return result.getFightExitGameResponse();
      }
      public Builder setFightExitGameResponse(com.randioo.doudizhu_server.protocol.Fight.FightExitGameResponse value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasFightExitGameResponse = true;
        result.fightExitGameResponse_ = value;
        return this;
      }
      public Builder setFightExitGameResponse(com.randioo.doudizhu_server.protocol.Fight.FightExitGameResponse.Builder builderForValue) {
        result.hasFightExitGameResponse = true;
        result.fightExitGameResponse_ = builderForValue.build();
        return this;
      }
      public Builder mergeFightExitGameResponse(com.randioo.doudizhu_server.protocol.Fight.FightExitGameResponse value) {
        if (result.hasFightExitGameResponse() &&
            result.fightExitGameResponse_ != com.randioo.doudizhu_server.protocol.Fight.FightExitGameResponse.getDefaultInstance()) {
          result.fightExitGameResponse_ =
            com.randioo.doudizhu_server.protocol.Fight.FightExitGameResponse.newBuilder(result.fightExitGameResponse_).mergeFrom(value).buildPartial();
        } else {
          result.fightExitGameResponse_ = value;
        }
        result.hasFightExitGameResponse = true;
        return this;
      }
      public Builder clearFightExitGameResponse() {
        result.hasFightExitGameResponse = false;
        result.fightExitGameResponse_ = com.randioo.doudizhu_server.protocol.Fight.FightExitGameResponse.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.doudizhu_server.protocol.SCFightExitGame SCFightExitGame = 26;
      public boolean hasSCFightExitGame() {
        return result.hasSCFightExitGame();
      }
      public com.randioo.doudizhu_server.protocol.Fight.SCFightExitGame getSCFightExitGame() {
        return result.getSCFightExitGame();
      }
      public Builder setSCFightExitGame(com.randioo.doudizhu_server.protocol.Fight.SCFightExitGame value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasSCFightExitGame = true;
        result.sCFightExitGame_ = value;
        return this;
      }
      public Builder setSCFightExitGame(com.randioo.doudizhu_server.protocol.Fight.SCFightExitGame.Builder builderForValue) {
        result.hasSCFightExitGame = true;
        result.sCFightExitGame_ = builderForValue.build();
        return this;
      }
      public Builder mergeSCFightExitGame(com.randioo.doudizhu_server.protocol.Fight.SCFightExitGame value) {
        if (result.hasSCFightExitGame() &&
            result.sCFightExitGame_ != com.randioo.doudizhu_server.protocol.Fight.SCFightExitGame.getDefaultInstance()) {
          result.sCFightExitGame_ =
            com.randioo.doudizhu_server.protocol.Fight.SCFightExitGame.newBuilder(result.sCFightExitGame_).mergeFrom(value).buildPartial();
        } else {
          result.sCFightExitGame_ = value;
        }
        result.hasSCFightExitGame = true;
        return this;
      }
      public Builder clearSCFightExitGame() {
        result.hasSCFightExitGame = false;
        result.sCFightExitGame_ = com.randioo.doudizhu_server.protocol.Fight.SCFightExitGame.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.doudizhu_server.protocol.SCFightApplyExitGame SCFightApplyExitGame = 27;
      public boolean hasSCFightApplyExitGame() {
        return result.hasSCFightApplyExitGame();
      }
      public com.randioo.doudizhu_server.protocol.Fight.SCFightApplyExitGame getSCFightApplyExitGame() {
        return result.getSCFightApplyExitGame();
      }
      public Builder setSCFightApplyExitGame(com.randioo.doudizhu_server.protocol.Fight.SCFightApplyExitGame value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasSCFightApplyExitGame = true;
        result.sCFightApplyExitGame_ = value;
        return this;
      }
      public Builder setSCFightApplyExitGame(com.randioo.doudizhu_server.protocol.Fight.SCFightApplyExitGame.Builder builderForValue) {
        result.hasSCFightApplyExitGame = true;
        result.sCFightApplyExitGame_ = builderForValue.build();
        return this;
      }
      public Builder mergeSCFightApplyExitGame(com.randioo.doudizhu_server.protocol.Fight.SCFightApplyExitGame value) {
        if (result.hasSCFightApplyExitGame() &&
            result.sCFightApplyExitGame_ != com.randioo.doudizhu_server.protocol.Fight.SCFightApplyExitGame.getDefaultInstance()) {
          result.sCFightApplyExitGame_ =
            com.randioo.doudizhu_server.protocol.Fight.SCFightApplyExitGame.newBuilder(result.sCFightApplyExitGame_).mergeFrom(value).buildPartial();
        } else {
          result.sCFightApplyExitGame_ = value;
        }
        result.hasSCFightApplyExitGame = true;
        return this;
      }
      public Builder clearSCFightApplyExitGame() {
        result.hasSCFightApplyExitGame = false;
        result.sCFightApplyExitGame_ = com.randioo.doudizhu_server.protocol.Fight.SCFightApplyExitGame.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.doudizhu_server.protocol.FightAgreeExitGameResponse FightAgreeExitGameResponse = 28;
      public boolean hasFightAgreeExitGameResponse() {
        return result.hasFightAgreeExitGameResponse();
      }
      public com.randioo.doudizhu_server.protocol.Fight.FightAgreeExitGameResponse getFightAgreeExitGameResponse() {
        return result.getFightAgreeExitGameResponse();
      }
      public Builder setFightAgreeExitGameResponse(com.randioo.doudizhu_server.protocol.Fight.FightAgreeExitGameResponse value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasFightAgreeExitGameResponse = true;
        result.fightAgreeExitGameResponse_ = value;
        return this;
      }
      public Builder setFightAgreeExitGameResponse(com.randioo.doudizhu_server.protocol.Fight.FightAgreeExitGameResponse.Builder builderForValue) {
        result.hasFightAgreeExitGameResponse = true;
        result.fightAgreeExitGameResponse_ = builderForValue.build();
        return this;
      }
      public Builder mergeFightAgreeExitGameResponse(com.randioo.doudizhu_server.protocol.Fight.FightAgreeExitGameResponse value) {
        if (result.hasFightAgreeExitGameResponse() &&
            result.fightAgreeExitGameResponse_ != com.randioo.doudizhu_server.protocol.Fight.FightAgreeExitGameResponse.getDefaultInstance()) {
          result.fightAgreeExitGameResponse_ =
            com.randioo.doudizhu_server.protocol.Fight.FightAgreeExitGameResponse.newBuilder(result.fightAgreeExitGameResponse_).mergeFrom(value).buildPartial();
        } else {
          result.fightAgreeExitGameResponse_ = value;
        }
        result.hasFightAgreeExitGameResponse = true;
        return this;
      }
      public Builder clearFightAgreeExitGameResponse() {
        result.hasFightAgreeExitGameResponse = false;
        result.fightAgreeExitGameResponse_ = com.randioo.doudizhu_server.protocol.Fight.FightAgreeExitGameResponse.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.doudizhu_server.protocol.SCFightGameDismiss SCFightGameDismiss = 29;
      public boolean hasSCFightGameDismiss() {
        return result.hasSCFightGameDismiss();
      }
      public com.randioo.doudizhu_server.protocol.Fight.SCFightGameDismiss getSCFightGameDismiss() {
        return result.getSCFightGameDismiss();
      }
      public Builder setSCFightGameDismiss(com.randioo.doudizhu_server.protocol.Fight.SCFightGameDismiss value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasSCFightGameDismiss = true;
        result.sCFightGameDismiss_ = value;
        return this;
      }
      public Builder setSCFightGameDismiss(com.randioo.doudizhu_server.protocol.Fight.SCFightGameDismiss.Builder builderForValue) {
        result.hasSCFightGameDismiss = true;
        result.sCFightGameDismiss_ = builderForValue.build();
        return this;
      }
      public Builder mergeSCFightGameDismiss(com.randioo.doudizhu_server.protocol.Fight.SCFightGameDismiss value) {
        if (result.hasSCFightGameDismiss() &&
            result.sCFightGameDismiss_ != com.randioo.doudizhu_server.protocol.Fight.SCFightGameDismiss.getDefaultInstance()) {
          result.sCFightGameDismiss_ =
            com.randioo.doudizhu_server.protocol.Fight.SCFightGameDismiss.newBuilder(result.sCFightGameDismiss_).mergeFrom(value).buildPartial();
        } else {
          result.sCFightGameDismiss_ = value;
        }
        result.hasSCFightGameDismiss = true;
        return this;
      }
      public Builder clearSCFightGameDismiss() {
        result.hasSCFightGameDismiss = false;
        result.sCFightGameDismiss_ = com.randioo.doudizhu_server.protocol.Fight.SCFightGameDismiss.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.doudizhu_server.protocol.SCFightLoadResource SCFightLoadResource = 30;
      public boolean hasSCFightLoadResource() {
        return result.hasSCFightLoadResource();
      }
      public com.randioo.doudizhu_server.protocol.Fight.SCFightLoadResource getSCFightLoadResource() {
        return result.getSCFightLoadResource();
      }
      public Builder setSCFightLoadResource(com.randioo.doudizhu_server.protocol.Fight.SCFightLoadResource value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasSCFightLoadResource = true;
        result.sCFightLoadResource_ = value;
        return this;
      }
      public Builder setSCFightLoadResource(com.randioo.doudizhu_server.protocol.Fight.SCFightLoadResource.Builder builderForValue) {
        result.hasSCFightLoadResource = true;
        result.sCFightLoadResource_ = builderForValue.build();
        return this;
      }
      public Builder mergeSCFightLoadResource(com.randioo.doudizhu_server.protocol.Fight.SCFightLoadResource value) {
        if (result.hasSCFightLoadResource() &&
            result.sCFightLoadResource_ != com.randioo.doudizhu_server.protocol.Fight.SCFightLoadResource.getDefaultInstance()) {
          result.sCFightLoadResource_ =
            com.randioo.doudizhu_server.protocol.Fight.SCFightLoadResource.newBuilder(result.sCFightLoadResource_).mergeFrom(value).buildPartial();
        } else {
          result.sCFightLoadResource_ = value;
        }
        result.hasSCFightLoadResource = true;
        return this;
      }
      public Builder clearSCFightLoadResource() {
        result.hasSCFightLoadResource = false;
        result.sCFightLoadResource_ = com.randioo.doudizhu_server.protocol.Fight.SCFightLoadResource.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.doudizhu_server.protocol.SCFightCallLandLord SCFightCallLandLord = 31;
      public boolean hasSCFightCallLandLord() {
        return result.hasSCFightCallLandLord();
      }
      public com.randioo.doudizhu_server.protocol.Fight.SCFightCallLandLord getSCFightCallLandLord() {
        return result.getSCFightCallLandLord();
      }
      public Builder setSCFightCallLandLord(com.randioo.doudizhu_server.protocol.Fight.SCFightCallLandLord value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasSCFightCallLandLord = true;
        result.sCFightCallLandLord_ = value;
        return this;
      }
      public Builder setSCFightCallLandLord(com.randioo.doudizhu_server.protocol.Fight.SCFightCallLandLord.Builder builderForValue) {
        result.hasSCFightCallLandLord = true;
        result.sCFightCallLandLord_ = builderForValue.build();
        return this;
      }
      public Builder mergeSCFightCallLandLord(com.randioo.doudizhu_server.protocol.Fight.SCFightCallLandLord value) {
        if (result.hasSCFightCallLandLord() &&
            result.sCFightCallLandLord_ != com.randioo.doudizhu_server.protocol.Fight.SCFightCallLandLord.getDefaultInstance()) {
          result.sCFightCallLandLord_ =
            com.randioo.doudizhu_server.protocol.Fight.SCFightCallLandLord.newBuilder(result.sCFightCallLandLord_).mergeFrom(value).buildPartial();
        } else {
          result.sCFightCallLandLord_ = value;
        }
        result.hasSCFightCallLandLord = true;
        return this;
      }
      public Builder clearSCFightCallLandLord() {
        result.hasSCFightCallLandLord = false;
        result.sCFightCallLandLord_ = com.randioo.doudizhu_server.protocol.Fight.SCFightCallLandLord.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.doudizhu_server.protocol.SCFightPutOut SCFightPutOut = 32;
      public boolean hasSCFightPutOut() {
        return result.hasSCFightPutOut();
      }
      public com.randioo.doudizhu_server.protocol.Fight.SCFightPutOut getSCFightPutOut() {
        return result.getSCFightPutOut();
      }
      public Builder setSCFightPutOut(com.randioo.doudizhu_server.protocol.Fight.SCFightPutOut value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasSCFightPutOut = true;
        result.sCFightPutOut_ = value;
        return this;
      }
      public Builder setSCFightPutOut(com.randioo.doudizhu_server.protocol.Fight.SCFightPutOut.Builder builderForValue) {
        result.hasSCFightPutOut = true;
        result.sCFightPutOut_ = builderForValue.build();
        return this;
      }
      public Builder mergeSCFightPutOut(com.randioo.doudizhu_server.protocol.Fight.SCFightPutOut value) {
        if (result.hasSCFightPutOut() &&
            result.sCFightPutOut_ != com.randioo.doudizhu_server.protocol.Fight.SCFightPutOut.getDefaultInstance()) {
          result.sCFightPutOut_ =
            com.randioo.doudizhu_server.protocol.Fight.SCFightPutOut.newBuilder(result.sCFightPutOut_).mergeFrom(value).buildPartial();
        } else {
          result.sCFightPutOut_ = value;
        }
        result.hasSCFightPutOut = true;
        return this;
      }
      public Builder clearSCFightPutOut() {
        result.hasSCFightPutOut = false;
        result.sCFightPutOut_ = com.randioo.doudizhu_server.protocol.Fight.SCFightPutOut.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.doudizhu_server.protocol.SCFightLandLord SCFightLandLord = 33;
      public boolean hasSCFightLandLord() {
        return result.hasSCFightLandLord();
      }
      public com.randioo.doudizhu_server.protocol.Fight.SCFightLandLord getSCFightLandLord() {
        return result.getSCFightLandLord();
      }
      public Builder setSCFightLandLord(com.randioo.doudizhu_server.protocol.Fight.SCFightLandLord value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasSCFightLandLord = true;
        result.sCFightLandLord_ = value;
        return this;
      }
      public Builder setSCFightLandLord(com.randioo.doudizhu_server.protocol.Fight.SCFightLandLord.Builder builderForValue) {
        result.hasSCFightLandLord = true;
        result.sCFightLandLord_ = builderForValue.build();
        return this;
      }
      public Builder mergeSCFightLandLord(com.randioo.doudizhu_server.protocol.Fight.SCFightLandLord value) {
        if (result.hasSCFightLandLord() &&
            result.sCFightLandLord_ != com.randioo.doudizhu_server.protocol.Fight.SCFightLandLord.getDefaultInstance()) {
          result.sCFightLandLord_ =
            com.randioo.doudizhu_server.protocol.Fight.SCFightLandLord.newBuilder(result.sCFightLandLord_).mergeFrom(value).buildPartial();
        } else {
          result.sCFightLandLord_ = value;
        }
        result.hasSCFightLandLord = true;
        return this;
      }
      public Builder clearSCFightLandLord() {
        result.hasSCFightLandLord = false;
        result.sCFightLandLord_ = com.randioo.doudizhu_server.protocol.Fight.SCFightLandLord.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.doudizhu_server.protocol.FightCallLandLordResponse FightCallLandLordResponse = 34;
      public boolean hasFightCallLandLordResponse() {
        return result.hasFightCallLandLordResponse();
      }
      public com.randioo.doudizhu_server.protocol.Fight.FightCallLandLordResponse getFightCallLandLordResponse() {
        return result.getFightCallLandLordResponse();
      }
      public Builder setFightCallLandLordResponse(com.randioo.doudizhu_server.protocol.Fight.FightCallLandLordResponse value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasFightCallLandLordResponse = true;
        result.fightCallLandLordResponse_ = value;
        return this;
      }
      public Builder setFightCallLandLordResponse(com.randioo.doudizhu_server.protocol.Fight.FightCallLandLordResponse.Builder builderForValue) {
        result.hasFightCallLandLordResponse = true;
        result.fightCallLandLordResponse_ = builderForValue.build();
        return this;
      }
      public Builder mergeFightCallLandLordResponse(com.randioo.doudizhu_server.protocol.Fight.FightCallLandLordResponse value) {
        if (result.hasFightCallLandLordResponse() &&
            result.fightCallLandLordResponse_ != com.randioo.doudizhu_server.protocol.Fight.FightCallLandLordResponse.getDefaultInstance()) {
          result.fightCallLandLordResponse_ =
            com.randioo.doudizhu_server.protocol.Fight.FightCallLandLordResponse.newBuilder(result.fightCallLandLordResponse_).mergeFrom(value).buildPartial();
        } else {
          result.fightCallLandLordResponse_ = value;
        }
        result.hasFightCallLandLordResponse = true;
        return this;
      }
      public Builder clearFightCallLandLordResponse() {
        result.hasFightCallLandLordResponse = false;
        result.fightCallLandLordResponse_ = com.randioo.doudizhu_server.protocol.Fight.FightCallLandLordResponse.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.doudizhu_server.protocol.FightSendCardResponse FightSendCardResponse = 35;
      public boolean hasFightSendCardResponse() {
        return result.hasFightSendCardResponse();
      }
      public com.randioo.doudizhu_server.protocol.Fight.FightSendCardResponse getFightSendCardResponse() {
        return result.getFightSendCardResponse();
      }
      public Builder setFightSendCardResponse(com.randioo.doudizhu_server.protocol.Fight.FightSendCardResponse value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasFightSendCardResponse = true;
        result.fightSendCardResponse_ = value;
        return this;
      }
      public Builder setFightSendCardResponse(com.randioo.doudizhu_server.protocol.Fight.FightSendCardResponse.Builder builderForValue) {
        result.hasFightSendCardResponse = true;
        result.fightSendCardResponse_ = builderForValue.build();
        return this;
      }
      public Builder mergeFightSendCardResponse(com.randioo.doudizhu_server.protocol.Fight.FightSendCardResponse value) {
        if (result.hasFightSendCardResponse() &&
            result.fightSendCardResponse_ != com.randioo.doudizhu_server.protocol.Fight.FightSendCardResponse.getDefaultInstance()) {
          result.fightSendCardResponse_ =
            com.randioo.doudizhu_server.protocol.Fight.FightSendCardResponse.newBuilder(result.fightSendCardResponse_).mergeFrom(value).buildPartial();
        } else {
          result.fightSendCardResponse_ = value;
        }
        result.hasFightSendCardResponse = true;
        return this;
      }
      public Builder clearFightSendCardResponse() {
        result.hasFightSendCardResponse = false;
        result.fightSendCardResponse_ = com.randioo.doudizhu_server.protocol.Fight.FightSendCardResponse.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.doudizhu_server.protocol.SCFightPutOutPai SCFightPutOutPai = 36;
      public boolean hasSCFightPutOutPai() {
        return result.hasSCFightPutOutPai();
      }
      public com.randioo.doudizhu_server.protocol.Fight.SCFightPutOutPai getSCFightPutOutPai() {
        return result.getSCFightPutOutPai();
      }
      public Builder setSCFightPutOutPai(com.randioo.doudizhu_server.protocol.Fight.SCFightPutOutPai value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasSCFightPutOutPai = true;
        result.sCFightPutOutPai_ = value;
        return this;
      }
      public Builder setSCFightPutOutPai(com.randioo.doudizhu_server.protocol.Fight.SCFightPutOutPai.Builder builderForValue) {
        result.hasSCFightPutOutPai = true;
        result.sCFightPutOutPai_ = builderForValue.build();
        return this;
      }
      public Builder mergeSCFightPutOutPai(com.randioo.doudizhu_server.protocol.Fight.SCFightPutOutPai value) {
        if (result.hasSCFightPutOutPai() &&
            result.sCFightPutOutPai_ != com.randioo.doudizhu_server.protocol.Fight.SCFightPutOutPai.getDefaultInstance()) {
          result.sCFightPutOutPai_ =
            com.randioo.doudizhu_server.protocol.Fight.SCFightPutOutPai.newBuilder(result.sCFightPutOutPai_).mergeFrom(value).buildPartial();
        } else {
          result.sCFightPutOutPai_ = value;
        }
        result.hasSCFightPutOutPai = true;
        return this;
      }
      public Builder clearSCFightPutOutPai() {
        result.hasSCFightPutOutPai = false;
        result.sCFightPutOutPai_ = com.randioo.doudizhu_server.protocol.Fight.SCFightPutOutPai.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.doudizhu_server.protocol.SCFightMingPai SCFightMingPai = 37;
      public boolean hasSCFightMingPai() {
        return result.hasSCFightMingPai();
      }
      public com.randioo.doudizhu_server.protocol.Fight.SCFightMingPai getSCFightMingPai() {
        return result.getSCFightMingPai();
      }
      public Builder setSCFightMingPai(com.randioo.doudizhu_server.protocol.Fight.SCFightMingPai value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasSCFightMingPai = true;
        result.sCFightMingPai_ = value;
        return this;
      }
      public Builder setSCFightMingPai(com.randioo.doudizhu_server.protocol.Fight.SCFightMingPai.Builder builderForValue) {
        result.hasSCFightMingPai = true;
        result.sCFightMingPai_ = builderForValue.build();
        return this;
      }
      public Builder mergeSCFightMingPai(com.randioo.doudizhu_server.protocol.Fight.SCFightMingPai value) {
        if (result.hasSCFightMingPai() &&
            result.sCFightMingPai_ != com.randioo.doudizhu_server.protocol.Fight.SCFightMingPai.getDefaultInstance()) {
          result.sCFightMingPai_ =
            com.randioo.doudizhu_server.protocol.Fight.SCFightMingPai.newBuilder(result.sCFightMingPai_).mergeFrom(value).buildPartial();
        } else {
          result.sCFightMingPai_ = value;
        }
        result.hasSCFightMingPai = true;
        return this;
      }
      public Builder clearSCFightMingPai() {
        result.hasSCFightMingPai = false;
        result.sCFightMingPai_ = com.randioo.doudizhu_server.protocol.Fight.SCFightMingPai.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.doudizhu_server.protocol.SCFightRoundOver SCFightRoundOver = 38;
      public boolean hasSCFightRoundOver() {
        return result.hasSCFightRoundOver();
      }
      public com.randioo.doudizhu_server.protocol.Fight.SCFightRoundOver getSCFightRoundOver() {
        return result.getSCFightRoundOver();
      }
      public Builder setSCFightRoundOver(com.randioo.doudizhu_server.protocol.Fight.SCFightRoundOver value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasSCFightRoundOver = true;
        result.sCFightRoundOver_ = value;
        return this;
      }
      public Builder setSCFightRoundOver(com.randioo.doudizhu_server.protocol.Fight.SCFightRoundOver.Builder builderForValue) {
        result.hasSCFightRoundOver = true;
        result.sCFightRoundOver_ = builderForValue.build();
        return this;
      }
      public Builder mergeSCFightRoundOver(com.randioo.doudizhu_server.protocol.Fight.SCFightRoundOver value) {
        if (result.hasSCFightRoundOver() &&
            result.sCFightRoundOver_ != com.randioo.doudizhu_server.protocol.Fight.SCFightRoundOver.getDefaultInstance()) {
          result.sCFightRoundOver_ =
            com.randioo.doudizhu_server.protocol.Fight.SCFightRoundOver.newBuilder(result.sCFightRoundOver_).mergeFrom(value).buildPartial();
        } else {
          result.sCFightRoundOver_ = value;
        }
        result.hasSCFightRoundOver = true;
        return this;
      }
      public Builder clearSCFightRoundOver() {
        result.hasSCFightRoundOver = false;
        result.sCFightRoundOver_ = com.randioo.doudizhu_server.protocol.Fight.SCFightRoundOver.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.doudizhu_server.protocol.FightRecommandResponse FightRecommandResponse = 39;
      public boolean hasFightRecommandResponse() {
        return result.hasFightRecommandResponse();
      }
      public com.randioo.doudizhu_server.protocol.Fight.FightRecommandResponse getFightRecommandResponse() {
        return result.getFightRecommandResponse();
      }
      public Builder setFightRecommandResponse(com.randioo.doudizhu_server.protocol.Fight.FightRecommandResponse value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasFightRecommandResponse = true;
        result.fightRecommandResponse_ = value;
        return this;
      }
      public Builder setFightRecommandResponse(com.randioo.doudizhu_server.protocol.Fight.FightRecommandResponse.Builder builderForValue) {
        result.hasFightRecommandResponse = true;
        result.fightRecommandResponse_ = builderForValue.build();
        return this;
      }
      public Builder mergeFightRecommandResponse(com.randioo.doudizhu_server.protocol.Fight.FightRecommandResponse value) {
        if (result.hasFightRecommandResponse() &&
            result.fightRecommandResponse_ != com.randioo.doudizhu_server.protocol.Fight.FightRecommandResponse.getDefaultInstance()) {
          result.fightRecommandResponse_ =
            com.randioo.doudizhu_server.protocol.Fight.FightRecommandResponse.newBuilder(result.fightRecommandResponse_).mergeFrom(value).buildPartial();
        } else {
          result.fightRecommandResponse_ = value;
        }
        result.hasFightRecommandResponse = true;
        return this;
      }
      public Builder clearFightRecommandResponse() {
        result.hasFightRecommandResponse = false;
        result.fightRecommandResponse_ = com.randioo.doudizhu_server.protocol.Fight.FightRecommandResponse.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.doudizhu_server.protocol.SCFightGameOver SCFightGameOver = 40;
      public boolean hasSCFightGameOver() {
        return result.hasSCFightGameOver();
      }
      public com.randioo.doudizhu_server.protocol.Fight.SCFightGameOver getSCFightGameOver() {
        return result.getSCFightGameOver();
      }
      public Builder setSCFightGameOver(com.randioo.doudizhu_server.protocol.Fight.SCFightGameOver value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasSCFightGameOver = true;
        result.sCFightGameOver_ = value;
        return this;
      }
      public Builder setSCFightGameOver(com.randioo.doudizhu_server.protocol.Fight.SCFightGameOver.Builder builderForValue) {
        result.hasSCFightGameOver = true;
        result.sCFightGameOver_ = builderForValue.build();
        return this;
      }
      public Builder mergeSCFightGameOver(com.randioo.doudizhu_server.protocol.Fight.SCFightGameOver value) {
        if (result.hasSCFightGameOver() &&
            result.sCFightGameOver_ != com.randioo.doudizhu_server.protocol.Fight.SCFightGameOver.getDefaultInstance()) {
          result.sCFightGameOver_ =
            com.randioo.doudizhu_server.protocol.Fight.SCFightGameOver.newBuilder(result.sCFightGameOver_).mergeFrom(value).buildPartial();
        } else {
          result.sCFightGameOver_ = value;
        }
        result.hasSCFightGameOver = true;
        return this;
      }
      public Builder clearSCFightGameOver() {
        result.hasSCFightGameOver = false;
        result.sCFightGameOver_ = com.randioo.doudizhu_server.protocol.Fight.SCFightGameOver.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.doudizhu_server.protocol.FightMingPaiResponse FightMingPaiResponse = 41;
      public boolean hasFightMingPaiResponse() {
        return result.hasFightMingPaiResponse();
      }
      public com.randioo.doudizhu_server.protocol.Fight.FightMingPaiResponse getFightMingPaiResponse() {
        return result.getFightMingPaiResponse();
      }
      public Builder setFightMingPaiResponse(com.randioo.doudizhu_server.protocol.Fight.FightMingPaiResponse value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasFightMingPaiResponse = true;
        result.fightMingPaiResponse_ = value;
        return this;
      }
      public Builder setFightMingPaiResponse(com.randioo.doudizhu_server.protocol.Fight.FightMingPaiResponse.Builder builderForValue) {
        result.hasFightMingPaiResponse = true;
        result.fightMingPaiResponse_ = builderForValue.build();
        return this;
      }
      public Builder mergeFightMingPaiResponse(com.randioo.doudizhu_server.protocol.Fight.FightMingPaiResponse value) {
        if (result.hasFightMingPaiResponse() &&
            result.fightMingPaiResponse_ != com.randioo.doudizhu_server.protocol.Fight.FightMingPaiResponse.getDefaultInstance()) {
          result.fightMingPaiResponse_ =
            com.randioo.doudizhu_server.protocol.Fight.FightMingPaiResponse.newBuilder(result.fightMingPaiResponse_).mergeFrom(value).buildPartial();
        } else {
          result.fightMingPaiResponse_ = value;
        }
        result.hasFightMingPaiResponse = true;
        return this;
      }
      public Builder clearFightMingPaiResponse() {
        result.hasFightMingPaiResponse = false;
        result.fightMingPaiResponse_ = com.randioo.doudizhu_server.protocol.Fight.FightMingPaiResponse.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.doudizhu_server.protocol.FightGetlastRoundResponse FightGetlastRoundResponse = 42;
      public boolean hasFightGetlastRoundResponse() {
        return result.hasFightGetlastRoundResponse();
      }
      public com.randioo.doudizhu_server.protocol.Fight.FightGetlastRoundResponse getFightGetlastRoundResponse() {
        return result.getFightGetlastRoundResponse();
      }
      public Builder setFightGetlastRoundResponse(com.randioo.doudizhu_server.protocol.Fight.FightGetlastRoundResponse value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasFightGetlastRoundResponse = true;
        result.fightGetlastRoundResponse_ = value;
        return this;
      }
      public Builder setFightGetlastRoundResponse(com.randioo.doudizhu_server.protocol.Fight.FightGetlastRoundResponse.Builder builderForValue) {
        result.hasFightGetlastRoundResponse = true;
        result.fightGetlastRoundResponse_ = builderForValue.build();
        return this;
      }
      public Builder mergeFightGetlastRoundResponse(com.randioo.doudizhu_server.protocol.Fight.FightGetlastRoundResponse value) {
        if (result.hasFightGetlastRoundResponse() &&
            result.fightGetlastRoundResponse_ != com.randioo.doudizhu_server.protocol.Fight.FightGetlastRoundResponse.getDefaultInstance()) {
          result.fightGetlastRoundResponse_ =
            com.randioo.doudizhu_server.protocol.Fight.FightGetlastRoundResponse.newBuilder(result.fightGetlastRoundResponse_).mergeFrom(value).buildPartial();
        } else {
          result.fightGetlastRoundResponse_ = value;
        }
        result.hasFightGetlastRoundResponse = true;
        return this;
      }
      public Builder clearFightGetlastRoundResponse() {
        result.hasFightGetlastRoundResponse = false;
        result.fightGetlastRoundResponse_ = com.randioo.doudizhu_server.protocol.Fight.FightGetlastRoundResponse.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.doudizhu_server.protocol.SCFightLastRoundReady SCFightLastRoundReady = 43;
      public boolean hasSCFightLastRoundReady() {
        return result.hasSCFightLastRoundReady();
      }
      public com.randioo.doudizhu_server.protocol.Fight.SCFightLastRoundReady getSCFightLastRoundReady() {
        return result.getSCFightLastRoundReady();
      }
      public Builder setSCFightLastRoundReady(com.randioo.doudizhu_server.protocol.Fight.SCFightLastRoundReady value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasSCFightLastRoundReady = true;
        result.sCFightLastRoundReady_ = value;
        return this;
      }
      public Builder setSCFightLastRoundReady(com.randioo.doudizhu_server.protocol.Fight.SCFightLastRoundReady.Builder builderForValue) {
        result.hasSCFightLastRoundReady = true;
        result.sCFightLastRoundReady_ = builderForValue.build();
        return this;
      }
      public Builder mergeSCFightLastRoundReady(com.randioo.doudizhu_server.protocol.Fight.SCFightLastRoundReady value) {
        if (result.hasSCFightLastRoundReady() &&
            result.sCFightLastRoundReady_ != com.randioo.doudizhu_server.protocol.Fight.SCFightLastRoundReady.getDefaultInstance()) {
          result.sCFightLastRoundReady_ =
            com.randioo.doudizhu_server.protocol.Fight.SCFightLastRoundReady.newBuilder(result.sCFightLastRoundReady_).mergeFrom(value).buildPartial();
        } else {
          result.sCFightLastRoundReady_ = value;
        }
        result.hasSCFightLastRoundReady = true;
        return this;
      }
      public Builder clearSCFightLastRoundReady() {
        result.hasSCFightLastRoundReady = false;
        result.sCFightLastRoundReady_ = com.randioo.doudizhu_server.protocol.Fight.SCFightLastRoundReady.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.doudizhu_server.protocol.FightRejoinResponse FightRejoinResponse = 44;
      public boolean hasFightRejoinResponse() {
        return result.hasFightRejoinResponse();
      }
      public com.randioo.doudizhu_server.protocol.Fight.FightRejoinResponse getFightRejoinResponse() {
        return result.getFightRejoinResponse();
      }
      public Builder setFightRejoinResponse(com.randioo.doudizhu_server.protocol.Fight.FightRejoinResponse value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasFightRejoinResponse = true;
        result.fightRejoinResponse_ = value;
        return this;
      }
      public Builder setFightRejoinResponse(com.randioo.doudizhu_server.protocol.Fight.FightRejoinResponse.Builder builderForValue) {
        result.hasFightRejoinResponse = true;
        result.fightRejoinResponse_ = builderForValue.build();
        return this;
      }
      public Builder mergeFightRejoinResponse(com.randioo.doudizhu_server.protocol.Fight.FightRejoinResponse value) {
        if (result.hasFightRejoinResponse() &&
            result.fightRejoinResponse_ != com.randioo.doudizhu_server.protocol.Fight.FightRejoinResponse.getDefaultInstance()) {
          result.fightRejoinResponse_ =
            com.randioo.doudizhu_server.protocol.Fight.FightRejoinResponse.newBuilder(result.fightRejoinResponse_).mergeFrom(value).buildPartial();
        } else {
          result.fightRejoinResponse_ = value;
        }
        result.hasFightRejoinResponse = true;
        return this;
      }
      public Builder clearFightRejoinResponse() {
        result.hasFightRejoinResponse = false;
        result.fightRejoinResponse_ = com.randioo.doudizhu_server.protocol.Fight.FightRejoinResponse.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.doudizhu_server.protocol.SCFightDisconnect SCFightDisconnect = 45;
      public boolean hasSCFightDisconnect() {
        return result.hasSCFightDisconnect();
      }
      public com.randioo.doudizhu_server.protocol.Fight.SCFightDisconnect getSCFightDisconnect() {
        return result.getSCFightDisconnect();
      }
      public Builder setSCFightDisconnect(com.randioo.doudizhu_server.protocol.Fight.SCFightDisconnect value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasSCFightDisconnect = true;
        result.sCFightDisconnect_ = value;
        return this;
      }
      public Builder setSCFightDisconnect(com.randioo.doudizhu_server.protocol.Fight.SCFightDisconnect.Builder builderForValue) {
        result.hasSCFightDisconnect = true;
        result.sCFightDisconnect_ = builderForValue.build();
        return this;
      }
      public Builder mergeSCFightDisconnect(com.randioo.doudizhu_server.protocol.Fight.SCFightDisconnect value) {
        if (result.hasSCFightDisconnect() &&
            result.sCFightDisconnect_ != com.randioo.doudizhu_server.protocol.Fight.SCFightDisconnect.getDefaultInstance()) {
          result.sCFightDisconnect_ =
            com.randioo.doudizhu_server.protocol.Fight.SCFightDisconnect.newBuilder(result.sCFightDisconnect_).mergeFrom(value).buildPartial();
        } else {
          result.sCFightDisconnect_ = value;
        }
        result.hasSCFightDisconnect = true;
        return this;
      }
      public Builder clearSCFightDisconnect() {
        result.hasSCFightDisconnect = false;
        result.sCFightDisconnect_ = com.randioo.doudizhu_server.protocol.Fight.SCFightDisconnect.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.doudizhu_server.protocol.SCFightRejoin SCFightRejoin = 46;
      public boolean hasSCFightRejoin() {
        return result.hasSCFightRejoin();
      }
      public com.randioo.doudizhu_server.protocol.Fight.SCFightRejoin getSCFightRejoin() {
        return result.getSCFightRejoin();
      }
      public Builder setSCFightRejoin(com.randioo.doudizhu_server.protocol.Fight.SCFightRejoin value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasSCFightRejoin = true;
        result.sCFightRejoin_ = value;
        return this;
      }
      public Builder setSCFightRejoin(com.randioo.doudizhu_server.protocol.Fight.SCFightRejoin.Builder builderForValue) {
        result.hasSCFightRejoin = true;
        result.sCFightRejoin_ = builderForValue.build();
        return this;
      }
      public Builder mergeSCFightRejoin(com.randioo.doudizhu_server.protocol.Fight.SCFightRejoin value) {
        if (result.hasSCFightRejoin() &&
            result.sCFightRejoin_ != com.randioo.doudizhu_server.protocol.Fight.SCFightRejoin.getDefaultInstance()) {
          result.sCFightRejoin_ =
            com.randioo.doudizhu_server.protocol.Fight.SCFightRejoin.newBuilder(result.sCFightRejoin_).mergeFrom(value).buildPartial();
        } else {
          result.sCFightRejoin_ = value;
        }
        result.hasSCFightRejoin = true;
        return this;
      }
      public Builder clearSCFightRejoin() {
        result.hasSCFightRejoin = false;
        result.sCFightRejoin_ = com.randioo.doudizhu_server.protocol.Fight.SCFightRejoin.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.doudizhu_server.protocol.SCFightApplyExitResult SCFightApplyExitResult = 47;
      public boolean hasSCFightApplyExitResult() {
        return result.hasSCFightApplyExitResult();
      }
      public com.randioo.doudizhu_server.protocol.Fight.SCFightApplyExitResult getSCFightApplyExitResult() {
        return result.getSCFightApplyExitResult();
      }
      public Builder setSCFightApplyExitResult(com.randioo.doudizhu_server.protocol.Fight.SCFightApplyExitResult value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasSCFightApplyExitResult = true;
        result.sCFightApplyExitResult_ = value;
        return this;
      }
      public Builder setSCFightApplyExitResult(com.randioo.doudizhu_server.protocol.Fight.SCFightApplyExitResult.Builder builderForValue) {
        result.hasSCFightApplyExitResult = true;
        result.sCFightApplyExitResult_ = builderForValue.build();
        return this;
      }
      public Builder mergeSCFightApplyExitResult(com.randioo.doudizhu_server.protocol.Fight.SCFightApplyExitResult value) {
        if (result.hasSCFightApplyExitResult() &&
            result.sCFightApplyExitResult_ != com.randioo.doudizhu_server.protocol.Fight.SCFightApplyExitResult.getDefaultInstance()) {
          result.sCFightApplyExitResult_ =
            com.randioo.doudizhu_server.protocol.Fight.SCFightApplyExitResult.newBuilder(result.sCFightApplyExitResult_).mergeFrom(value).buildPartial();
        } else {
          result.sCFightApplyExitResult_ = value;
        }
        result.hasSCFightApplyExitResult = true;
        return this;
      }
      public Builder clearSCFightApplyExitResult() {
        result.hasSCFightApplyExitResult = false;
        result.sCFightApplyExitResult_ = com.randioo.doudizhu_server.protocol.Fight.SCFightApplyExitResult.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.doudizhu_server.protocol.FightAutoResponse FightAutoResponse = 48;
      public boolean hasFightAutoResponse() {
        return result.hasFightAutoResponse();
      }
      public com.randioo.doudizhu_server.protocol.Fight.FightAutoResponse getFightAutoResponse() {
        return result.getFightAutoResponse();
      }
      public Builder setFightAutoResponse(com.randioo.doudizhu_server.protocol.Fight.FightAutoResponse value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasFightAutoResponse = true;
        result.fightAutoResponse_ = value;
        return this;
      }
      public Builder setFightAutoResponse(com.randioo.doudizhu_server.protocol.Fight.FightAutoResponse.Builder builderForValue) {
        result.hasFightAutoResponse = true;
        result.fightAutoResponse_ = builderForValue.build();
        return this;
      }
      public Builder mergeFightAutoResponse(com.randioo.doudizhu_server.protocol.Fight.FightAutoResponse value) {
        if (result.hasFightAutoResponse() &&
            result.fightAutoResponse_ != com.randioo.doudizhu_server.protocol.Fight.FightAutoResponse.getDefaultInstance()) {
          result.fightAutoResponse_ =
            com.randioo.doudizhu_server.protocol.Fight.FightAutoResponse.newBuilder(result.fightAutoResponse_).mergeFrom(value).buildPartial();
        } else {
          result.fightAutoResponse_ = value;
        }
        result.hasFightAutoResponse = true;
        return this;
      }
      public Builder clearFightAutoResponse() {
        result.hasFightAutoResponse = false;
        result.fightAutoResponse_ = com.randioo.doudizhu_server.protocol.Fight.FightAutoResponse.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.doudizhu_server.protocol.SCFightAuto SCFightAuto = 49;
      public boolean hasSCFightAuto() {
        return result.hasSCFightAuto();
      }
      public com.randioo.doudizhu_server.protocol.Fight.SCFightAuto getSCFightAuto() {
        return result.getSCFightAuto();
      }
      public Builder setSCFightAuto(com.randioo.doudizhu_server.protocol.Fight.SCFightAuto value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasSCFightAuto = true;
        result.sCFightAuto_ = value;
        return this;
      }
      public Builder setSCFightAuto(com.randioo.doudizhu_server.protocol.Fight.SCFightAuto.Builder builderForValue) {
        result.hasSCFightAuto = true;
        result.sCFightAuto_ = builderForValue.build();
        return this;
      }
      public Builder mergeSCFightAuto(com.randioo.doudizhu_server.protocol.Fight.SCFightAuto value) {
        if (result.hasSCFightAuto() &&
            result.sCFightAuto_ != com.randioo.doudizhu_server.protocol.Fight.SCFightAuto.getDefaultInstance()) {
          result.sCFightAuto_ =
            com.randioo.doudizhu_server.protocol.Fight.SCFightAuto.newBuilder(result.sCFightAuto_).mergeFrom(value).buildPartial();
        } else {
          result.sCFightAuto_ = value;
        }
        result.hasSCFightAuto = true;
        return this;
      }
      public Builder clearSCFightAuto() {
        result.hasSCFightAuto = false;
        result.sCFightAuto_ = com.randioo.doudizhu_server.protocol.Fight.SCFightAuto.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.doudizhu_server.protocol.SCFightFinishRejoin SCFightFinishRejoin = 50;
      public boolean hasSCFightFinishRejoin() {
        return result.hasSCFightFinishRejoin();
      }
      public com.randioo.doudizhu_server.protocol.Fight.SCFightFinishRejoin getSCFightFinishRejoin() {
        return result.getSCFightFinishRejoin();
      }
      public Builder setSCFightFinishRejoin(com.randioo.doudizhu_server.protocol.Fight.SCFightFinishRejoin value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasSCFightFinishRejoin = true;
        result.sCFightFinishRejoin_ = value;
        return this;
      }
      public Builder setSCFightFinishRejoin(com.randioo.doudizhu_server.protocol.Fight.SCFightFinishRejoin.Builder builderForValue) {
        result.hasSCFightFinishRejoin = true;
        result.sCFightFinishRejoin_ = builderForValue.build();
        return this;
      }
      public Builder mergeSCFightFinishRejoin(com.randioo.doudizhu_server.protocol.Fight.SCFightFinishRejoin value) {
        if (result.hasSCFightFinishRejoin() &&
            result.sCFightFinishRejoin_ != com.randioo.doudizhu_server.protocol.Fight.SCFightFinishRejoin.getDefaultInstance()) {
          result.sCFightFinishRejoin_ =
            com.randioo.doudizhu_server.protocol.Fight.SCFightFinishRejoin.newBuilder(result.sCFightFinishRejoin_).mergeFrom(value).buildPartial();
        } else {
          result.sCFightFinishRejoin_ = value;
        }
        result.hasSCFightFinishRejoin = true;
        return this;
      }
      public Builder clearSCFightFinishRejoin() {
        result.hasSCFightFinishRejoin = false;
        result.sCFightFinishRejoin_ = com.randioo.doudizhu_server.protocol.Fight.SCFightFinishRejoin.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.doudizhu_server.protocol.FightApplyExitGameResponse FightApplyExitGameResponse = 51;
      public boolean hasFightApplyExitGameResponse() {
        return result.hasFightApplyExitGameResponse();
      }
      public com.randioo.doudizhu_server.protocol.Fight.FightApplyExitGameResponse getFightApplyExitGameResponse() {
        return result.getFightApplyExitGameResponse();
      }
      public Builder setFightApplyExitGameResponse(com.randioo.doudizhu_server.protocol.Fight.FightApplyExitGameResponse value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasFightApplyExitGameResponse = true;
        result.fightApplyExitGameResponse_ = value;
        return this;
      }
      public Builder setFightApplyExitGameResponse(com.randioo.doudizhu_server.protocol.Fight.FightApplyExitGameResponse.Builder builderForValue) {
        result.hasFightApplyExitGameResponse = true;
        result.fightApplyExitGameResponse_ = builderForValue.build();
        return this;
      }
      public Builder mergeFightApplyExitGameResponse(com.randioo.doudizhu_server.protocol.Fight.FightApplyExitGameResponse value) {
        if (result.hasFightApplyExitGameResponse() &&
            result.fightApplyExitGameResponse_ != com.randioo.doudizhu_server.protocol.Fight.FightApplyExitGameResponse.getDefaultInstance()) {
          result.fightApplyExitGameResponse_ =
            com.randioo.doudizhu_server.protocol.Fight.FightApplyExitGameResponse.newBuilder(result.fightApplyExitGameResponse_).mergeFrom(value).buildPartial();
        } else {
          result.fightApplyExitGameResponse_ = value;
        }
        result.hasFightApplyExitGameResponse = true;
        return this;
      }
      public Builder clearFightApplyExitGameResponse() {
        result.hasFightApplyExitGameResponse = false;
        result.fightApplyExitGameResponse_ = com.randioo.doudizhu_server.protocol.Fight.FightApplyExitGameResponse.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.doudizhu_server.protocol.SCFightCallFen SCFightCallFen = 52;
      public boolean hasSCFightCallFen() {
        return result.hasSCFightCallFen();
      }
      public com.randioo.doudizhu_server.protocol.Fight.SCFightCallFen getSCFightCallFen() {
        return result.getSCFightCallFen();
      }
      public Builder setSCFightCallFen(com.randioo.doudizhu_server.protocol.Fight.SCFightCallFen value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasSCFightCallFen = true;
        result.sCFightCallFen_ = value;
        return this;
      }
      public Builder setSCFightCallFen(com.randioo.doudizhu_server.protocol.Fight.SCFightCallFen.Builder builderForValue) {
        result.hasSCFightCallFen = true;
        result.sCFightCallFen_ = builderForValue.build();
        return this;
      }
      public Builder mergeSCFightCallFen(com.randioo.doudizhu_server.protocol.Fight.SCFightCallFen value) {
        if (result.hasSCFightCallFen() &&
            result.sCFightCallFen_ != com.randioo.doudizhu_server.protocol.Fight.SCFightCallFen.getDefaultInstance()) {
          result.sCFightCallFen_ =
            com.randioo.doudizhu_server.protocol.Fight.SCFightCallFen.newBuilder(result.sCFightCallFen_).mergeFrom(value).buildPartial();
        } else {
          result.sCFightCallFen_ = value;
        }
        result.hasSCFightCallFen = true;
        return this;
      }
      public Builder clearSCFightCallFen() {
        result.hasSCFightCallFen = false;
        result.sCFightCallFen_ = com.randioo.doudizhu_server.protocol.Fight.SCFightCallFen.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.doudizhu_server.protocol.FightBackMenuResponse FightBackMenuResponse = 53;
      public boolean hasFightBackMenuResponse() {
        return result.hasFightBackMenuResponse();
      }
      public com.randioo.doudizhu_server.protocol.Fight.FightBackMenuResponse getFightBackMenuResponse() {
        return result.getFightBackMenuResponse();
      }
      public Builder setFightBackMenuResponse(com.randioo.doudizhu_server.protocol.Fight.FightBackMenuResponse value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasFightBackMenuResponse = true;
        result.fightBackMenuResponse_ = value;
        return this;
      }
      public Builder setFightBackMenuResponse(com.randioo.doudizhu_server.protocol.Fight.FightBackMenuResponse.Builder builderForValue) {
        result.hasFightBackMenuResponse = true;
        result.fightBackMenuResponse_ = builderForValue.build();
        return this;
      }
      public Builder mergeFightBackMenuResponse(com.randioo.doudizhu_server.protocol.Fight.FightBackMenuResponse value) {
        if (result.hasFightBackMenuResponse() &&
            result.fightBackMenuResponse_ != com.randioo.doudizhu_server.protocol.Fight.FightBackMenuResponse.getDefaultInstance()) {
          result.fightBackMenuResponse_ =
            com.randioo.doudizhu_server.protocol.Fight.FightBackMenuResponse.newBuilder(result.fightBackMenuResponse_).mergeFrom(value).buildPartial();
        } else {
          result.fightBackMenuResponse_ = value;
        }
        result.hasFightBackMenuResponse = true;
        return this;
      }
      public Builder clearFightBackMenuResponse() {
        result.hasFightBackMenuResponse = false;
        result.fightBackMenuResponse_ = com.randioo.doudizhu_server.protocol.Fight.FightBackMenuResponse.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.doudizhu_server.protocol.SCFightCurrentScore SCFightCurrentScore = 54;
      public boolean hasSCFightCurrentScore() {
        return result.hasSCFightCurrentScore();
      }
      public com.randioo.doudizhu_server.protocol.Fight.SCFightCurrentScore getSCFightCurrentScore() {
        return result.getSCFightCurrentScore();
      }
      public Builder setSCFightCurrentScore(com.randioo.doudizhu_server.protocol.Fight.SCFightCurrentScore value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasSCFightCurrentScore = true;
        result.sCFightCurrentScore_ = value;
        return this;
      }
      public Builder setSCFightCurrentScore(com.randioo.doudizhu_server.protocol.Fight.SCFightCurrentScore.Builder builderForValue) {
        result.hasSCFightCurrentScore = true;
        result.sCFightCurrentScore_ = builderForValue.build();
        return this;
      }
      public Builder mergeSCFightCurrentScore(com.randioo.doudizhu_server.protocol.Fight.SCFightCurrentScore value) {
        if (result.hasSCFightCurrentScore() &&
            result.sCFightCurrentScore_ != com.randioo.doudizhu_server.protocol.Fight.SCFightCurrentScore.getDefaultInstance()) {
          result.sCFightCurrentScore_ =
            com.randioo.doudizhu_server.protocol.Fight.SCFightCurrentScore.newBuilder(result.sCFightCurrentScore_).mergeFrom(value).buildPartial();
        } else {
          result.sCFightCurrentScore_ = value;
        }
        result.hasSCFightCurrentScore = true;
        return this;
      }
      public Builder clearSCFightCurrentScore() {
        result.hasSCFightCurrentScore = false;
        result.sCFightCurrentScore_ = com.randioo.doudizhu_server.protocol.Fight.SCFightCurrentScore.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.doudizhu_server.protocol.FightGameInfoResponse FightGameInfoResponse = 55;
      public boolean hasFightGameInfoResponse() {
        return result.hasFightGameInfoResponse();
      }
      public com.randioo.doudizhu_server.protocol.Fight.FightGameInfoResponse getFightGameInfoResponse() {
        return result.getFightGameInfoResponse();
      }
      public Builder setFightGameInfoResponse(com.randioo.doudizhu_server.protocol.Fight.FightGameInfoResponse value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasFightGameInfoResponse = true;
        result.fightGameInfoResponse_ = value;
        return this;
      }
      public Builder setFightGameInfoResponse(com.randioo.doudizhu_server.protocol.Fight.FightGameInfoResponse.Builder builderForValue) {
        result.hasFightGameInfoResponse = true;
        result.fightGameInfoResponse_ = builderForValue.build();
        return this;
      }
      public Builder mergeFightGameInfoResponse(com.randioo.doudizhu_server.protocol.Fight.FightGameInfoResponse value) {
        if (result.hasFightGameInfoResponse() &&
            result.fightGameInfoResponse_ != com.randioo.doudizhu_server.protocol.Fight.FightGameInfoResponse.getDefaultInstance()) {
          result.fightGameInfoResponse_ =
            com.randioo.doudizhu_server.protocol.Fight.FightGameInfoResponse.newBuilder(result.fightGameInfoResponse_).mergeFrom(value).buildPartial();
        } else {
          result.fightGameInfoResponse_ = value;
        }
        result.hasFightGameInfoResponse = true;
        return this;
      }
      public Builder clearFightGameInfoResponse() {
        result.hasFightGameInfoResponse = false;
        result.fightGameInfoResponse_ = com.randioo.doudizhu_server.protocol.Fight.FightGameInfoResponse.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.doudizhu_server.protocol.SCFightMingPaiOnOrOff SCFightMingPaiOnOrOff = 56;
      public boolean hasSCFightMingPaiOnOrOff() {
        return result.hasSCFightMingPaiOnOrOff();
      }
      public com.randioo.doudizhu_server.protocol.Fight.SCFightMingPaiOnOrOff getSCFightMingPaiOnOrOff() {
        return result.getSCFightMingPaiOnOrOff();
      }
      public Builder setSCFightMingPaiOnOrOff(com.randioo.doudizhu_server.protocol.Fight.SCFightMingPaiOnOrOff value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasSCFightMingPaiOnOrOff = true;
        result.sCFightMingPaiOnOrOff_ = value;
        return this;
      }
      public Builder setSCFightMingPaiOnOrOff(com.randioo.doudizhu_server.protocol.Fight.SCFightMingPaiOnOrOff.Builder builderForValue) {
        result.hasSCFightMingPaiOnOrOff = true;
        result.sCFightMingPaiOnOrOff_ = builderForValue.build();
        return this;
      }
      public Builder mergeSCFightMingPaiOnOrOff(com.randioo.doudizhu_server.protocol.Fight.SCFightMingPaiOnOrOff value) {
        if (result.hasSCFightMingPaiOnOrOff() &&
            result.sCFightMingPaiOnOrOff_ != com.randioo.doudizhu_server.protocol.Fight.SCFightMingPaiOnOrOff.getDefaultInstance()) {
          result.sCFightMingPaiOnOrOff_ =
            com.randioo.doudizhu_server.protocol.Fight.SCFightMingPaiOnOrOff.newBuilder(result.sCFightMingPaiOnOrOff_).mergeFrom(value).buildPartial();
        } else {
          result.sCFightMingPaiOnOrOff_ = value;
        }
        result.hasSCFightMingPaiOnOrOff = true;
        return this;
      }
      public Builder clearSCFightMingPaiOnOrOff() {
        result.hasSCFightMingPaiOnOrOff = false;
        result.sCFightMingPaiOnOrOff_ = com.randioo.doudizhu_server.protocol.Fight.SCFightMingPaiOnOrOff.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.doudizhu_server.protocol.SCFightSpring SCFightSpring = 57;
      public boolean hasSCFightSpring() {
        return result.hasSCFightSpring();
      }
      public com.randioo.doudizhu_server.protocol.Fight.SCFightSpring getSCFightSpring() {
        return result.getSCFightSpring();
      }
      public Builder setSCFightSpring(com.randioo.doudizhu_server.protocol.Fight.SCFightSpring value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasSCFightSpring = true;
        result.sCFightSpring_ = value;
        return this;
      }
      public Builder setSCFightSpring(com.randioo.doudizhu_server.protocol.Fight.SCFightSpring.Builder builderForValue) {
        result.hasSCFightSpring = true;
        result.sCFightSpring_ = builderForValue.build();
        return this;
      }
      public Builder mergeSCFightSpring(com.randioo.doudizhu_server.protocol.Fight.SCFightSpring value) {
        if (result.hasSCFightSpring() &&
            result.sCFightSpring_ != com.randioo.doudizhu_server.protocol.Fight.SCFightSpring.getDefaultInstance()) {
          result.sCFightSpring_ =
            com.randioo.doudizhu_server.protocol.Fight.SCFightSpring.newBuilder(result.sCFightSpring_).mergeFrom(value).buildPartial();
        } else {
          result.sCFightSpring_ = value;
        }
        result.hasSCFightSpring = true;
        return this;
      }
      public Builder clearSCFightSpring() {
        result.hasSCFightSpring = false;
        result.sCFightSpring_ = com.randioo.doudizhu_server.protocol.Fight.SCFightSpring.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.doudizhu_server.protocol.MoneyExchangeResponse MoneyExchangeResponse = 58;
      public boolean hasMoneyExchangeResponse() {
        return result.hasMoneyExchangeResponse();
      }
      public com.randioo.doudizhu_server.protocol.MoneyExchange.MoneyExchangeResponse getMoneyExchangeResponse() {
        return result.getMoneyExchangeResponse();
      }
      public Builder setMoneyExchangeResponse(com.randioo.doudizhu_server.protocol.MoneyExchange.MoneyExchangeResponse value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasMoneyExchangeResponse = true;
        result.moneyExchangeResponse_ = value;
        return this;
      }
      public Builder setMoneyExchangeResponse(com.randioo.doudizhu_server.protocol.MoneyExchange.MoneyExchangeResponse.Builder builderForValue) {
        result.hasMoneyExchangeResponse = true;
        result.moneyExchangeResponse_ = builderForValue.build();
        return this;
      }
      public Builder mergeMoneyExchangeResponse(com.randioo.doudizhu_server.protocol.MoneyExchange.MoneyExchangeResponse value) {
        if (result.hasMoneyExchangeResponse() &&
            result.moneyExchangeResponse_ != com.randioo.doudizhu_server.protocol.MoneyExchange.MoneyExchangeResponse.getDefaultInstance()) {
          result.moneyExchangeResponse_ =
            com.randioo.doudizhu_server.protocol.MoneyExchange.MoneyExchangeResponse.newBuilder(result.moneyExchangeResponse_).mergeFrom(value).buildPartial();
        } else {
          result.moneyExchangeResponse_ = value;
        }
        result.hasMoneyExchangeResponse = true;
        return this;
      }
      public Builder clearMoneyExchangeResponse() {
        result.hasMoneyExchangeResponse = false;
        result.moneyExchangeResponse_ = com.randioo.doudizhu_server.protocol.MoneyExchange.MoneyExchangeResponse.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.doudizhu_server.protocol.SettingsResponse SettingsResponse = 59;
      public boolean hasSettingsResponse() {
        return result.hasSettingsResponse();
      }
      public com.randioo.doudizhu_server.protocol.Settings.SettingsResponse getSettingsResponse() {
        return result.getSettingsResponse();
      }
      public Builder setSettingsResponse(com.randioo.doudizhu_server.protocol.Settings.SettingsResponse value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasSettingsResponse = true;
        result.settingsResponse_ = value;
        return this;
      }
      public Builder setSettingsResponse(com.randioo.doudizhu_server.protocol.Settings.SettingsResponse.Builder builderForValue) {
        result.hasSettingsResponse = true;
        result.settingsResponse_ = builderForValue.build();
        return this;
      }
      public Builder mergeSettingsResponse(com.randioo.doudizhu_server.protocol.Settings.SettingsResponse value) {
        if (result.hasSettingsResponse() &&
            result.settingsResponse_ != com.randioo.doudizhu_server.protocol.Settings.SettingsResponse.getDefaultInstance()) {
          result.settingsResponse_ =
            com.randioo.doudizhu_server.protocol.Settings.SettingsResponse.newBuilder(result.settingsResponse_).mergeFrom(value).buildPartial();
        } else {
          result.settingsResponse_ = value;
        }
        result.hasSettingsResponse = true;
        return this;
      }
      public Builder clearSettingsResponse() {
        result.hasSettingsResponse = false;
        result.settingsResponse_ = com.randioo.doudizhu_server.protocol.Settings.SettingsResponse.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.doudizhu_server.protocol.GetRoleDataResponse GetRoleDataResponse = 60;
      public boolean hasGetRoleDataResponse() {
        return result.hasGetRoleDataResponse();
      }
      public com.randioo.doudizhu_server.protocol.Role.GetRoleDataResponse getGetRoleDataResponse() {
        return result.getGetRoleDataResponse();
      }
      public Builder setGetRoleDataResponse(com.randioo.doudizhu_server.protocol.Role.GetRoleDataResponse value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasGetRoleDataResponse = true;
        result.getRoleDataResponse_ = value;
        return this;
      }
      public Builder setGetRoleDataResponse(com.randioo.doudizhu_server.protocol.Role.GetRoleDataResponse.Builder builderForValue) {
        result.hasGetRoleDataResponse = true;
        result.getRoleDataResponse_ = builderForValue.build();
        return this;
      }
      public Builder mergeGetRoleDataResponse(com.randioo.doudizhu_server.protocol.Role.GetRoleDataResponse value) {
        if (result.hasGetRoleDataResponse() &&
            result.getRoleDataResponse_ != com.randioo.doudizhu_server.protocol.Role.GetRoleDataResponse.getDefaultInstance()) {
          result.getRoleDataResponse_ =
            com.randioo.doudizhu_server.protocol.Role.GetRoleDataResponse.newBuilder(result.getRoleDataResponse_).mergeFrom(value).buildPartial();
        } else {
          result.getRoleDataResponse_ = value;
        }
        result.hasGetRoleDataResponse = true;
        return this;
      }
      public Builder clearGetRoleDataResponse() {
        result.hasGetRoleDataResponse = false;
        result.getRoleDataResponse_ = com.randioo.doudizhu_server.protocol.Role.GetRoleDataResponse.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.doudizhu_server.protocol.GetSettingsResponse GetSettingsResponse = 61;
      public boolean hasGetSettingsResponse() {
        return result.hasGetSettingsResponse();
      }
      public com.randioo.doudizhu_server.protocol.Settings.GetSettingsResponse getGetSettingsResponse() {
        return result.getGetSettingsResponse();
      }
      public Builder setGetSettingsResponse(com.randioo.doudizhu_server.protocol.Settings.GetSettingsResponse value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasGetSettingsResponse = true;
        result.getSettingsResponse_ = value;
        return this;
      }
      public Builder setGetSettingsResponse(com.randioo.doudizhu_server.protocol.Settings.GetSettingsResponse.Builder builderForValue) {
        result.hasGetSettingsResponse = true;
        result.getSettingsResponse_ = builderForValue.build();
        return this;
      }
      public Builder mergeGetSettingsResponse(com.randioo.doudizhu_server.protocol.Settings.GetSettingsResponse value) {
        if (result.hasGetSettingsResponse() &&
            result.getSettingsResponse_ != com.randioo.doudizhu_server.protocol.Settings.GetSettingsResponse.getDefaultInstance()) {
          result.getSettingsResponse_ =
            com.randioo.doudizhu_server.protocol.Settings.GetSettingsResponse.newBuilder(result.getSettingsResponse_).mergeFrom(value).buildPartial();
        } else {
          result.getSettingsResponse_ = value;
        }
        result.hasGetSettingsResponse = true;
        return this;
      }
      public Builder clearGetSettingsResponse() {
        result.hasGetSettingsResponse = false;
        result.getSettingsResponse_ = com.randioo.doudizhu_server.protocol.Settings.GetSettingsResponse.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.doudizhu_server.protocol.HeartbeatResponse HeartbeatResponse = 62;
      public boolean hasHeartbeatResponse() {
        return result.hasHeartbeatResponse();
      }
      public com.randioo.doudizhu_server.protocol.Heartbeat.HeartbeatResponse getHeartbeatResponse() {
        return result.getHeartbeatResponse();
      }
      public Builder setHeartbeatResponse(com.randioo.doudizhu_server.protocol.Heartbeat.HeartbeatResponse value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasHeartbeatResponse = true;
        result.heartbeatResponse_ = value;
        return this;
      }
      public Builder setHeartbeatResponse(com.randioo.doudizhu_server.protocol.Heartbeat.HeartbeatResponse.Builder builderForValue) {
        result.hasHeartbeatResponse = true;
        result.heartbeatResponse_ = builderForValue.build();
        return this;
      }
      public Builder mergeHeartbeatResponse(com.randioo.doudizhu_server.protocol.Heartbeat.HeartbeatResponse value) {
        if (result.hasHeartbeatResponse() &&
            result.heartbeatResponse_ != com.randioo.doudizhu_server.protocol.Heartbeat.HeartbeatResponse.getDefaultInstance()) {
          result.heartbeatResponse_ =
            com.randioo.doudizhu_server.protocol.Heartbeat.HeartbeatResponse.newBuilder(result.heartbeatResponse_).mergeFrom(value).buildPartial();
        } else {
          result.heartbeatResponse_ = value;
        }
        result.hasHeartbeatResponse = true;
        return this;
      }
      public Builder clearHeartbeatResponse() {
        result.hasHeartbeatResponse = false;
        result.heartbeatResponse_ = com.randioo.doudizhu_server.protocol.Heartbeat.HeartbeatResponse.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.doudizhu_server.protocol.VideoGetResponse VideoGetResponse = 63;
      public boolean hasVideoGetResponse() {
        return result.hasVideoGetResponse();
      }
      public com.randioo.doudizhu_server.protocol.Video.VideoGetResponse getVideoGetResponse() {
        return result.getVideoGetResponse();
      }
      public Builder setVideoGetResponse(com.randioo.doudizhu_server.protocol.Video.VideoGetResponse value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasVideoGetResponse = true;
        result.videoGetResponse_ = value;
        return this;
      }
      public Builder setVideoGetResponse(com.randioo.doudizhu_server.protocol.Video.VideoGetResponse.Builder builderForValue) {
        result.hasVideoGetResponse = true;
        result.videoGetResponse_ = builderForValue.build();
        return this;
      }
      public Builder mergeVideoGetResponse(com.randioo.doudizhu_server.protocol.Video.VideoGetResponse value) {
        if (result.hasVideoGetResponse() &&
            result.videoGetResponse_ != com.randioo.doudizhu_server.protocol.Video.VideoGetResponse.getDefaultInstance()) {
          result.videoGetResponse_ =
            com.randioo.doudizhu_server.protocol.Video.VideoGetResponse.newBuilder(result.videoGetResponse_).mergeFrom(value).buildPartial();
        } else {
          result.videoGetResponse_ = value;
        }
        result.hasVideoGetResponse = true;
        return this;
      }
      public Builder clearVideoGetResponse() {
        result.hasVideoGetResponse = false;
        result.videoGetResponse_ = com.randioo.doudizhu_server.protocol.Video.VideoGetResponse.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.doudizhu_server.protocol.VideoGetByIdResponse VideoGetByIdResponse = 64;
      public boolean hasVideoGetByIdResponse() {
        return result.hasVideoGetByIdResponse();
      }
      public com.randioo.doudizhu_server.protocol.Video.VideoGetByIdResponse getVideoGetByIdResponse() {
        return result.getVideoGetByIdResponse();
      }
      public Builder setVideoGetByIdResponse(com.randioo.doudizhu_server.protocol.Video.VideoGetByIdResponse value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasVideoGetByIdResponse = true;
        result.videoGetByIdResponse_ = value;
        return this;
      }
      public Builder setVideoGetByIdResponse(com.randioo.doudizhu_server.protocol.Video.VideoGetByIdResponse.Builder builderForValue) {
        result.hasVideoGetByIdResponse = true;
        result.videoGetByIdResponse_ = builderForValue.build();
        return this;
      }
      public Builder mergeVideoGetByIdResponse(com.randioo.doudizhu_server.protocol.Video.VideoGetByIdResponse value) {
        if (result.hasVideoGetByIdResponse() &&
            result.videoGetByIdResponse_ != com.randioo.doudizhu_server.protocol.Video.VideoGetByIdResponse.getDefaultInstance()) {
          result.videoGetByIdResponse_ =
            com.randioo.doudizhu_server.protocol.Video.VideoGetByIdResponse.newBuilder(result.videoGetByIdResponse_).mergeFrom(value).buildPartial();
        } else {
          result.videoGetByIdResponse_ = value;
        }
        result.hasVideoGetByIdResponse = true;
        return this;
      }
      public Builder clearVideoGetByIdResponse() {
        result.hasVideoGetByIdResponse = false;
        result.videoGetByIdResponse_ = com.randioo.doudizhu_server.protocol.Video.VideoGetByIdResponse.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.doudizhu_server.protocol.VideoGetByRoundResponse VideoGetByRoundResponse = 65;
      public boolean hasVideoGetByRoundResponse() {
        return result.hasVideoGetByRoundResponse();
      }
      public com.randioo.doudizhu_server.protocol.Video.VideoGetByRoundResponse getVideoGetByRoundResponse() {
        return result.getVideoGetByRoundResponse();
      }
      public Builder setVideoGetByRoundResponse(com.randioo.doudizhu_server.protocol.Video.VideoGetByRoundResponse value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasVideoGetByRoundResponse = true;
        result.videoGetByRoundResponse_ = value;
        return this;
      }
      public Builder setVideoGetByRoundResponse(com.randioo.doudizhu_server.protocol.Video.VideoGetByRoundResponse.Builder builderForValue) {
        result.hasVideoGetByRoundResponse = true;
        result.videoGetByRoundResponse_ = builderForValue.build();
        return this;
      }
      public Builder mergeVideoGetByRoundResponse(com.randioo.doudizhu_server.protocol.Video.VideoGetByRoundResponse value) {
        if (result.hasVideoGetByRoundResponse() &&
            result.videoGetByRoundResponse_ != com.randioo.doudizhu_server.protocol.Video.VideoGetByRoundResponse.getDefaultInstance()) {
          result.videoGetByRoundResponse_ =
            com.randioo.doudizhu_server.protocol.Video.VideoGetByRoundResponse.newBuilder(result.videoGetByRoundResponse_).mergeFrom(value).buildPartial();
        } else {
          result.videoGetByRoundResponse_ = value;
        }
        result.hasVideoGetByRoundResponse = true;
        return this;
      }
      public Builder clearVideoGetByRoundResponse() {
        result.hasVideoGetByRoundResponse = false;
        result.videoGetByRoundResponse_ = com.randioo.doudizhu_server.protocol.Video.VideoGetByRoundResponse.getDefaultInstance();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.randioo.doudizhu_server.protocol.SC)
    }
    
    static {
      defaultInstance = new SC(true);
      com.randioo.doudizhu_server.protocol.ServerMessage.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.randioo.doudizhu_server.protocol.SC)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_randioo_doudizhu_server_protocol_SC_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_randioo_doudizhu_server_protocol_SC_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\023ServerMessage.proto\022$com.randioo.doudi" +
      "zhu_server.protocol\032\013Login.proto\032\nRole.p" +
      "roto\032\013Match.proto\032\013Fight.proto\032\023MoneyExc" +
      "hange.proto\032\016Settings.proto\032\017Heartbeat.p" +
      "roto\032\013Video.proto\032\013Heart.proto\"\342+\n\002SC\022J\n" +
      "\rHeartResponse\030\001 \001(\01323.com.randioo.doudi" +
      "zhu_server.protocol.HeartResponse\022>\n\007SCH" +
      "eart\030\002 \001(\0132-.com.randioo.doudizhu_server" +
      ".protocol.SCHeart\022b\n\031LoginCheckAccountRe" +
      "sponse\030\003 \001(\0132?.com.randioo.doudizhu_serv",
      "er.protocol.LoginCheckAccountResponse\022^\n" +
      "\027LoginCreateRoleResponse\030\004 \001(\0132=.com.ran" +
      "dioo.doudizhu_server.protocol.LoginCreat" +
      "eRoleResponse\022`\n\030LoginGetRoleDataRespons" +
      "e\030\005 \001(\0132>.com.randioo.doudizhu_server.pr" +
      "otocol.LoginGetRoleDataResponse\022T\n\022SCLog" +
      "inGetRoleData\030\006 \001(\01328.com.randioo.doudiz" +
      "hu_server.protocol.SCLoginGetRoleData\022P\n" +
      "\020SCLoginOtherSide\030\007 \001(\01326.com.randioo.do" +
      "udizhu_server.protocol.SCLoginOtherSide\022",
      "T\n\022RoleRenameResponse\030\010 \001(\01328.com.randio" +
      "o.doudizhu_server.protocol.RoleRenameRes" +
      "ponse\022^\n\027MatchCreateGameResponse\030\t \001(\0132=" +
      ".com.randioo.doudizhu_server.protocol.Ma" +
      "tchCreateGameResponse\022Z\n\025MatchJoinGameRe" +
      "sponse\030\n \001(\0132;.com.randioo.doudizhu_serv" +
      "er.protocol.MatchJoinGameResponse\022N\n\017SCM" +
      "atchJoinGame\030\013 \001(\01325.com.randioo.doudizh" +
      "u_server.protocol.SCMatchJoinGame\022R\n\021Mat" +
      "chRoleResponse\030\014 \001(\01327.com.randioo.doudi",
      "zhu_server.protocol.MatchRoleResponse\022F\n" +
      "\013SCMatchRole\030\r \001(\01321.com.randioo.doudizh" +
      "u_server.protocol.SCMatchRole\022V\n\023MatchCa" +
      "ncelResponse\030\016 \001(\01329.com.randioo.doudizh" +
      "u_server.protocol.MatchCancelResponse\022R\n" +
      "\021SCMatchCreateGame\030\017 \001(\01327.com.randioo.d" +
      "oudizhu_server.protocol.SCMatchCreateGam" +
      "e\022B\n\tSCMatchAI\030\020 \001(\0132/.com.randioo.doudi" +
      "zhu_server.protocol.SCMatchAI\022V\n\023SCMatch" +
      "JoinGameData\030\021 \001(\01329.com.randioo.doudizh",
      "u_server.protocol.SCMatchJoinGameData\022N\n" +
      "\017MatchAIResponse\030\022 \001(\01325.com.randioo.dou" +
      "dizhu_server.protocol.MatchAIResponse\022P\n" +
      "\020SCMatchOutOfTime\030\023 \001(\01326.com.randioo.do" +
      "udizhu_server.protocol.SCMatchOutOfTime\022" +
      "R\n\021SCMatchCancelGame\030\024 \001(\01327.com.randioo" +
      ".doudizhu_server.protocol.SCMatchCancelG" +
      "ame\022`\n\030MatchGetGameInfoResponse\030\025 \001(\0132>." +
      "com.randioo.doudizhu_server.protocol.Mat" +
      "chGetGameInfoResponse\022T\n\022FightReadyRespo",
      "nse\030\026 \001(\01328.com.randioo.doudizhu_server." +
      "protocol.FightReadyResponse\022H\n\014SCFightRe" +
      "ady\030\027 \001(\01322.com.randioo.doudizhu_server." +
      "protocol.SCFightReady\022H\n\014SCFightStart\030\030 " +
      "\001(\01322.com.randioo.doudizhu_server.protoc" +
      "ol.SCFightStart\022Z\n\025FightExitGameResponse" +
      "\030\031 \001(\0132;.com.randioo.doudizhu_server.pro" +
      "tocol.FightExitGameResponse\022N\n\017SCFightEx" +
      "itGame\030\032 \001(\01325.com.randioo.doudizhu_serv" +
      "er.protocol.SCFightExitGame\022X\n\024SCFightAp",
      "plyExitGame\030\033 \001(\0132:.com.randioo.doudizhu" +
      "_server.protocol.SCFightApplyExitGame\022d\n" +
      "\032FightAgreeExitGameResponse\030\034 \001(\0132@.com." +
      "randioo.doudizhu_server.protocol.FightAg" +
      "reeExitGameResponse\022T\n\022SCFightGameDismis" +
      "s\030\035 \001(\01328.com.randioo.doudizhu_server.pr" +
      "otocol.SCFightGameDismiss\022V\n\023SCFightLoad" +
      "Resource\030\036 \001(\01329.com.randioo.doudizhu_se" +
      "rver.protocol.SCFightLoadResource\022V\n\023SCF" +
      "ightCallLandLord\030\037 \001(\01329.com.randioo.dou",
      "dizhu_server.protocol.SCFightCallLandLor" +
      "d\022J\n\rSCFightPutOut\030  \001(\01323.com.randioo.d" +
      "oudizhu_server.protocol.SCFightPutOut\022N\n" +
      "\017SCFightLandLord\030! \001(\01325.com.randioo.dou" +
      "dizhu_server.protocol.SCFightLandLord\022b\n" +
      "\031FightCallLandLordResponse\030\" \001(\0132?.com.r" +
      "andioo.doudizhu_server.protocol.FightCal" +
      "lLandLordResponse\022Z\n\025FightSendCardRespon" +
      "se\030# \001(\0132;.com.randioo.doudizhu_server.p" +
      "rotocol.FightSendCardResponse\022P\n\020SCFight",
      "PutOutPai\030$ \001(\01326.com.randioo.doudizhu_s" +
      "erver.protocol.SCFightPutOutPai\022L\n\016SCFig" +
      "htMingPai\030% \001(\01324.com.randioo.doudizhu_s" +
      "erver.protocol.SCFightMingPai\022P\n\020SCFight" +
      "RoundOver\030& \001(\01326.com.randioo.doudizhu_s" +
      "erver.protocol.SCFightRoundOver\022\\\n\026Fight" +
      "RecommandResponse\030\' \001(\0132<.com.randioo.do" +
      "udizhu_server.protocol.FightRecommandRes" +
      "ponse\022N\n\017SCFightGameOver\030( \001(\01325.com.ran" +
      "dioo.doudizhu_server.protocol.SCFightGam",
      "eOver\022X\n\024FightMingPaiResponse\030) \001(\0132:.co" +
      "m.randioo.doudizhu_server.protocol.Fight" +
      "MingPaiResponse\022b\n\031FightGetlastRoundResp" +
      "onse\030* \001(\0132?.com.randioo.doudizhu_server" +
      ".protocol.FightGetlastRoundResponse\022Z\n\025S" +
      "CFightLastRoundReady\030+ \001(\0132;.com.randioo" +
      ".doudizhu_server.protocol.SCFightLastRou" +
      "ndReady\022V\n\023FightRejoinResponse\030, \001(\01329.c" +
      "om.randioo.doudizhu_server.protocol.Figh" +
      "tRejoinResponse\022R\n\021SCFightDisconnect\030- \001",
      "(\01327.com.randioo.doudizhu_server.protoco" +
      "l.SCFightDisconnect\022J\n\rSCFightRejoin\030. \001" +
      "(\01323.com.randioo.doudizhu_server.protoco" +
      "l.SCFightRejoin\022\\\n\026SCFightApplyExitResul" +
      "t\030/ \001(\0132<.com.randioo.doudizhu_server.pr" +
      "otocol.SCFightApplyExitResult\022R\n\021FightAu" +
      "toResponse\0300 \001(\01327.com.randioo.doudizhu_" +
      "server.protocol.FightAutoResponse\022F\n\013SCF" +
      "ightAuto\0301 \001(\01321.com.randioo.doudizhu_se" +
      "rver.protocol.SCFightAuto\022V\n\023SCFightFini",
      "shRejoin\0302 \001(\01329.com.randioo.doudizhu_se" +
      "rver.protocol.SCFightFinishRejoin\022d\n\032Fig" +
      "htApplyExitGameResponse\0303 \001(\0132@.com.rand" +
      "ioo.doudizhu_server.protocol.FightApplyE" +
      "xitGameResponse\022L\n\016SCFightCallFen\0304 \001(\0132" +
      "4.com.randioo.doudizhu_server.protocol.S" +
      "CFightCallFen\022Z\n\025FightBackMenuResponse\0305" +
      " \001(\0132;.com.randioo.doudizhu_server.proto" +
      "col.FightBackMenuResponse\022V\n\023SCFightCurr" +
      "entScore\0306 \001(\01329.com.randioo.doudizhu_se",
      "rver.protocol.SCFightCurrentScore\022Z\n\025Fig" +
      "htGameInfoResponse\0307 \001(\0132;.com.randioo.d" +
      "oudizhu_server.protocol.FightGameInfoRes" +
      "ponse\022Z\n\025SCFightMingPaiOnOrOff\0308 \001(\0132;.c" +
      "om.randioo.doudizhu_server.protocol.SCFi" +
      "ghtMingPaiOnOrOff\022J\n\rSCFightSpring\0309 \001(\013" +
      "23.com.randioo.doudizhu_server.protocol." +
      "SCFightSpring\022Z\n\025MoneyExchangeResponse\030:" +
      " \001(\0132;.com.randioo.doudizhu_server.proto" +
      "col.MoneyExchangeResponse\022P\n\020SettingsRes",
      "ponse\030; \001(\01326.com.randioo.doudizhu_serve" +
      "r.protocol.SettingsResponse\022V\n\023GetRoleDa" +
      "taResponse\030< \001(\01329.com.randioo.doudizhu_" +
      "server.protocol.GetRoleDataResponse\022V\n\023G" +
      "etSettingsResponse\030= \001(\01329.com.randioo.d" +
      "oudizhu_server.protocol.GetSettingsRespo" +
      "nse\022R\n\021HeartbeatResponse\030> \001(\01327.com.ran" +
      "dioo.doudizhu_server.protocol.HeartbeatR" +
      "esponse\022P\n\020VideoGetResponse\030? \001(\01326.com." +
      "randioo.doudizhu_server.protocol.VideoGe",
      "tResponse\022X\n\024VideoGetByIdResponse\030@ \001(\0132" +
      ":.com.randioo.doudizhu_server.protocol.V" +
      "ideoGetByIdResponse\022^\n\027VideoGetByRoundRe" +
      "sponse\030A \001(\0132=.com.randioo.doudizhu_serv" +
      "er.protocol.VideoGetByRoundResponse"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_com_randioo_doudizhu_server_protocol_SC_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_com_randioo_doudizhu_server_protocol_SC_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_randioo_doudizhu_server_protocol_SC_descriptor,
              new java.lang.String[] { "HeartResponse", "SCHeart", "LoginCheckAccountResponse", "LoginCreateRoleResponse", "LoginGetRoleDataResponse", "SCLoginGetRoleData", "SCLoginOtherSide", "RoleRenameResponse", "MatchCreateGameResponse", "MatchJoinGameResponse", "SCMatchJoinGame", "MatchRoleResponse", "SCMatchRole", "MatchCancelResponse", "SCMatchCreateGame", "SCMatchAI", "SCMatchJoinGameData", "MatchAIResponse", "SCMatchOutOfTime", "SCMatchCancelGame", "MatchGetGameInfoResponse", "FightReadyResponse", "SCFightReady", "SCFightStart", "FightExitGameResponse", "SCFightExitGame", "SCFightApplyExitGame", "FightAgreeExitGameResponse", "SCFightGameDismiss", "SCFightLoadResource", "SCFightCallLandLord", "SCFightPutOut", "SCFightLandLord", "FightCallLandLordResponse", "FightSendCardResponse", "SCFightPutOutPai", "SCFightMingPai", "SCFightRoundOver", "FightRecommandResponse", "SCFightGameOver", "FightMingPaiResponse", "FightGetlastRoundResponse", "SCFightLastRoundReady", "FightRejoinResponse", "SCFightDisconnect", "SCFightRejoin", "SCFightApplyExitResult", "FightAutoResponse", "SCFightAuto", "SCFightFinishRejoin", "FightApplyExitGameResponse", "SCFightCallFen", "FightBackMenuResponse", "SCFightCurrentScore", "FightGameInfoResponse", "SCFightMingPaiOnOrOff", "SCFightSpring", "MoneyExchangeResponse", "SettingsResponse", "GetRoleDataResponse", "GetSettingsResponse", "HeartbeatResponse", "VideoGetResponse", "VideoGetByIdResponse", "VideoGetByRoundResponse", },
              com.randioo.doudizhu_server.protocol.ServerMessage.SC.class,
              com.randioo.doudizhu_server.protocol.ServerMessage.SC.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.randioo.doudizhu_server.protocol.Login.getDescriptor(),
          com.randioo.doudizhu_server.protocol.Role.getDescriptor(),
          com.randioo.doudizhu_server.protocol.Match.getDescriptor(),
          com.randioo.doudizhu_server.protocol.Fight.getDescriptor(),
          com.randioo.doudizhu_server.protocol.MoneyExchange.getDescriptor(),
          com.randioo.doudizhu_server.protocol.Settings.getDescriptor(),
          com.randioo.doudizhu_server.protocol.Heartbeat.getDescriptor(),
          com.randioo.doudizhu_server.protocol.Video.getDescriptor(),
          com.randioo.doudizhu_server.protocol.Heart.getDescriptor(),
        }, assigner);
  }
  
  public static void internalForceInit() {}
  
  // @@protoc_insertion_point(outer_class_scope)
}
